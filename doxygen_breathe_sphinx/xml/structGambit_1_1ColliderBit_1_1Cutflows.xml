<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="structGambit_1_1ColliderBit_1_1Cutflows" kind="struct" language="C++" prot="public">
    <compoundname>Gambit::ColliderBit::Cutflows</compoundname>
    <includes refid="Cutflow_8hpp" local="no">Cutflow.hpp</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structGambit_1_1ColliderBit_1_1Cutflows_1abc842e3dd0fa344c1efac361416aa032" prot="public" static="no" mutable="no">
        <type>vector&lt; <ref refid="structGambit_1_1ColliderBit_1_1Cutflow" kindref="compound">Cutflow</ref> &gt;</type>
        <definition>vector&lt;Cutflow&gt; Gambit::ColliderBit::Cutflows::cfs</definition>
        <argsstring></argsstring>
        <name>cfs</name>
        <qualifiedname>Gambit::ColliderBit::Cutflows::cfs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/include/gambit/ColliderBit/analyses/Cutflow.hpp" line="358" column="14" bodyfile="C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/include/gambit/ColliderBit/analyses/Cutflow.hpp" bodystart="358" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structGambit_1_1ColliderBit_1_1Cutflows_1acf8e58e1277ba76a41afbc61e6e937e8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Gambit::ColliderBit::Cutflows::Cutflows</definition>
        <argsstring>()</argsstring>
        <name>Cutflows</name>
        <qualifiedname>Gambit::ColliderBit::Cutflows::Cutflows</qualifiedname>
        <briefdescription>
<para>Do-nothing default constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/include/gambit/ColliderBit/analyses/Cutflow.hpp" line="219" column="7" bodyfile="C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/include/gambit/ColliderBit/analyses/Cutflow.hpp" bodystart="219" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="structGambit_1_1ColliderBit_1_1Cutflows_1ab7cd32e09b5fc64909b343df9baa2633" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Gambit::ColliderBit::Cutflows::Cutflows</definition>
        <argsstring>(const vector&lt; Cutflow &gt; &amp;cutflows)</argsstring>
        <name>Cutflows</name>
        <qualifiedname>Gambit::ColliderBit::Cutflows::Cutflows</qualifiedname>
        <param>
          <type>const vector&lt; <ref refid="structGambit_1_1ColliderBit_1_1Cutflow" kindref="compound">Cutflow</ref> &gt; &amp;</type>
          <declname>cutflows</declname>
        </param>
        <briefdescription>
<para>Populating constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/include/gambit/ColliderBit/analyses/Cutflow.hpp" line="222" column="7" bodyfile="C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/include/gambit/ColliderBit/analyses/Cutflow.hpp" bodystart="222" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="structGambit_1_1ColliderBit_1_1Cutflows_1a96a4ba04fe1a8335f0603c5f8f419a86" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::ColliderBit::Cutflows::addCutflow</definition>
        <argsstring>(const Cutflow &amp;cf)</argsstring>
        <name>addCutflow</name>
        <qualifiedname>Gambit::ColliderBit::Cutflows::addCutflow</qualifiedname>
        <param>
          <type>const <ref refid="structGambit_1_1ColliderBit_1_1Cutflow" kindref="compound">Cutflow</ref> &amp;</type>
          <declname>cf</declname>
        </param>
        <briefdescription>
<para>Append a provided <ref refid="structGambit_1_1ColliderBit_1_1Cutflow" kindref="compound">Cutflow</ref> to the list. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/include/gambit/ColliderBit/analyses/Cutflow.hpp" line="225" column="12" bodyfile="C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/include/gambit/ColliderBit/analyses/Cutflow.hpp" bodystart="225" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="structGambit_1_1ColliderBit_1_1Cutflows_1ae90dc005f5c5fa8bee497b4760749c05" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::ColliderBit::Cutflows::addCutflow</definition>
        <argsstring>(const string &amp;cfname, const vector&lt; string &gt; &amp;cutnames)</argsstring>
        <name>addCutflow</name>
        <qualifiedname>Gambit::ColliderBit::Cutflows::addCutflow</qualifiedname>
        <param>
          <type>const string &amp;</type>
          <declname>cfname</declname>
        </param>
        <param>
          <type>const vector&lt; string &gt; &amp;</type>
          <declname>cutnames</declname>
        </param>
        <briefdescription>
<para>Append a newly constructed <ref refid="structGambit_1_1ColliderBit_1_1Cutflow" kindref="compound">Cutflow</ref> to the list. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/include/gambit/ColliderBit/analyses/Cutflow.hpp" line="231" column="12" bodyfile="C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/include/gambit/ColliderBit/analyses/Cutflow.hpp" bodystart="231" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="structGambit_1_1ColliderBit_1_1Cutflows_1aa73462f4c28d4f7e90f73702e4ec2506" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structGambit_1_1ColliderBit_1_1Cutflow" kindref="compound">Cutflow</ref> &amp;</type>
        <definition>Cutflow &amp; Gambit::ColliderBit::Cutflows::operator[]</definition>
        <argsstring>(size_t i)</argsstring>
        <name>operator[]</name>
        <qualifiedname>Gambit::ColliderBit::Cutflows::operator[]</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Access the <emphasis>i&apos;th</emphasis> <ref refid="structGambit_1_1ColliderBit_1_1Cutflow" kindref="compound">Cutflow</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/include/gambit/ColliderBit/analyses/Cutflow.hpp" line="237" column="15" bodyfile="C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/include/gambit/ColliderBit/analyses/Cutflow.hpp" bodystart="237" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="structGambit_1_1ColliderBit_1_1Cutflows_1a809d5fd8f95d379279cd6af94d0b2cce" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="structGambit_1_1ColliderBit_1_1Cutflow" kindref="compound">Cutflow</ref> &amp;</type>
        <definition>const Cutflow &amp; Gambit::ColliderBit::Cutflows::operator[]</definition>
        <argsstring>(size_t i) const</argsstring>
        <name>operator[]</name>
        <qualifiedname>Gambit::ColliderBit::Cutflows::operator[]</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Access the <emphasis>i&apos;th</emphasis> <ref refid="structGambit_1_1ColliderBit_1_1Cutflow" kindref="compound">Cutflow</ref> (const) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/include/gambit/ColliderBit/analyses/Cutflow.hpp" line="239" column="21" bodyfile="C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/include/gambit/ColliderBit/analyses/Cutflow.hpp" bodystart="239" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="structGambit_1_1ColliderBit_1_1Cutflows_1a979a18988bc69dd28aac46ce4d6ea99f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structGambit_1_1ColliderBit_1_1Cutflow" kindref="compound">Cutflow</ref> &amp;</type>
        <definition>Cutflow &amp; Gambit::ColliderBit::Cutflows::operator[]</definition>
        <argsstring>(const string &amp;name)</argsstring>
        <name>operator[]</name>
        <qualifiedname>Gambit::ColliderBit::Cutflows::operator[]</qualifiedname>
        <param>
          <type>const string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Access the <ref refid="structGambit_1_1ColliderBit_1_1Cutflow" kindref="compound">Cutflow</ref> whose name is <emphasis>name</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/include/gambit/ColliderBit/analyses/Cutflow.hpp" line="242" column="15" bodyfile="C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/include/gambit/ColliderBit/analyses/Cutflow.hpp" bodystart="242" bodyend="248"/>
      </memberdef>
      <memberdef kind="function" id="structGambit_1_1ColliderBit_1_1Cutflows_1abb7ae82e3c9ec9852c17bb5e74f468c3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="structGambit_1_1ColliderBit_1_1Cutflow" kindref="compound">Cutflow</ref> &amp;</type>
        <definition>const Cutflow &amp; Gambit::ColliderBit::Cutflows::operator[]</definition>
        <argsstring>(const string &amp;name) const</argsstring>
        <name>operator[]</name>
        <qualifiedname>Gambit::ColliderBit::Cutflows::operator[]</qualifiedname>
        <param>
          <type>const string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Access the <emphasis>i&apos;th</emphasis> <ref refid="structGambit_1_1ColliderBit_1_1Cutflow" kindref="compound">Cutflow</ref> (const) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/include/gambit/ColliderBit/analyses/Cutflow.hpp" line="250" column="21" bodyfile="C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/include/gambit/ColliderBit/analyses/Cutflow.hpp" bodystart="250" bodyend="256"/>
      </memberdef>
      <memberdef kind="function" id="structGambit_1_1ColliderBit_1_1Cutflows_1acdd850ae2926db94a9bfdc41732649ce" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::ColliderBit::Cutflows::fillinit</definition>
        <argsstring>(double weight=1.)</argsstring>
        <name>fillinit</name>
        <qualifiedname>Gambit::ColliderBit::Cutflows::fillinit</qualifiedname>
        <param>
          <type>double</type>
          <declname>weight</declname>
          <defval>1.</defval>
        </param>
        <briefdescription>
<para>Fill the pre-cuts state counter for all contained {<ref refid="structGambit_1_1ColliderBit_1_1Cutflow" kindref="compound">Cutflow</ref>}s. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/include/gambit/ColliderBit/analyses/Cutflow.hpp" line="259" column="12" bodyfile="C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/include/gambit/ColliderBit/analyses/Cutflow.hpp" bodystart="259" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="structGambit_1_1ColliderBit_1_1Cutflows_1a058d5b8bcb66eaa8a2fd429a86b3d9a6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Gambit::ColliderBit::Cutflows::fill</definition>
        <argsstring>(size_t icut, bool cutresult=true, double weight=1.)</argsstring>
        <name>fill</name>
        <qualifiedname>Gambit::ColliderBit::Cutflows::fill</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>icut</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>cutresult</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>double</type>
          <declname>weight</declname>
          <defval>1.</defval>
        </param>
        <briefdescription>
<para>Fill the <emphasis>{icut}&apos;th</emphasis> post-cut counter, starting at icut=1 for first cut, with the same result for all {<ref refid="structGambit_1_1ColliderBit_1_1Cutflow" kindref="compound">Cutflow</ref>}s. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/include/gambit/ColliderBit/analyses/Cutflow.hpp" line="265" column="12" bodyfile="C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/include/gambit/ColliderBit/analyses/Cutflow.hpp" bodystart="265" bodyend="269"/>
      </memberdef>
      <memberdef kind="function" id="structGambit_1_1ColliderBit_1_1Cutflows_1af395eb2701a488fc08c6c3ff0bac465f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Gambit::ColliderBit::Cutflows::fill</definition>
        <argsstring>(size_t icut, double weight)</argsstring>
        <name>fill</name>
        <qualifiedname>Gambit::ColliderBit::Cutflows::fill</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>icut</declname>
        </param>
        <param>
          <type>double</type>
          <declname>weight</declname>
        </param>
        <briefdescription>
<para>Fill the <emphasis>{icut}&apos;th</emphasis> post-cut counter, starting at icut=1 for first cut, with the same result for all {<ref refid="structGambit_1_1ColliderBit_1_1Cutflow" kindref="compound">Cutflow</ref>}s (cutresult=true overload) </para>
        </briefdescription>
        <detaileddescription>
<para>This version exists to allow calling fill(i, weight) without the weight getting cast to a bool, or having to explicitly add a &apos;true&apos; middle arg.</para>
<para><simplesect kind="note"><para>Returns the cut result to allow &apos;side-effect&apos; cut-flow filling in an if-statement </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/include/gambit/ColliderBit/analyses/Cutflow.hpp" line="277" column="12" bodyfile="C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/include/gambit/ColliderBit/analyses/Cutflow.hpp" bodystart="277" bodyend="280"/>
      </memberdef>
      <memberdef kind="function" id="structGambit_1_1ColliderBit_1_1Cutflows_1ac0fd895b1f594fda5c861fd9d49ffc1d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Gambit::ColliderBit::Cutflows::fill</definition>
        <argsstring>(size_t icut, const vector&lt; bool &gt; &amp;cutresults, double weight=1.)</argsstring>
        <name>fill</name>
        <qualifiedname>Gambit::ColliderBit::Cutflows::fill</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>icut</declname>
        </param>
        <param>
          <type>const vector&lt; bool &gt; &amp;</type>
          <declname>cutresults</declname>
        </param>
        <param>
          <type>double</type>
          <declname>weight</declname>
          <defval>1.</defval>
        </param>
        <briefdescription>
<para>Fill cut-state counters from an n-element results vector, starting at icut. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Returns the overall cut result to allow &apos;side-effect&apos; cut-flow filling in an if-statement </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/include/gambit/ColliderBit/analyses/Cutflow.hpp" line="285" column="12" bodyfile="C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/include/gambit/ColliderBit/analyses/Cutflow.hpp" bodystart="285" bodyend="290"/>
      </memberdef>
      <memberdef kind="function" id="structGambit_1_1ColliderBit_1_1Cutflows_1a59dc55eaa75b07d3d731408e42fdb24f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Gambit::ColliderBit::Cutflows::fillall</definition>
        <argsstring>(const vector&lt; bool &gt; &amp;cutresults, double weight=1.)</argsstring>
        <name>fillall</name>
        <qualifiedname>Gambit::ColliderBit::Cutflows::fillall</qualifiedname>
        <param>
          <type>const vector&lt; bool &gt; &amp;</type>
          <declname>cutresults</declname>
        </param>
        <param>
          <type>double</type>
          <declname>weight</declname>
          <defval>1.</defval>
        </param>
        <briefdescription>
<para>Fill all cut-state counters from an Ncut-element results vector, starting at icut=1. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/include/gambit/ColliderBit/analyses/Cutflow.hpp" line="294" column="12" bodyfile="C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/include/gambit/ColliderBit/analyses/Cutflow.hpp" bodystart="294" bodyend="299"/>
      </memberdef>
      <memberdef kind="function" id="structGambit_1_1ColliderBit_1_1Cutflows_1a35bd99311ecfb3795085192c959569d8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Gambit::ColliderBit::Cutflows::fillnext</definition>
        <argsstring>(bool cutresult, double weight=1.)</argsstring>
        <name>fillnext</name>
        <qualifiedname>Gambit::ColliderBit::Cutflows::fillnext</qualifiedname>
        <param>
          <type>bool</type>
          <declname>cutresult</declname>
        </param>
        <param>
          <type>double</type>
          <declname>weight</declname>
          <defval>1.</defval>
        </param>
        <briefdescription>
<para>Fill the next post-cut counter. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Returns the cut result to allow &apos;side-effect&apos; cut-flow filling in an if-statement </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/include/gambit/ColliderBit/analyses/Cutflow.hpp" line="304" column="12" bodyfile="C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/include/gambit/ColliderBit/analyses/Cutflow.hpp" bodystart="304" bodyend="307"/>
      </memberdef>
      <memberdef kind="function" id="structGambit_1_1ColliderBit_1_1Cutflows_1adfe0c6448956e18d402f510076f26bc8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Gambit::ColliderBit::Cutflows::fillnext</definition>
        <argsstring>(double weight=1.)</argsstring>
        <name>fillnext</name>
        <qualifiedname>Gambit::ColliderBit::Cutflows::fillnext</qualifiedname>
        <param>
          <type>double</type>
          <declname>weight</declname>
          <defval>1.</defval>
        </param>
        <briefdescription>
<para>Fill the next post-cut counter, assuming a true result. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Returns the cut result to allow &apos;side-effect&apos; cut-flow filling in an if-statement </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/include/gambit/ColliderBit/analyses/Cutflow.hpp" line="312" column="12" bodyfile="C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/include/gambit/ColliderBit/analyses/Cutflow.hpp" bodystart="312" bodyend="316"/>
      </memberdef>
      <memberdef kind="function" id="structGambit_1_1ColliderBit_1_1Cutflows_1aeec61874c42d9436c9972067f1b05b78" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Gambit::ColliderBit::Cutflows::fillnext</definition>
        <argsstring>(const vector&lt; bool &gt; &amp;cutresults, double weight=1.)</argsstring>
        <name>fillnext</name>
        <qualifiedname>Gambit::ColliderBit::Cutflows::fillnext</qualifiedname>
        <param>
          <type>const vector&lt; bool &gt; &amp;</type>
          <declname>cutresults</declname>
        </param>
        <param>
          <type>double</type>
          <declname>weight</declname>
          <defval>1.</defval>
        </param>
        <briefdescription>
<para>Fill the next cut-state counters from an n-element results vector. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Returns the cut result to allow &apos;side-effect&apos; cut-flow filling in an if-statement </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/include/gambit/ColliderBit/analyses/Cutflow.hpp" line="321" column="12" bodyfile="C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/include/gambit/ColliderBit/analyses/Cutflow.hpp" bodystart="321" bodyend="326"/>
      </memberdef>
      <memberdef kind="function" id="structGambit_1_1ColliderBit_1_1Cutflows_1a1cc258eda7a087d72423dc0814aee10a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::ColliderBit::Cutflows::scale</definition>
        <argsstring>(double factor)</argsstring>
        <name>scale</name>
        <qualifiedname>Gambit::ColliderBit::Cutflows::scale</qualifiedname>
        <param>
          <type>double</type>
          <declname>factor</declname>
        </param>
        <briefdescription>
<para>Scale the contained {<ref refid="structGambit_1_1ColliderBit_1_1Cutflow" kindref="compound">Cutflow</ref>}s by the given factor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/include/gambit/ColliderBit/analyses/Cutflow.hpp" line="330" column="12" bodyfile="C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/include/gambit/ColliderBit/analyses/Cutflow.hpp" bodystart="330" bodyend="333"/>
      </memberdef>
      <memberdef kind="function" id="structGambit_1_1ColliderBit_1_1Cutflows_1a7fcf067fd2e9497a59a59947a6383b2b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::ColliderBit::Cutflows::normalize</definition>
        <argsstring>(double norm, size_t icut=0)</argsstring>
        <name>normalize</name>
        <qualifiedname>Gambit::ColliderBit::Cutflows::normalize</qualifiedname>
        <param>
          <type>double</type>
          <declname>norm</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>icut</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Scale the cutflow weights so that all the weight counts after cut <emphasis>icut</emphasis> are <emphasis>norm</emphasis> <xrefsect id="todo_1_todo000007"><xreftitle>Todo</xreftitle><xrefdescription><para>Provide a version that takes a vector of norms? </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/include/gambit/ColliderBit/analyses/Cutflow.hpp" line="337" column="12" bodyfile="C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/include/gambit/ColliderBit/analyses/Cutflow.hpp" bodystart="337" bodyend="340"/>
      </memberdef>
      <memberdef kind="function" id="structGambit_1_1ColliderBit_1_1Cutflows_1af53be58c6a790b3e6da3f84747e8a7bd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>string</type>
        <definition>string Gambit::ColliderBit::Cutflows::str</definition>
        <argsstring>() const</argsstring>
        <name>str</name>
        <qualifiedname>Gambit::ColliderBit::Cutflows::str</qualifiedname>
        <briefdescription>
<para>Create a string representation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/include/gambit/ColliderBit/analyses/Cutflow.hpp" line="343" column="14" bodyfile="C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/include/gambit/ColliderBit/analyses/Cutflow.hpp" bodystart="343" bodyend="349"/>
      </memberdef>
      <memberdef kind="function" id="structGambit_1_1ColliderBit_1_1Cutflows_1af74a832bac32e135e38035a32ca59d24" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::ColliderBit::Cutflows::print</definition>
        <argsstring>(std::ostream &amp;os) const</argsstring>
        <name>print</name>
        <qualifiedname>Gambit::ColliderBit::Cutflows::print</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <briefdescription>
<para>Print string representation to a stream. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/include/gambit/ColliderBit/analyses/Cutflow.hpp" line="352" column="12" bodyfile="C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/include/gambit/ColliderBit/analyses/Cutflow.hpp" bodystart="352" bodyend="355"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A container for several <ref refid="structGambit_1_1ColliderBit_1_1Cutflow" kindref="compound">Cutflow</ref> objects, with some convenient batch access. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/include/gambit/ColliderBit/analyses/Cutflow.hpp" line="215" column="5" bodyfile="C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/include/gambit/ColliderBit/analyses/Cutflow.hpp" bodystart="216" bodyend="360"/>
    <listofallmembers>
      <member refid="structGambit_1_1ColliderBit_1_1Cutflows_1a96a4ba04fe1a8335f0603c5f8f419a86" prot="public" virt="non-virtual"><scope>Gambit::ColliderBit::Cutflows</scope><name>addCutflow</name></member>
      <member refid="structGambit_1_1ColliderBit_1_1Cutflows_1ae90dc005f5c5fa8bee497b4760749c05" prot="public" virt="non-virtual"><scope>Gambit::ColliderBit::Cutflows</scope><name>addCutflow</name></member>
      <member refid="structGambit_1_1ColliderBit_1_1Cutflows_1abc842e3dd0fa344c1efac361416aa032" prot="public" virt="non-virtual"><scope>Gambit::ColliderBit::Cutflows</scope><name>cfs</name></member>
      <member refid="structGambit_1_1ColliderBit_1_1Cutflows_1acf8e58e1277ba76a41afbc61e6e937e8" prot="public" virt="non-virtual"><scope>Gambit::ColliderBit::Cutflows</scope><name>Cutflows</name></member>
      <member refid="structGambit_1_1ColliderBit_1_1Cutflows_1ab7cd32e09b5fc64909b343df9baa2633" prot="public" virt="non-virtual"><scope>Gambit::ColliderBit::Cutflows</scope><name>Cutflows</name></member>
      <member refid="structGambit_1_1ColliderBit_1_1Cutflows_1a058d5b8bcb66eaa8a2fd429a86b3d9a6" prot="public" virt="non-virtual"><scope>Gambit::ColliderBit::Cutflows</scope><name>fill</name></member>
      <member refid="structGambit_1_1ColliderBit_1_1Cutflows_1af395eb2701a488fc08c6c3ff0bac465f" prot="public" virt="non-virtual"><scope>Gambit::ColliderBit::Cutflows</scope><name>fill</name></member>
      <member refid="structGambit_1_1ColliderBit_1_1Cutflows_1ac0fd895b1f594fda5c861fd9d49ffc1d" prot="public" virt="non-virtual"><scope>Gambit::ColliderBit::Cutflows</scope><name>fill</name></member>
      <member refid="structGambit_1_1ColliderBit_1_1Cutflows_1a59dc55eaa75b07d3d731408e42fdb24f" prot="public" virt="non-virtual"><scope>Gambit::ColliderBit::Cutflows</scope><name>fillall</name></member>
      <member refid="structGambit_1_1ColliderBit_1_1Cutflows_1acdd850ae2926db94a9bfdc41732649ce" prot="public" virt="non-virtual"><scope>Gambit::ColliderBit::Cutflows</scope><name>fillinit</name></member>
      <member refid="structGambit_1_1ColliderBit_1_1Cutflows_1a35bd99311ecfb3795085192c959569d8" prot="public" virt="non-virtual"><scope>Gambit::ColliderBit::Cutflows</scope><name>fillnext</name></member>
      <member refid="structGambit_1_1ColliderBit_1_1Cutflows_1adfe0c6448956e18d402f510076f26bc8" prot="public" virt="non-virtual"><scope>Gambit::ColliderBit::Cutflows</scope><name>fillnext</name></member>
      <member refid="structGambit_1_1ColliderBit_1_1Cutflows_1aeec61874c42d9436c9972067f1b05b78" prot="public" virt="non-virtual"><scope>Gambit::ColliderBit::Cutflows</scope><name>fillnext</name></member>
      <member refid="structGambit_1_1ColliderBit_1_1Cutflows_1a7fcf067fd2e9497a59a59947a6383b2b" prot="public" virt="non-virtual"><scope>Gambit::ColliderBit::Cutflows</scope><name>normalize</name></member>
      <member refid="structGambit_1_1ColliderBit_1_1Cutflows_1aa73462f4c28d4f7e90f73702e4ec2506" prot="public" virt="non-virtual"><scope>Gambit::ColliderBit::Cutflows</scope><name>operator[]</name></member>
      <member refid="structGambit_1_1ColliderBit_1_1Cutflows_1a809d5fd8f95d379279cd6af94d0b2cce" prot="public" virt="non-virtual"><scope>Gambit::ColliderBit::Cutflows</scope><name>operator[]</name></member>
      <member refid="structGambit_1_1ColliderBit_1_1Cutflows_1a979a18988bc69dd28aac46ce4d6ea99f" prot="public" virt="non-virtual"><scope>Gambit::ColliderBit::Cutflows</scope><name>operator[]</name></member>
      <member refid="structGambit_1_1ColliderBit_1_1Cutflows_1abb7ae82e3c9ec9852c17bb5e74f468c3" prot="public" virt="non-virtual"><scope>Gambit::ColliderBit::Cutflows</scope><name>operator[]</name></member>
      <member refid="structGambit_1_1ColliderBit_1_1Cutflows_1af74a832bac32e135e38035a32ca59d24" prot="public" virt="non-virtual"><scope>Gambit::ColliderBit::Cutflows</scope><name>print</name></member>
      <member refid="structGambit_1_1ColliderBit_1_1Cutflows_1a1cc258eda7a087d72423dc0814aee10a" prot="public" virt="non-virtual"><scope>Gambit::ColliderBit::Cutflows</scope><name>scale</name></member>
      <member refid="structGambit_1_1ColliderBit_1_1Cutflows_1af53be58c6a790b3e6da3f84747e8a7bd" prot="public" virt="non-virtual"><scope>Gambit::ColliderBit::Cutflows</scope><name>str</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
