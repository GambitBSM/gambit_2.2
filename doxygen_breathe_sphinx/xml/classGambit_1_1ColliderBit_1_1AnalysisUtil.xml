<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="classGambit_1_1ColliderBit_1_1AnalysisUtil" kind="class" language="C++" prot="public">
    <compoundname>Gambit::ColliderBit::AnalysisUtil</compoundname>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classGambit_1_1ColliderBit_1_1AnalysisUtil_1aa83e229e2ebe7f9749f61def1151b922" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Gambit::ColliderBit::AnalysisUtil::sortParticlesByPt</definition>
        <argsstring>(const HEPUtils::Particle *particle1, const HEPUtils::Particle *particle2)</argsstring>
        <name>sortParticlesByPt</name>
        <qualifiedname>Gambit::ColliderBit::AnalysisUtil::sortParticlesByPt</qualifiedname>
        <param>
          <type>const HEPUtils::Particle *</type>
          <declname>particle1</declname>
        </param>
        <param>
          <type>const HEPUtils::Particle *</type>
          <declname>particle2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/include/gambit/ColliderBit/analyses/AnalysisUtil.hpp" line="28" column="21" bodyfile="C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/include/gambit/ColliderBit/analyses/AnalysisUtil.hpp" bodystart="28" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1ColliderBit_1_1AnalysisUtil_1a7f10a0a3cc6eec08dd91da3b6c65e78b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Gambit::ColliderBit::AnalysisUtil::sortJetsByPt</definition>
        <argsstring>(const HEPUtils::Jet *jet1, const HEPUtils::Jet *jet2)</argsstring>
        <name>sortJetsByPt</name>
        <qualifiedname>Gambit::ColliderBit::AnalysisUtil::sortJetsByPt</qualifiedname>
        <param>
          <type>const HEPUtils::Jet *</type>
          <declname>jet1</declname>
        </param>
        <param>
          <type>const HEPUtils::Jet *</type>
          <declname>jet2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/include/gambit/ColliderBit/analyses/AnalysisUtil.hpp" line="33" column="21" bodyfile="C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/include/gambit/ColliderBit/analyses/AnalysisUtil.hpp" bodystart="33" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1ColliderBit_1_1AnalysisUtil_1ae85e6f9132cc1c26f9fafc390df03f86" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; const HEPUtils::Jet * &gt;</type>
        <definition>static std::vector&lt; const HEPUtils::Jet * &gt; Gambit::ColliderBit::AnalysisUtil::filterPtEta</definition>
        <argsstring>(std::vector&lt; const HEPUtils::Jet * &gt; jets, double pT, double absEta)</argsstring>
        <name>filterPtEta</name>
        <qualifiedname>Gambit::ColliderBit::AnalysisUtil::filterPtEta</qualifiedname>
        <param>
          <type>std::vector&lt; const HEPUtils::Jet * &gt;</type>
          <declname>jets</declname>
        </param>
        <param>
          <type>double</type>
          <declname>pT</declname>
        </param>
        <param>
          <type>double</type>
          <declname>absEta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/include/gambit/ColliderBit/analyses/AnalysisUtil.hpp" line="38" column="28" bodyfile="C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/include/gambit/ColliderBit/analyses/AnalysisUtil.hpp" bodystart="38" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1ColliderBit_1_1AnalysisUtil_1ae17b9d59965e72ac2671979cfdfae7ce" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; const HEPUtils::Particle * &gt;</type>
        <definition>static std::vector&lt; const HEPUtils::Particle * &gt; Gambit::ColliderBit::AnalysisUtil::filterPtEta</definition>
        <argsstring>(std::vector&lt; const HEPUtils::Particle * &gt; particles, double pT, double absEta)</argsstring>
        <name>filterPtEta</name>
        <qualifiedname>Gambit::ColliderBit::AnalysisUtil::filterPtEta</qualifiedname>
        <param>
          <type>std::vector&lt; const HEPUtils::Particle * &gt;</type>
          <declname>particles</declname>
        </param>
        <param>
          <type>double</type>
          <declname>pT</declname>
        </param>
        <param>
          <type>double</type>
          <declname>absEta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/include/gambit/ColliderBit/analyses/AnalysisUtil.hpp" line="51" column="28" bodyfile="C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/include/gambit/ColliderBit/analyses/AnalysisUtil.hpp" bodystart="51" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1ColliderBit_1_1AnalysisUtil_1a9fb49bdcfba241c9a11117c0a8c390a6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; const HEPUtils::Jet * &gt;</type>
        <definition>static std::vector&lt; const HEPUtils::Jet * &gt; Gambit::ColliderBit::AnalysisUtil::jetLeptonOverlapRemoval</definition>
        <argsstring>(std::vector&lt; const HEPUtils::Jet * &gt; jets, std::vector&lt; const HEPUtils::Particle * &gt; leptons, double dR)</argsstring>
        <name>jetLeptonOverlapRemoval</name>
        <qualifiedname>Gambit::ColliderBit::AnalysisUtil::jetLeptonOverlapRemoval</qualifiedname>
        <param>
          <type>std::vector&lt; const HEPUtils::Jet * &gt;</type>
          <declname>jets</declname>
        </param>
        <param>
          <type>std::vector&lt; const HEPUtils::Particle * &gt;</type>
          <declname>leptons</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dR</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/include/gambit/ColliderBit/analyses/AnalysisUtil.hpp" line="64" column="28" bodyfile="C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/include/gambit/ColliderBit/analyses/AnalysisUtil.hpp" bodystart="64" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1ColliderBit_1_1AnalysisUtil_1a643d356a0c0433be596e3502e03e7e94" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; const HEPUtils::Particle * &gt;</type>
        <definition>static std::vector&lt; const HEPUtils::Particle * &gt; Gambit::ColliderBit::AnalysisUtil::leptonJetOverlapRemoval</definition>
        <argsstring>(std::vector&lt; const HEPUtils::Particle * &gt; leptons, std::vector&lt; const HEPUtils::Jet * &gt; jets, double dR)</argsstring>
        <name>leptonJetOverlapRemoval</name>
        <qualifiedname>Gambit::ColliderBit::AnalysisUtil::leptonJetOverlapRemoval</qualifiedname>
        <param>
          <type>std::vector&lt; const HEPUtils::Particle * &gt;</type>
          <declname>leptons</declname>
        </param>
        <param>
          <type>std::vector&lt; const HEPUtils::Jet * &gt;</type>
          <declname>jets</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dR</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/include/gambit/ColliderBit/analyses/AnalysisUtil.hpp" line="84" column="28" bodyfile="C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/include/gambit/ColliderBit/analyses/AnalysisUtil.hpp" bodystart="84" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1ColliderBit_1_1AnalysisUtil_1a31694ba4d38de1b1f10b4053fd76de10" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Gambit::ColliderBit::AnalysisUtil::isSingleParticleTriggered</definition>
        <argsstring>(std::vector&lt; const HEPUtils::Particle * &gt; particles, double pTrequirement)</argsstring>
        <name>isSingleParticleTriggered</name>
        <qualifiedname>Gambit::ColliderBit::AnalysisUtil::isSingleParticleTriggered</qualifiedname>
        <param>
          <type>std::vector&lt; const HEPUtils::Particle * &gt;</type>
          <declname>particles</declname>
        </param>
        <param>
          <type>double</type>
          <declname>pTrequirement</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/include/gambit/ColliderBit/analyses/AnalysisUtil.hpp" line="104" column="21" bodyfile="C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/include/gambit/ColliderBit/analyses/AnalysisUtil.hpp" bodystart="104" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1ColliderBit_1_1AnalysisUtil_1aa8a7f8e62059de9c4cbd04c6a0c669ec" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Gambit::ColliderBit::AnalysisUtil::isMultipleParticleTriggered</definition>
        <argsstring>(std::vector&lt; const HEPUtils::Particle * &gt; particles, std::vector&lt; double &gt; pTrequirements)</argsstring>
        <name>isMultipleParticleTriggered</name>
        <qualifiedname>Gambit::ColliderBit::AnalysisUtil::isMultipleParticleTriggered</qualifiedname>
        <param>
          <type>std::vector&lt; const HEPUtils::Particle * &gt;</type>
          <declname>particles</declname>
        </param>
        <param>
          <type>std::vector&lt; double &gt;</type>
          <declname>pTrequirements</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/include/gambit/ColliderBit/analyses/AnalysisUtil.hpp" line="116" column="21" bodyfile="C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/include/gambit/ColliderBit/analyses/AnalysisUtil.hpp" bodystart="116" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1ColliderBit_1_1AnalysisUtil_1a9bf171434f034ea620641fd8daeb35cb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; const HEPUtils::Particle * &gt;</type>
        <definition>static std::vector&lt; const HEPUtils::Particle * &gt; Gambit::ColliderBit::AnalysisUtil::getSortedLeptons</definition>
        <argsstring>(const std::vector&lt; std::vector&lt; const HEPUtils::Particle * &gt; &gt; allLeptons)</argsstring>
        <name>getSortedLeptons</name>
        <qualifiedname>Gambit::ColliderBit::AnalysisUtil::getSortedLeptons</qualifiedname>
        <param>
          <type>const std::vector&lt; std::vector&lt; const HEPUtils::Particle * &gt; &gt;</type>
          <declname>allLeptons</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/include/gambit/ColliderBit/analyses/AnalysisUtil.hpp" line="133" column="28" bodyfile="C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/include/gambit/ColliderBit/analyses/AnalysisUtil.hpp" bodystart="133" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1ColliderBit_1_1AnalysisUtil_1a11a7366f5e9c6389c5603a49d5a31984" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>static double Gambit::ColliderBit::AnalysisUtil::dot2D</definition>
        <argsstring>(HEPUtils::P4 mom1, HEPUtils::P4 mom2)</argsstring>
        <name>dot2D</name>
        <qualifiedname>Gambit::ColliderBit::AnalysisUtil::dot2D</qualifiedname>
        <param>
          <type>HEPUtils::P4</type>
          <declname>mom1</declname>
        </param>
        <param>
          <type>HEPUtils::P4</type>
          <declname>mom2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/include/gambit/ColliderBit/analyses/AnalysisUtil.hpp" line="144" column="23" bodyfile="C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/include/gambit/ColliderBit/analyses/AnalysisUtil.hpp" bodystart="144" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1ColliderBit_1_1AnalysisUtil_1ab1d4211f22c3391b8b567465967e8345" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; const HEPUtils::Jet * &gt;</type>
        <definition>static std::vector&lt; const HEPUtils::Jet * &gt; Gambit::ColliderBit::AnalysisUtil::filterMaxEta</definition>
        <argsstring>(const std::vector&lt; const HEPUtils::Jet * &gt; &amp;jets, double maxAbsEta)</argsstring>
        <name>filterMaxEta</name>
        <qualifiedname>Gambit::ColliderBit::AnalysisUtil::filterMaxEta</qualifiedname>
        <param>
          <type>const std::vector&lt; const HEPUtils::Jet * &gt; &amp;</type>
          <declname>jets</declname>
        </param>
        <param>
          <type>double</type>
          <declname>maxAbsEta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/include/gambit/ColliderBit/analyses/AnalysisUtil.hpp" line="149" column="28" bodyfile="C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/include/gambit/ColliderBit/analyses/AnalysisUtil.hpp" bodystart="149" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1ColliderBit_1_1AnalysisUtil_1adf3271ea235c1e6a1806c29d490a6d86" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Gambit::ColliderBit::AnalysisUtil::muonFilter7TeV</definition>
        <argsstring>(const std::vector&lt; const HEPUtils::Particle * &gt; &amp;muons)</argsstring>
        <name>muonFilter7TeV</name>
        <qualifiedname>Gambit::ColliderBit::AnalysisUtil::muonFilter7TeV</qualifiedname>
        <param>
          <type>const std::vector&lt; const HEPUtils::Particle * &gt; &amp;</type>
          <declname>muons</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/include/gambit/ColliderBit/analyses/AnalysisUtil.hpp" line="162" column="21" bodyfile="C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/include/gambit/ColliderBit/analyses/AnalysisUtil.hpp" bodystart="162" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1ColliderBit_1_1AnalysisUtil_1a07cfe7af3c06694e254e02b0d87f33d8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Gambit::ColliderBit::AnalysisUtil::oppositeSign</definition>
        <argsstring>(const HEPUtils::Particle *a, const HEPUtils::Particle *b)</argsstring>
        <name>oppositeSign</name>
        <qualifiedname>Gambit::ColliderBit::AnalysisUtil::oppositeSign</qualifiedname>
        <param>
          <type>const HEPUtils::Particle *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const HEPUtils::Particle *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/include/gambit/ColliderBit/analyses/AnalysisUtil.hpp" line="180" column="21" bodyfile="C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/include/gambit/ColliderBit/analyses/AnalysisUtil.hpp" bodystart="180" bodyend="183"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/include/gambit/ColliderBit/analyses/AnalysisUtil.hpp" line="23" column="5" bodyfile="C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/include/gambit/ColliderBit/analyses/AnalysisUtil.hpp" bodystart="24" bodyend="185"/>
    <listofallmembers>
      <member refid="classGambit_1_1ColliderBit_1_1AnalysisUtil_1a11a7366f5e9c6389c5603a49d5a31984" prot="public" virt="non-virtual"><scope>Gambit::ColliderBit::AnalysisUtil</scope><name>dot2D</name></member>
      <member refid="classGambit_1_1ColliderBit_1_1AnalysisUtil_1ab1d4211f22c3391b8b567465967e8345" prot="public" virt="non-virtual"><scope>Gambit::ColliderBit::AnalysisUtil</scope><name>filterMaxEta</name></member>
      <member refid="classGambit_1_1ColliderBit_1_1AnalysisUtil_1ae85e6f9132cc1c26f9fafc390df03f86" prot="public" virt="non-virtual"><scope>Gambit::ColliderBit::AnalysisUtil</scope><name>filterPtEta</name></member>
      <member refid="classGambit_1_1ColliderBit_1_1AnalysisUtil_1ae17b9d59965e72ac2671979cfdfae7ce" prot="public" virt="non-virtual"><scope>Gambit::ColliderBit::AnalysisUtil</scope><name>filterPtEta</name></member>
      <member refid="classGambit_1_1ColliderBit_1_1AnalysisUtil_1a9bf171434f034ea620641fd8daeb35cb" prot="public" virt="non-virtual"><scope>Gambit::ColliderBit::AnalysisUtil</scope><name>getSortedLeptons</name></member>
      <member refid="classGambit_1_1ColliderBit_1_1AnalysisUtil_1aa8a7f8e62059de9c4cbd04c6a0c669ec" prot="public" virt="non-virtual"><scope>Gambit::ColliderBit::AnalysisUtil</scope><name>isMultipleParticleTriggered</name></member>
      <member refid="classGambit_1_1ColliderBit_1_1AnalysisUtil_1a31694ba4d38de1b1f10b4053fd76de10" prot="public" virt="non-virtual"><scope>Gambit::ColliderBit::AnalysisUtil</scope><name>isSingleParticleTriggered</name></member>
      <member refid="classGambit_1_1ColliderBit_1_1AnalysisUtil_1a9fb49bdcfba241c9a11117c0a8c390a6" prot="public" virt="non-virtual"><scope>Gambit::ColliderBit::AnalysisUtil</scope><name>jetLeptonOverlapRemoval</name></member>
      <member refid="classGambit_1_1ColliderBit_1_1AnalysisUtil_1a643d356a0c0433be596e3502e03e7e94" prot="public" virt="non-virtual"><scope>Gambit::ColliderBit::AnalysisUtil</scope><name>leptonJetOverlapRemoval</name></member>
      <member refid="classGambit_1_1ColliderBit_1_1AnalysisUtil_1adf3271ea235c1e6a1806c29d490a6d86" prot="public" virt="non-virtual"><scope>Gambit::ColliderBit::AnalysisUtil</scope><name>muonFilter7TeV</name></member>
      <member refid="classGambit_1_1ColliderBit_1_1AnalysisUtil_1a07cfe7af3c06694e254e02b0d87f33d8" prot="public" virt="non-virtual"><scope>Gambit::ColliderBit::AnalysisUtil</scope><name>oppositeSign</name></member>
      <member refid="classGambit_1_1ColliderBit_1_1AnalysisUtil_1a7f10a0a3cc6eec08dd91da3b6c65e78b" prot="public" virt="non-virtual"><scope>Gambit::ColliderBit::AnalysisUtil</scope><name>sortJetsByPt</name></member>
      <member refid="classGambit_1_1ColliderBit_1_1AnalysisUtil_1aa83e229e2ebe7f9749f61def1151b922" prot="public" virt="non-virtual"><scope>Gambit::ColliderBit::AnalysisUtil</scope><name>sortParticlesByPt</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
