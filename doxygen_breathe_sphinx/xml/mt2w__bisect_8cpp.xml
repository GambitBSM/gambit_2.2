<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="mt2w__bisect_8cpp" kind="file" language="C++">
    <compoundname>mt2w_bisect.cpp</compoundname>
    <includes local="no">iostream</includes>
    <includes local="no">math.h</includes>
    <includes refid="mt2w__bisect_8h" local="yes">gambit/ColliderBit/mt2w_bisect.h</includes>
    <incdepgraph>
      <node id="4">
        <label>gambit/ColliderBit/mt2w_bisect.h</label>
        <link refid="mt2w__bisect_8h_source"/>
      </node>
      <node id="1">
        <label>C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/src/mt2w_bisect.cpp</label>
        <link refid="mt2w__bisect_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>iostream</label>
      </node>
      <node id="3">
        <label>math.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacemt2w__bisect">mt2w_bisect</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/***********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Finding<sp/>MT2W<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Reference:<sp/><sp/>arXiv:1203.4813<sp/>[hep-ph]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Authors:<sp/>Yang<sp/>Bai,<sp/>Hsin-Chia<sp/>Cheng,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Jason<sp/>Gallicchio,<sp/>Jiayin<sp/>Gu<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Based<sp/>on<sp/>MT2<sp/>by:<sp/>Hsin-Chia<sp/>Cheng,<sp/>Zhenyu<sp/>Han<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>May<sp/>8,<sp/>2012,<sp/>v1.00a<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">/***********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/>Usage:</highlight></codeline>
<codeline lineno="14"><highlight class="comment"></highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/><sp/>1.<sp/>Define<sp/>an<sp/>object<sp/>of<sp/>type<sp/>&quot;mt2w&quot;:</highlight></codeline>
<codeline lineno="16"><highlight class="comment"></highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>mt2w_bisect::mt2w<sp/>mt2w_event;</highlight></codeline>
<codeline lineno="18"><highlight class="comment"></highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/><sp/>2.<sp/>Set<sp/>momenta:</highlight></codeline>
<codeline lineno="20"><highlight class="comment"></highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>mt2w_event.set_momenta(pl,pb1,pb2,pmiss);</highlight></codeline>
<codeline lineno="22"><highlight class="comment"></highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>where<sp/>array<sp/>pl[0..3],<sp/>pb1[0..3],<sp/>pb2[0..3]<sp/>contains<sp/>(E,px,py,pz),<sp/>pmiss[0..2]<sp/>contains<sp/>(0,px,py)</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>for<sp/>the<sp/>visible<sp/>particles<sp/>and<sp/>the<sp/>missing<sp/>momentum.<sp/>pmiss[0]<sp/>is<sp/>not<sp/>used.</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>All<sp/>quantities<sp/>are<sp/>given<sp/>in<sp/>double.</highlight></codeline>
<codeline lineno="26"><highlight class="comment"></highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>(Or<sp/>use<sp/>non-pointer<sp/>method<sp/>to<sp/>do<sp/>the<sp/>same.)</highlight></codeline>
<codeline lineno="28"><highlight class="comment"></highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/><sp/>3.<sp/>Use<sp/>mt2w::get_mt2w()<sp/>to<sp/>obtain<sp/>the<sp/>value<sp/>of<sp/>mt2w:</highlight></codeline>
<codeline lineno="30"><highlight class="comment"></highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>double<sp/>mt2w_value<sp/>=<sp/>mt2w_event.get_mt2w();</highlight></codeline>
<codeline lineno="32"><highlight class="comment"></highlight></codeline>
<codeline lineno="33"><highlight class="comment">*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;gambit/ColliderBit/mt2w_bisect.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">mt2w_bisect</highlight></codeline>
<codeline lineno="42"><highlight class="normal">{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal">mt2w::mt2w(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>upper_bound,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>error_value,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>scan_step)</highlight></codeline>
<codeline lineno="45"><highlight class="normal">{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/>solved<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/>momenta_set<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/>mt2w_b<sp/><sp/>=<sp/>0.;<sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>result<sp/>field.<sp/><sp/>Start<sp/>it<sp/>off<sp/>at<sp/>zero.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/>this-&gt;upper_bound<sp/>=<sp/>upper_bound;<sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>upper<sp/>bound<sp/>of<sp/>search<sp/>for<sp/>MT2W,<sp/>default<sp/>value<sp/>is<sp/>500<sp/>GeV</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/>this-&gt;error_value<sp/>=<sp/>error_value;<sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>we<sp/>couldn&apos;t<sp/>find<sp/>any<sp/>compatible<sp/>region<sp/>below<sp/>the<sp/>upper_bound,<sp/>output<sp/>mt2w<sp/>=<sp/>error_value;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/>this-&gt;scan_step<sp/>=<sp/>scan_step;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>we<sp/>need<sp/>to<sp/>scan<sp/>to<sp/>find<sp/>the<sp/>compatible<sp/>region,<sp/>this<sp/>is<sp/>the<sp/>step<sp/>of<sp/>the<sp/>scan</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mt2w::get_mt2w()</highlight></codeline>
<codeline lineno="55"><highlight class="normal">{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!momenta_set)</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>Please<sp/>set<sp/>momenta<sp/>first!&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>error_value;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!solved)<sp/>mt2w_bisect();</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mt2w_b;</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mt2w::set_momenta(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*pl,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*pb1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*pb2,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>pmiss)</highlight></codeline>
<codeline lineno="68"><highlight class="normal">{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Pass<sp/>in<sp/>pointers<sp/>to<sp/>4-vectors<sp/>{E,<sp/>px,<sp/>py,<sp/>px}<sp/>of<sp/>doubles.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>pmiss<sp/>must<sp/>have<sp/>[1]<sp/>and<sp/>[2]<sp/>components<sp/>for<sp/>x<sp/>and<sp/>y.<sp/><sp/>The<sp/>[0]<sp/>component<sp/>is<sp/>ignored.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/>set_momenta(pl[0],<sp/><sp/>pl[1],<sp/><sp/>pl[2],<sp/><sp/>pl[3],</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pb1[0],<sp/>pb1[1],<sp/>pb1[2],<sp/>pb1[3],</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pb2[0],<sp/>pb2[1],<sp/>pb2[2],<sp/>pb2[3],</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pmiss[1],<sp/>pmiss[2]);</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mt2w::set_momenta(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>El,<sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>plx,<sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ply,<sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>plz,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Eb1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pb1x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pb1y,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pb1z,</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Eb2,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pb2x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pb2y,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pb2z,</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pmissx,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pmissy)</highlight></codeline>
<codeline lineno="83"><highlight class="normal">{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/>solved<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//reset<sp/>solved<sp/>tag<sp/>when<sp/>momenta<sp/>are<sp/>changed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/>momenta_set<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>msqtemp;<sp/><sp/><sp/></highlight><highlight class="comment">//used<sp/>for<sp/>saving<sp/>the<sp/>mass<sp/>squared<sp/>temporarily</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="comment">//l<sp/>is<sp/>the<sp/>visible<sp/>lepton</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>this-&gt;El<sp/><sp/>=<sp/>El;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>this-&gt;plx<sp/>=<sp/>plx;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>this-&gt;ply<sp/>=<sp/>ply;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>this-&gt;plz<sp/>=<sp/>plz;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>Elsq<sp/>=<sp/>El*El;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>msqtemp<sp/>=<sp/>El*El-plx*plx-ply*ply-plz*plz;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(msqtemp<sp/>&gt;<sp/>0.0)<sp/>{mlsq<sp/>=<sp/>msqtemp;}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{mlsq<sp/>=<sp/>0.0;}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//mass<sp/>squared<sp/>can<sp/>not<sp/>be<sp/>negative</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>ml<sp/>=<sp/>sqrt(mlsq);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>all<sp/>the<sp/>input<sp/>masses<sp/>are<sp/>calculated<sp/>from<sp/>sqrt(p^2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="comment">//b1<sp/>is<sp/>the<sp/>bottom<sp/>on<sp/>the<sp/>same<sp/>side<sp/>as<sp/>the<sp/>visible<sp/>lepton</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>this-&gt;Eb1<sp/><sp/>=<sp/>Eb1;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>this-&gt;pb1x<sp/>=<sp/>pb1x;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>this-&gt;pb1y<sp/>=<sp/>pb1y;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>this-&gt;pb1z<sp/>=<sp/>pb1z;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>Eb1sq<sp/>=<sp/>Eb1*Eb1;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>msqtemp<sp/>=<sp/>Eb1*Eb1-pb1x*pb1x-pb1y*pb1y-pb1z*pb1z;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(msqtemp<sp/>&gt;<sp/>0.0)<sp/>{mb1sq<sp/>=<sp/>msqtemp;}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{mb1sq<sp/>=<sp/>0.0;}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//mass<sp/>squared<sp/>can<sp/>not<sp/>be<sp/>negative</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>mb1<sp/>=<sp/>sqrt(mb1sq);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>all<sp/>the<sp/>input<sp/>masses<sp/>are<sp/>calculated<sp/>from<sp/>sqrt(p^2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="comment">//b2<sp/>is<sp/>the<sp/>other<sp/>bottom<sp/>(paired<sp/>with<sp/>the<sp/>invisible<sp/>W)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>this-&gt;Eb2<sp/><sp/>=<sp/>Eb2;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>this-&gt;pb2x<sp/>=<sp/>pb2x;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>this-&gt;pb2y<sp/>=<sp/>pb2y;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>this-&gt;pb2z<sp/>=<sp/>pb2z;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>Eb2sq<sp/>=<sp/>Eb2*Eb2;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>msqtemp<sp/>=<sp/>Eb2*Eb2-pb2x*pb2x-pb2y*pb2y-pb2z*pb2z;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(msqtemp<sp/>&gt;<sp/>0.0)<sp/>{mb2sq<sp/>=<sp/>msqtemp;}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{mb2sq<sp/>=<sp/>0.0;}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//mass<sp/>squared<sp/>can<sp/>not<sp/>be<sp/>negative</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>mb2<sp/>=<sp/>sqrt(mb2sq);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>all<sp/>the<sp/>input<sp/>masses<sp/>are<sp/>calculated<sp/>from<sp/>sqrt(p^2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="comment">//missing<sp/>pt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/>this-&gt;pmissx<sp/>=<sp/>pmissx;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/>this-&gt;pmissy<sp/>=<sp/>pmissy;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="comment">//set<sp/>the<sp/>values<sp/>of<sp/>masses</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>mv<sp/>=<sp/>0.0;<sp/><sp/><sp/></highlight><highlight class="comment">//mass<sp/>of<sp/>neutrino</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>mw<sp/>=<sp/>80.4;<sp/><sp/></highlight><highlight class="comment">//mass<sp/>of<sp/>W-boson</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="comment">//precision?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ABSOLUTE_PRECISION<sp/>&gt;<sp/>100.*RELATIVE_PRECISION)<sp/>precision<sp/>=<sp/>ABSOLUTE_PRECISION;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>precision<sp/>=<sp/>100.*RELATIVE_PRECISION;</highlight></codeline>
<codeline lineno="148"><highlight class="normal">}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mt2w::mt2w_bisect()</highlight></codeline>
<codeline lineno="152"><highlight class="normal">{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/>solved<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/>cout.precision(11);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>normal<sp/>running,<sp/>mtop_high<sp/>WILL<sp/>be<sp/>compatible,<sp/>and<sp/>mtop_low<sp/>will<sp/>NOT.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mtop_high<sp/>=<sp/>upper_bound;<sp/></highlight><highlight class="comment">//set<sp/>the<sp/>upper<sp/>bound<sp/>of<sp/>the<sp/>search<sp/>region</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mtop_low;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//the<sp/>lower<sp/>bound<sp/>of<sp/>the<sp/>search<sp/>region<sp/>is<sp/>best<sp/>chosen<sp/>as<sp/>m_W<sp/>+<sp/>m_b</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mb1<sp/>&gt;=<sp/>mb2)<sp/>{mtop_low<sp/>=<sp/>mw<sp/>+<sp/>mb1;}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{mtop_low<sp/>=<sp/>mw<sp/>+<sp/>mb2;}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>following<sp/>if<sp/>and<sp/>while<sp/>deal<sp/>with<sp/>the<sp/>case<sp/>where<sp/>there<sp/>might<sp/>be<sp/>a<sp/>compatable<sp/>region</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>between<sp/>mtop_low<sp/>and<sp/>500<sp/>GeV,<sp/>but<sp/>it<sp/>doesn&apos;t<sp/>extend<sp/>all<sp/>the<sp/>way<sp/>up<sp/>to<sp/>500.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>our<sp/>starting<sp/>high<sp/>guess<sp/>is<sp/>not<sp/>compatible,<sp/>start<sp/>the<sp/>high<sp/>guess<sp/>from<sp/>the<sp/>low<sp/>guess...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(teco(mtop_high)==0)<sp/>{mtop_high<sp/>=<sp/>mtop_low;}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>..<sp/>and<sp/>scan<sp/>up<sp/>until<sp/>a<sp/>compatible<sp/>high<sp/>bound<sp/>is<sp/>found.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//We<sp/>can<sp/>also<sp/>raise<sp/>the<sp/>lower<sp/>bound<sp/>since<sp/>we<sp/>scaned<sp/>over<sp/>a<sp/>region<sp/>that<sp/>is<sp/>not<sp/>compatible</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(teco(mtop_high)==0<sp/>&amp;&amp;<sp/>mtop_high<sp/>&lt;<sp/>upper_bound<sp/>+<sp/>2.*scan_step)<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>mtop_low=mtop_high;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>mtop_high<sp/>=<sp/>mtop_high<sp/>+<sp/>scan_step;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>we<sp/>can<sp/>not<sp/>find<sp/>a<sp/>compatible<sp/>region<sp/>under<sp/>the<sp/>upper<sp/>bound,<sp/>output<sp/>the<sp/>error<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mtop_high<sp/>&gt;<sp/>upper_bound)<sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>mt2w_b<sp/>=<sp/>error_value;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Once<sp/>we<sp/>have<sp/>an<sp/>compatible<sp/>mtop_high,<sp/>we<sp/>can<sp/>find<sp/>mt2w<sp/>using<sp/>bisection<sp/>method</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(mtop_high<sp/>-<sp/>mtop_low<sp/>&gt;<sp/>precision)</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mtop_mid,teco_mid;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//bisect</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mtop_mid<sp/>=<sp/>(mtop_high+mtop_low)/2.;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>teco_mid<sp/>=<sp/>teco(mtop_mid);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(teco_mid<sp/>==<sp/>0)<sp/>{mtop_low<sp/><sp/>=<sp/>mtop_mid;}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{mtop_high<sp/><sp/>=<sp/>mtop_mid;}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/>mt2w_b<sp/>=<sp/>mtop_high;<sp/><sp/><sp/></highlight><highlight class="comment">//output<sp/>the<sp/>value<sp/>of<sp/>mt2w</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="200"><highlight class="normal">}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="comment">//<sp/>for<sp/>a<sp/>given<sp/>event,<sp/>teco<sp/>(<sp/>mtop<sp/>)<sp/>gives<sp/>1<sp/>if<sp/>trial<sp/>top<sp/>mass<sp/>mtop<sp/>is<sp/>compatible,<sp/>0<sp/>if<sp/>mtop<sp/>is<sp/>not.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mt2w::teco(<sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mtop)</highlight></codeline>
<codeline lineno="206"><highlight class="normal">{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="comment">//first<sp/>test<sp/>if<sp/>mtop<sp/>is<sp/>larger<sp/>than<sp/>mb+mw</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mtop<sp/>&lt;<sp/>mb1+mw<sp/>||<sp/>mtop<sp/>&lt;<sp/>mb2+mw)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="comment">//define<sp/>delta<sp/>for<sp/>convenience,<sp/>note<sp/>the<sp/>definition<sp/>is<sp/>different<sp/>from<sp/>the<sp/>one<sp/>in<sp/>mathematica<sp/>code<sp/>by<sp/>2*E^2_{b2}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ETb2sq<sp/>=<sp/>Eb2sq<sp/>-<sp/>pb2z*pb2z;<sp/><sp/></highlight><highlight class="comment">//transverse<sp/>energy<sp/>of<sp/>b2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>delta<sp/>=<sp/>(mtop*mtop-mw*mw-mb2sq)/(2.*ETb2sq);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="comment">//del1<sp/>and<sp/>del2<sp/>are<sp/>\Delta&apos;_1<sp/>and<sp/>\Delta&apos;_2<sp/>in<sp/>the<sp/>notes<sp/>eq.<sp/>10,11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>del1<sp/>=<sp/>mw*mw<sp/>-<sp/>mv*mv<sp/>-<sp/>mlsq;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>del2<sp/>=<sp/>mtop*mtop<sp/>-<sp/>mw*mw<sp/>-<sp/>mb1sq<sp/>-<sp/>2*(El*Eb1-plx*pb1x-ply*pb1y-plz*pb1z);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="comment">//<sp/>aa<sp/>bb<sp/>cc<sp/>are<sp/>A<sp/>B<sp/>C<sp/>in<sp/>the<sp/>notes<sp/>eq.15</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>aa<sp/>=<sp/>(El*pb1x-Eb1*plx)/(Eb1*plz-El*pb1z);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>bb<sp/>=<sp/>(El*pb1y-Eb1*ply)/(Eb1*plz-El*pb1z);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cc<sp/>=<sp/>(El*del2-Eb1*del1)/(2.*Eb1*plz-2.*El*pb1z);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="comment">//calculate<sp/>coefficients<sp/>for<sp/>the<sp/>two<sp/>quadratic<sp/>equations<sp/>(ellipses),<sp/>which<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>a1<sp/>x^2<sp/>+<sp/>2<sp/>b1<sp/>x<sp/>y<sp/>+<sp/>c1<sp/>y^2<sp/>+<sp/>2<sp/>d1<sp/>x<sp/>+<sp/>2<sp/>e1<sp/>y<sp/>+<sp/>f1<sp/>=<sp/>0<sp/>,<sp/><sp/>from<sp/>the<sp/>2<sp/>steps<sp/>decay<sp/>chain<sp/>(with<sp/>visible<sp/>lepton)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>a2<sp/>x^2<sp/>+<sp/>2<sp/>b2<sp/>x<sp/>y<sp/>+<sp/>c2<sp/>y^2<sp/>+<sp/>2<sp/>d2<sp/>x<sp/>+<sp/>2<sp/>e2<sp/>y<sp/>+<sp/>f2<sp/>&lt;=<sp/>0<sp/>,<sp/>from<sp/>the<sp/>1<sp/>stop<sp/>decay<sp/>chain<sp/>(with<sp/>W<sp/>missing)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>where<sp/>x<sp/>and<sp/>y<sp/>are<sp/>px<sp/>and<sp/>py<sp/>of<sp/>the<sp/>neutrino<sp/>on<sp/>the<sp/>visible<sp/>lepton<sp/>chain</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/>a1<sp/>=<sp/>Eb1sq*(1.+aa*aa)-(pb1x+pb1z*aa)*(pb1x+pb1z*aa);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/>b1<sp/>=<sp/>Eb1sq*aa*bb<sp/>-<sp/>(pb1x+pb1z*aa)*(pb1y+pb1z*bb);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/>c1<sp/>=<sp/>Eb1sq*(1.+bb*bb)-(pb1y+pb1z*bb)*(pb1y+pb1z*bb);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/>d1<sp/>=<sp/>Eb1sq*aa*cc<sp/>-<sp/>(pb1x+pb1z*aa)*(pb1z*cc+del2/2.0);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/>e1<sp/>=<sp/>Eb1sq*bb*cc<sp/>-<sp/>(pb1y+pb1z*bb)*(pb1z*cc+del2/2.0);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/>f1<sp/>=<sp/>Eb1sq*(mv*mv+cc*cc)<sp/>-<sp/>(pb1z*cc+del2/2.0)*(pb1z*cc+del2/2.0);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>First<sp/>check<sp/>if<sp/>ellipse<sp/>1<sp/>is<sp/>real<sp/>(don&apos;t<sp/>need<sp/>to<sp/>do<sp/>this<sp/>for<sp/>ellipse<sp/>2,<sp/>ellipse<sp/>2<sp/>is<sp/>always<sp/>real<sp/>for<sp/>mtop<sp/>&gt;<sp/>mw+mb)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>det1<sp/>=<sp/>(a1*(c1*f1<sp/>-<sp/>e1*e1)<sp/>-<sp/>b1*(b1*f1<sp/>-<sp/>d1*e1)<sp/>+<sp/>d1*(b1*e1-c1*d1))/(a1+c1);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(det1<sp/>&gt;<sp/>0.0)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="comment">//coefficients<sp/>of<sp/>the<sp/>ellptical<sp/>region</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/>a2<sp/>=<sp/>1-pb2x*pb2x/(ETb2sq);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/>b2<sp/>=<sp/>-pb2x*pb2y/(ETb2sq);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/>c2<sp/>=<sp/>1-pb2y*pb2y/(ETb2sq);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>d2o<sp/>e2o<sp/>f2o<sp/>are<sp/>coefficients<sp/>in<sp/>the<sp/>p2x<sp/>p2y<sp/>plane<sp/>(p2<sp/>is<sp/>the<sp/>momentum<sp/>of<sp/>the<sp/>missing<sp/>W-boson)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>it<sp/>is<sp/>convenient<sp/>to<sp/>calculate<sp/>them<sp/>first<sp/>and<sp/>transfer<sp/>the<sp/>ellipse<sp/>to<sp/>the<sp/>p1x<sp/>p1y<sp/>plane</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/>d2o<sp/>=<sp/>-delta*pb2x;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/>e2o<sp/>=<sp/>-delta*pb2y;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/>f2o<sp/>=<sp/>mw*mw<sp/>-<sp/>delta*delta*ETb2sq;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/>d2<sp/>=<sp/>-d2o<sp/>-a2*pmissx<sp/>-b2*pmissy;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/>e2<sp/>=<sp/>-e2o<sp/>-c2*pmissy<sp/>-b2*pmissx;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/>f2<sp/>=<sp/>a2*pmissx*pmissx<sp/>+<sp/>2*b2*pmissx*pmissy<sp/>+<sp/>c2*pmissy*pmissy<sp/>+<sp/>2*d2o*pmissx<sp/>+<sp/>2*e2o*pmissy<sp/>+<sp/>f2o;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="comment">//find<sp/>a<sp/>point<sp/>in<sp/>ellipse<sp/>1<sp/>and<sp/>see<sp/>if<sp/>it&apos;s<sp/>within<sp/>the<sp/>ellipse<sp/>2,<sp/>define<sp/>h0<sp/>for<sp/>convenience</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x0,<sp/>h0,<sp/>y0,<sp/>r0;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/>x0<sp/>=<sp/>(c1*d1-b1*e1)/(b1*b1-a1*c1);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>h0<sp/>=<sp/>(b1*x0<sp/>+<sp/>e1)*(b1*x0<sp/>+<sp/>e1)<sp/>-<sp/>c1*(a1*x0*x0<sp/>+<sp/>2*d1*x0<sp/>+<sp/>f1);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(h0<sp/>&lt;<sp/>0.0)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;}<sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>h0<sp/>&lt;<sp/>0,<sp/>y0<sp/>is<sp/>not<sp/>real<sp/>and<sp/>ellipse<sp/>1<sp/>is<sp/>not<sp/>real,<sp/>this<sp/>is<sp/>a<sp/>redundant<sp/>check.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/>y0<sp/>=<sp/>(-b1*x0<sp/>-e1<sp/>+<sp/>sqrt(h0))/c1;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/>r0<sp/>=<sp/>a2*x0*x0<sp/>+<sp/>2*b2*x0*y0<sp/>+<sp/>c2*y0*y0<sp/>+<sp/>2*d2*x0<sp/>+<sp/>2*e2*y0<sp/>+<sp/>f2;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r0<sp/>&lt;<sp/>0.0)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;}<sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>point<sp/>is<sp/>within<sp/>the<sp/>2nd<sp/>ellipse,<sp/>mtop<sp/>is<sp/>compatible</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="comment">//obtain<sp/>the<sp/>coefficients<sp/>for<sp/>the<sp/>4th<sp/>order<sp/>equation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="comment">//devided<sp/>by<sp/>Eb1^n<sp/>to<sp/>make<sp/>the<sp/>variable<sp/>dimensionless</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>A4,<sp/>A3,<sp/>A2,<sp/>A1,<sp/>A0;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/>A4<sp/>=</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/>-4*a2*b1*b2*c1<sp/>+<sp/>4*a1*b2*b2*c1<sp/>+a2*a2*c1*c1<sp/>+</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/>4*a2*b1*b1*c2<sp/>-<sp/>4*a1*b1*b2*c2<sp/>-<sp/>2*a1*a2*c1*c2<sp/>+</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/>a1*a1*c2*c2;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/>A3<sp/>=</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/>(-4*a2*b2*c1*d1<sp/>+<sp/>8*a2*b1*c2*d1<sp/>-<sp/>4*a1*b2*c2*d1<sp/>-<sp/>4*a2*b1*c1*d2<sp/>+</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/>8*a1*b2*c1*d2<sp/>-<sp/>4*a1*b1*c2*d2<sp/>-<sp/>8*a2*b1*b2*e1<sp/>+<sp/>8*a1*b2*b2*e1<sp/>+</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/>4*a2*a2*c1*e1<sp/>-<sp/>4*a1*a2*c2*e1<sp/>+<sp/>8*a2*b1*b1*e2<sp/>-<sp/>8*a1*b1*b2*e2<sp/>-</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>4*a1*a2*c1*e2<sp/>+<sp/>4*a1*a1*c2*e2)/Eb1;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/>A2<sp/>=</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/>(4*a2*c2*d1*d1<sp/>-<sp/>4*a2*c1*d1*d2<sp/>-<sp/>4*a1*c2*d1*d2<sp/>+<sp/>4*a1*c1*d2*d2<sp/>-</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/>8*a2*b2*d1*e1<sp/>-<sp/>8*a2*b1*d2*e1<sp/>+<sp/>16*a1*b2*d2*e1<sp/>+</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/>4*a2*a2*e1*e1<sp/>+<sp/>16*a2*b1*d1*e2<sp/>-<sp/>8*a1*b2*d1*e2<sp/>-</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/>8*a1*b1*d2*e2<sp/>-<sp/>8*a1*a2*e1*e2<sp/>+<sp/>4*a1*a1*e2*e2<sp/>-<sp/>4*a2*b1*b2*f1<sp/>+</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/>4*a1*b2*b2*f1<sp/>+<sp/>2*a2*a2*c1*f1<sp/>-<sp/>2*a1*a2*c2*f1<sp/>+</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>4*a2*b1*b1*f2<sp/>-<sp/>4*a1*b1*b2*f2<sp/>-<sp/>2*a1*a2*c1*f2<sp/>+<sp/>2*a1*a1*c2*f2)/Eb1sq;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/>A1<sp/>=</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/>(-8*a2*d1*d2*e1<sp/>+<sp/>8*a1*d2*d2*e1<sp/>+<sp/>8*a2*d1*d1*e2<sp/>-<sp/>8*a1*d1*d2*e2<sp/>-</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/>4*a2*b2*d1*f1<sp/>-<sp/>4*a2*b1*d2*f1<sp/>+<sp/>8*a1*b2*d2*f1<sp/>+<sp/>4*a2*a2*e1*f1<sp/>-</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/>4*a1*a2*e2*f1<sp/>+<sp/>8*a2*b1*d1*f2<sp/>-<sp/>4*a1*b2*d1*f2<sp/>-<sp/>4*a1*b1*d2*f2<sp/>-</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>4*a1*a2*e1*f2<sp/>+<sp/>4*a1*a1*e2*f2)/(Eb1sq*Eb1);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/>A0<sp/>=</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/>(-4*a2*d1*d2*f1<sp/>+<sp/>4*a1*d2*d2*f1<sp/>+<sp/>a2*a2*f1*f1<sp/>+</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/>4*a2*d1*d1*f2<sp/>-<sp/>4*a1*d1*d2*f2<sp/>-<sp/>2*a1*a2*f1*f2<sp/>+</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>a1*a1*f2*f2)/(Eb1sq*Eb1sq);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>B3,<sp/>B2,<sp/>B1,<sp/>B0;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/>B3<sp/>=<sp/>4*A4;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/>B2<sp/>=<sp/>3*A3;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/>B1<sp/>=<sp/>2*A2;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/>B0<sp/>=<sp/>A1;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>C2,<sp/>C1,<sp/>C0;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/>C2<sp/>=<sp/>-(A2/2<sp/>-<sp/>3*A3*A3/(16*A4));</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/>C1<sp/>=<sp/>-(3*A1/4.<sp/>-A2*A3/(8*A4));</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/>C0<sp/>=<sp/>-A0<sp/>+<sp/>A1*A3/(16*A4);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>D1,<sp/>D0;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/>D1<sp/>=<sp/>-B1<sp/>-<sp/>(B3*C1*C1/C2<sp/>-<sp/>B3*C0<sp/>-B2*C1)/C2;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/>D0<sp/>=<sp/>-B0<sp/>-<sp/>B3<sp/>*C0<sp/>*C1/(C2*C2)+<sp/>B2*C0/C2;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>E0;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/>E0<sp/>=<sp/>-C0<sp/>-<sp/>C2*D0*D0/(D1*D1)<sp/>+<sp/>C1*D0/D1;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t1,t2,t3,t4,t5;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight><highlight class="comment">//find<sp/>the<sp/>coefficients<sp/>for<sp/>the<sp/>leading<sp/>term<sp/>in<sp/>the<sp/>Sturm<sp/>sequence</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/>t1<sp/>=<sp/>A4;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/>t2<sp/>=<sp/>A4;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/>t3<sp/>=<sp/>C2;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/>t4<sp/>=<sp/>D1;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/>t5<sp/>=<sp/>E0;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight><highlight class="comment">//The<sp/>number<sp/>of<sp/>solutions<sp/>depends<sp/>on<sp/>diffence<sp/>of<sp/>number<sp/>of<sp/>sign<sp/>changes<sp/>for<sp/>x-&gt;Inf<sp/>and<sp/>x-&gt;-Inf</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nsol;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/>nsol<sp/>=<sp/>signchange_n(t1,t2,t3,t4,t5)<sp/>-<sp/>signchange_p(t1,t2,t3,t4,t5);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight><highlight class="comment">//Cannot<sp/>have<sp/>negative<sp/>number<sp/>of<sp/>solutions,<sp/>must<sp/>be<sp/>roundoff<sp/>effect</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nsol<sp/>&lt;<sp/>0)<sp/>nsol<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nsol<sp/>==<sp/>0)<sp/>{out<sp/>=<sp/>0;}<sp/><sp/></highlight><highlight class="comment">//output<sp/>0<sp/>if<sp/>there<sp/>is<sp/>no<sp/>solution,<sp/>1<sp/>if<sp/>there<sp/>is<sp/>solution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{out<sp/>=<sp/>1;}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal">}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mt2w::signchange_n(<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t1,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t2,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t3,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t4,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t5)</highlight></codeline>
<codeline lineno="355"><highlight class="normal">{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nsc;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/>nsc=0;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(t1*t2&gt;0)<sp/>nsc++;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(t2*t3&gt;0)<sp/>nsc++;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(t3*t4&gt;0)<sp/>nsc++;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(t4*t5&gt;0)<sp/>nsc++;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nsc;</highlight></codeline>
<codeline lineno="363"><highlight class="normal">}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mt2w::signchange_p(<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t1,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t2,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t3,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t4,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t5)</highlight></codeline>
<codeline lineno="365"><highlight class="normal">{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nsc;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/>nsc=0;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(t1*t2&lt;0)<sp/>nsc++;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(t2*t3&lt;0)<sp/>nsc++;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(t3*t4&lt;0)<sp/>nsc++;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(t4*t5&lt;0)<sp/>nsc++;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nsc;</highlight></codeline>
<codeline lineno="373"><highlight class="normal">}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal">}</highlight><highlight class="comment">//end<sp/>namespace<sp/>mt2w_bisect</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/src/mt2w_bisect.cpp"/>
  </compounddef>
</doxygen>
