<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="todo" kind="page">
    <compoundname>todo</compoundname>
    <title>Todo List</title>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><variablelist>
<varlistentry><term>Member <ref refid="SUSY__extras_8hpp_1ac4868b56ac0efaa91a49d7c8c761ba79" kindref="member">BACKEND_REQ</ref>  (prospino_run,(libprospino), map_str_dbl,(const PID_pair &amp;, const Options &amp;)) BACKEND_REQ(prospino_read_slha1_input</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000040"/>Extend to also allow models ColliderBit_SLHA_file_model, ColliderBit_SLHA_scan_model  </para>
</listitem>
<varlistentry><term>Member <ref refid="classGambit_1_1ColliderBit_1_1Analysis_1aaece33bab954d82337af28138e893bcf" kindref="member">Gambit::ColliderBit::Analysis::add</ref>  (<ref refid="classGambit_1_1ColliderBit_1_1Analysis" kindref="compound">Analysis</ref> *other)</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000045"/>Access by name, including merging disjoint region sets?  </para>
</listitem>
<varlistentry><term>Member <ref refid="classGambit_1_1ColliderBit_1_1Analysis__ATLAS__13TeV__0LEP__139invfb_1a6b00a5e7d6c430c08277fe0d6b4386b7" kindref="member">Gambit::ColliderBit::Analysis_ATLAS_13TeV_0LEP_139invfb::run</ref>  (const Event *event)</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000049"/>And tight ID for high purity... used where? </para>
<para><anchor id="todo_1_todo000047"/>Drop b-tag if pT &lt; 50 GeV or |eta| &gt; 2.5? </para>
<para><anchor id="todo_1_todo000048"/>Apply a random 9% loss / 0.91 reweight for jet quality criteria? </para>
<para><anchor id="todo_1_todo000046"/>Compute from hard objects instead? </para>
<para><anchor id="todo_1_todo000051"/>Use weighting instead </para>
<para><anchor id="todo_1_todo000050"/>And tight ID for high purity... used where?  </para>
</listitem>
<varlistentry><term>Member <ref refid="classGambit_1_1ColliderBit_1_1Analysis__ATLAS__13TeV__0LEP__13invfb_1aa40e3d489a59153f5fab7bcac7338365" kindref="member">Gambit::ColliderBit::Analysis_ATLAS_13TeV_0LEP_13invfb::run</ref>  (const Event *event)</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000053"/>Unless b-tagged (and pT &gt; 50 &amp;&amp; abseta &lt; 2.5) </para>
<para><anchor id="todo_1_todo000052"/>Drop b-tag if pT &lt; 50 GeV or |eta| &gt; 2.5? </para>
<para><anchor id="todo_1_todo000054"/>Actually only within 0.2<ndash/>0.4... </para>
<para><anchor id="todo_1_todo000055"/>Actually only within 0.2<ndash/>0.4...  </para>
</listitem>
<varlistentry><term>Member <ref refid="classGambit_1_1ColliderBit_1_1Analysis__ATLAS__13TeV__0LEP__36invfb_1a6cb64d6869f9954d107bb23eddb7bb8e" kindref="member">Gambit::ColliderBit::Analysis_ATLAS_13TeV_0LEP_36invfb::run</ref>  (const Event *event)</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000058"/>Actually only within 0.2<ndash/>0.4... </para>
<para><anchor id="todo_1_todo000056"/>Drop b-tag if pT &lt; 50 GeV or |eta| &gt; 2.5? </para>
<para><anchor id="todo_1_todo000057"/>Unless b-tagged (and pT &gt; 50 &amp;&amp; abseta &lt; 2.5) </para>
<para><anchor id="todo_1_todo000059"/>Actually only within 0.2<ndash/>0.4...  </para>
</listitem>
<varlistentry><term>Member <ref refid="classGambit_1_1ColliderBit_1_1Analysis__ATLAS__13TeV__MultiLEP__strong__139invfb_1a1f09d689091069c70ae7a4a2a41deb02" kindref="member">Gambit::ColliderBit::Analysis_ATLAS_13TeV_MultiLEP_strong_139invfb::run</ref>  (const Event *event)</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000060"/>Compute from hard objects instead? </para>
<para><anchor id="todo_1_todo000062"/>Drop b-tag if |eta| &gt; 2.5? </para>
<para><anchor id="todo_1_todo000061"/>Use applyElectronIsolationEfficiency2019 or something similar?  </para>
</listitem>
<varlistentry><term>Member <ref refid="classGambit_1_1ColliderBit_1_1Analysis__CMS__13TeV__0LEP__137invfb_1ad49f1a2b3f8e677d1785d2764b20fa19" kindref="member">Gambit::ColliderBit::Analysis_CMS_13TeV_0LEP_137invfb::run</ref>  (const Event *event)</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000066"/>Sum should actually be over all non-e/mu calo particles </para>
<para><anchor id="todo_1_todo000067"/>Sum should actually be over all non-e/mu calo particles </para>
<para><anchor id="todo_1_todo000065"/>Sum should actually be over all calo particles  </para>
</listitem>
<varlistentry><term>Member <ref refid="classGambit_1_1ColliderBit_1_1Analysis__CMS__13TeV__0LEP__13invfb_1a614ca0f22f7b27694732e47fa1a8d383" kindref="member">Gambit::ColliderBit::Analysis_CMS_13TeV_0LEP_13invfb::run</ref>  (const Event *event)</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000068"/>Sum should actually be over all non-e/mu calo particles </para>
<para><anchor id="todo_1_todo000069"/>Sum should actually be over all non-e/mu calo particles </para>
<para><anchor id="todo_1_todo000070"/>Need access to charged hadrons to do this isolation  </para>
</listitem>
<varlistentry><term>Member <ref refid="classGambit_1_1ColliderBit_1_1Analysis__CMS__13TeV__0LEP__36invfb_1a3d00c533a9a79121397dd01e7d751583" kindref="member">Gambit::ColliderBit::Analysis_CMS_13TeV_0LEP_36invfb::run</ref>  (const Event *event)</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000071"/>Sum should actually be over all non-e/mu calo particles </para>
<para><anchor id="todo_1_todo000072"/>Sum should actually be over all non-e/mu calo particles </para>
<para><anchor id="todo_1_todo000073"/>Need access to charged hadrons to do this isolation  </para>
</listitem>
<varlistentry><term>Class <ref refid="classGambit_1_1ColliderBit_1_1Analysis__CMS__13TeV__MONOJET__36invfb" kindref="compound">Gambit::ColliderBit::Analysis_CMS_13TeV_MONOJET_36invfb</ref>  </term></varlistentry>
<listitem><para><anchor id="todo_1_todo000074"/>Add W/Z region with AKT8 jets and 2/1 n-subjettiness ratio cut  </para>
</listitem>
<varlistentry><term>Member <ref refid="classGambit_1_1ColliderBit_1_1Analysis__CMS__13TeV__MONOJET__36invfb_1abc7838b2881b87a1a91587747714c5ba" kindref="member">Gambit::ColliderBit::Analysis_CMS_13TeV_MONOJET_36invfb::analysis_specific_reset</ref>  ()</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000075"/>Need to also clear/reset cutflow, but it currently has no method for that  </para>
</listitem>
<varlistentry><term>Member <ref refid="classGambit_1_1ColliderBit_1_1Analysis__CMS__8TeV__1LEPDMTOP__20invfb_1a60a7fbcde04070964e967f9a1beb4b93" kindref="member">Gambit::ColliderBit::Analysis_CMS_8TeV_1LEPDMTOP_20invfb::loglikelihood</ref>  ()</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000076"/>Implement!  </para>
</listitem>
<varlistentry><term>Member <ref refid="classGambit_1_1ColliderBit_1_1Analysis__CMS__8TeV__2LEPDMTOP__20invfb_1a86a6589cf54f19e578c786a1e240b772" kindref="member">Gambit::ColliderBit::Analysis_CMS_8TeV_2LEPDMTOP_20invfb::loglikelihood</ref>  ()</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000078"/>Implement!  </para>
</listitem>
<varlistentry><term>Member <ref refid="classGambit_1_1ColliderBit_1_1AnalysisContainer_1a66122d3e492814070c73a1c13d4215b3" kindref="member">Gambit::ColliderBit::AnalysisContainer::clear</ref>  ()</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000080"/>Storing smart ptrs to <ref refid="classGambit_1_1ColliderBit_1_1Analysis" kindref="compound">Analysis</ref> would make this way easier  </para>
</listitem>
<varlistentry><term>Class <ref refid="structGambit_1_1ColliderBit_1_1AnalysisData" kindref="compound">Gambit::ColliderBit::AnalysisData</ref>  </term></varlistentry>
<listitem><para><anchor id="todo_1_todo000002"/>Access by name? </para>
<para></para>
<para>Guarantee ordering? </para>
<para></para>
<para>How to combine covariance matrices <ndash/> require?  </para>
</listitem>
<varlistentry><term>Member <ref refid="structGambit_1_1ColliderBit_1_1AnalysisData_1a8a1c3a6f8d6bfd713619e37ba83095d2" kindref="member">Gambit::ColliderBit::AnalysisData::add</ref>  (const <ref refid="structGambit_1_1ColliderBit_1_1SignalRegionData" kindref="compound">SignalRegionData</ref> &amp;srd)</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000006"/>Allow naming the SRs?  </para>
</listitem>
<varlistentry><term>Member <ref refid="structGambit_1_1ColliderBit_1_1AnalysisData_1a117996f2085894261c7a6d933be3a74c" kindref="member">Gambit::ColliderBit::AnalysisData::clear</ref>  ()</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000005"/>It&apos;d be good to <emphasis>not</emphasis> have to re-enter most of the SRData and the covariance on every point: they don&apos;t change  </para>
</listitem>
<varlistentry><term>Member <ref refid="namespaceGambit_1_1ColliderBit_1_1ATLAS_1ab03047d9d6f4f1dae6fdd0389a8e57ac" kindref="member">Gambit::ColliderBit::ATLAS::applyLooseIDElectronSelectionR2</ref>  (std::vector&lt; const HEPUtils::Particle * &gt; &amp;electrons)</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000011"/>What about faking by jets or non-electrons?  </para>
</listitem>
<varlistentry><term>Member <ref refid="namespaceGambit_1_1ColliderBit_1_1ATLAS_1a0a1f1fd449b607e29c209e3b457e7d7e" kindref="member">Gambit::ColliderBit::ATLAS::applyMediumIDElectronSelection</ref>  (std::vector&lt; const HEPUtils::Particle * &gt; &amp;electrons)</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000012"/>This is an exact duplication of the below filtering code <ndash/> split into a single util fn (in unnamed namespace?) when binned fns are static  </para>
</listitem>
<varlistentry><term>Member <ref refid="namespaceGambit_1_1ColliderBit_1_1ATLAS_1a7f1d0f561ef2bb959ce676241583c33e" kindref="member">Gambit::ColliderBit::ATLAS::applyTauEfficiencyR1</ref>  (std::vector&lt; const HEPUtils::Particle * &gt; &amp;taus)</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000008"/>Use <ulink url="https://cds.cern.ch/record/1233743/files/ATL-PHYS-PUB-2010-001.pdf">https://cds.cern.ch/record/1233743/files/ATL-PHYS-PUB-2010-001.pdf</ulink> <ndash/> it is more accurate and has pT-dependence  </para>
</listitem>
<varlistentry><term>Member <ref refid="namespaceGambit_1_1ColliderBit_1_1ATLAS_1a02e070dc82bdc10cf8d4d07477cd111c" kindref="member">Gambit::ColliderBit::ATLAS::applyTightIDElectronSelection</ref>  (std::vector&lt; const HEPUtils::Particle * &gt; &amp;electrons)</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000013"/>This is an exact duplication of the above filtering code <ndash/> split into a single util fn (in unnamed namespace?) when binned fns are static  </para>
</listitem>
<varlistentry><term>Member <ref refid="namespaceGambit_1_1ColliderBit_1_1ATLAS_1a43ab61722c904642c08b935644dbd0d9" kindref="member">Gambit::ColliderBit::ATLAS::smearJets</ref>  (std::vector&lt; HEPUtils::Jet * &gt; &amp;jets)</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000009"/>Is this the best way to smear? Should we preserve the mean jet energy, or pT, or direction?  </para>
</listitem>
<varlistentry><term>Member <ref refid="namespaceGambit_1_1ColliderBit_1_1ATLAS_1a788362cce2744e7839f03f6db3950b90" kindref="member">Gambit::ColliderBit::ATLAS::smearTaus</ref>  (std::vector&lt; HEPUtils::Particle * &gt; &amp;taus)</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000010"/>Is this the best way to smear? Should we preserve the mean jet energy, or pT, or direction?  </para>
</listitem>
<varlistentry><term>Member <ref refid="classGambit_1_1ColliderBit_1_1BuckFast_1a39363bb325b8bf55b6becc6995df8e2e" kindref="member">Gambit::ColliderBit::BuckFast::processEvent</ref>  (HEPUtils::Event &amp;) const</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000081"/>Run-dependence? </para>
<para><anchor id="todo_1_todo000082"/>Run-dependence?  </para>
</listitem>
<varlistentry><term>Member <ref refid="ColliderBit__InterpolatedYields_8cpp_1aa372076882c0888fc20fcf8f52a666e1" kindref="member">Gambit::ColliderBit::calc_loglikes_for_analysis</ref>  (const <ref refid="structGambit_1_1ColliderBit_1_1AnalysisData" kindref="compound">AnalysisData</ref> &amp;, bool, bool, bool, bool)</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000087"/>Compute the background-only covariance decomposition and likelihood only once </para>
<para><anchor id="todo_1_todo000088"/>Only compute this once per run </para>
<para><anchor id="todo_1_todo000089"/>Use newer (?) one-step Eigen constructors for (const) single-element arrays </para>
<para><anchor id="todo_1_todo000090"/>Or compute all the exp DLLs first, then only the best-expected SR&apos;s obs DLL? </para>
<para><anchor id="todo_1_todo000091"/></para>
<para><anchor id="todo_1_todo000092"/>Only compute this once per run </para>
<para><anchor id="todo_1_todo000093"/>Only compute this once per run </para>
<para><anchor id="todo_1_todo000086"/>Unify this for both cov and no-cov, feeding in one-element Eigen blocks as Ref&lt;&gt;s for the latter? </para>
<para><anchor id="todo_1_todo000085"/>Support NSL, i.e. skewness correction  </para>
</listitem>
<varlistentry><term>Member <ref refid="namespaceGambit_1_1ColliderBit_1_1CMS_1aa82b5cc950fdb91e31c9bb3ac7d26d80" kindref="member">Gambit::ColliderBit::CMS::smearJets</ref>  (std::vector&lt; HEPUtils::Jet * &gt; &amp;jets)</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000015"/>This is the <ref refid="namespaceGambit_1_1ColliderBit_1_1ATLAS" kindref="compound">ATLAS</ref> number... I can&apos;t find values for the <ref refid="namespaceGambit_1_1ColliderBit_1_1CMS" kindref="compound">CMS</ref> parameterisation, cf. <ulink url="https://cds.cern.ch/record/1339945/files/JME-10-014-pas.pdf">https://cds.cern.ch/record/1339945/files/JME-10-014-pas.pdf</ulink> <ulink url="https://twiki.cern.ch/twiki/bin/view/CMSPublic/SWGuideJetResolution">https://twiki.cern.ch/twiki/bin/view/CMSPublic/SWGuideJetResolution</ulink> <ulink url="https://github.com/adrager/cmssw/blob/CMSSW_7_2_X/CondFormats/JetMETObjects/test/TestCorrections.C">https://github.com/adrager/cmssw/blob/CMSSW_7_2_X/CondFormats/JetMETObjects/test/TestCorrections.C</ulink> </para>
<para><anchor id="todo_1_todo000014"/>Update cf. Matthias study for <ref refid="namespaceGambit_1_1ColliderBit_1_1ATLAS" kindref="compound">ATLAS</ref>  </para>
</listitem>
<varlistentry><term>Member <ref refid="namespaceGambit_1_1ColliderBit_1_1CMS_1ac1abbb95c9de02059ac9b59bfdea20a2" kindref="member">Gambit::ColliderBit::CMS::smearTaus</ref>  (std::vector&lt; HEPUtils::Particle * &gt; &amp;taus)</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000017"/>Is this the best way to smear? Should we preserve the mean jet energy, or pT, or direction? </para>
<para><anchor id="todo_1_todo000016"/>Update cf. Matthias study for <ref refid="namespaceGambit_1_1ColliderBit_1_1ATLAS" kindref="compound">ATLAS</ref>  </para>
</listitem>
<varlistentry><term>Member <ref refid="Py8EventConversions_8hpp_1ab50b344a3140f50cdc0b43f1437274de" kindref="member">Gambit::ColliderBit::convertParticleEvent</ref>  (const EventT &amp;pevt, HEPUtils::Event &amp;result, double antiktR, double jet_pt_min)</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000028"/>Hard-coded radius!!! </para>
<para><anchor id="todo_1_todo000027"/>Hard-coded radius!!! </para>
<para><anchor id="todo_1_todo000026"/>Hard-coded radius!!! </para>
<para><anchor id="todo_1_todo000024"/>Use ghost tagging? </para>
<para><anchor id="todo_1_todo000023"/>Choose jet algorithm via detector _settings? Run several algs? </para>
<para><anchor id="todo_1_todo000022"/>Move out-of-acceptance MET contribution to <ref refid="classGambit_1_1ColliderBit_1_1BuckFast" kindref="compound">BuckFast</ref> </para>
<para><anchor id="todo_1_todo000021"/>What&apos;s wrong with having a W daughter? Doesn&apos;t that just mark a final tau? </para>
<para><anchor id="todo_1_todo000020"/>Temporarily using quark-based tagging instead <ndash/> fix </para>
<para><anchor id="todo_1_todo000019"/>Temporarily using quark-based tagging instead <ndash/> fix </para>
<para><anchor id="todo_1_todo000018"/>Overlap between jets and prompt containers: need some isolation in MET calculation </para>
<para><anchor id="todo_1_todo000025"/>Replace with HEPUtils::any(bhadrons, [&amp;](const auto&amp; pb){ pj.delta_R(pb) &lt; 0.4 })  </para>
</listitem>
<varlistentry><term>Member <ref refid="Py8EventConversions_8hpp_1a42e166b5bdf2ffb8544b4a65edc89976" kindref="member">Gambit::ColliderBit::convertPartonEvent</ref>  (const EventT &amp;pevt, HEPUtils::Event &amp;result, double antiktR, double jet_pt_min)</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000029"/>We should leave this for the detector sim / analysis to deal with </para>
<para><anchor id="todo_1_todo000034"/>choose jet algorithm via _settings? </para>
<para><anchor id="todo_1_todo000033"/>Only include hadronic tau fraction? </para>
<para><anchor id="todo_1_todo000032"/>Lepton dressing </para>
<para><anchor id="todo_1_todo000031"/></para>
<para><anchor id="todo_1_todo000030"/><emphasis>Some</emphasis> photons should be included in jets!!! Ignore for now since no FSR  </para>
</listitem>
<varlistentry><term>Member <ref refid="structGambit_1_1ColliderBit_1_1Cutflows_1a7fcf067fd2e9497a59a59947a6383b2b" kindref="member">Gambit::ColliderBit::Cutflows::normalize</ref>  (double norm, size_t icut=0)</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000007"/>Provide a version that takes a vector of norms?  </para>
</listitem>
<varlistentry><term>Member <ref refid="Utils_8hpp_1a1a018b09cbd8d1f85e2af56b717a5f6e" kindref="member">Gambit::ColliderBit::filter_reject</ref>  (const ParticlePtrs &amp;particles, std::function&lt; bool(const Particle *)&gt; rejfn, bool do_delete=true)</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000041"/>Optimise by only copying those which are selected (filter_select is canonical)  </para>
</listitem>
<varlistentry><term>Member <ref refid="Utils_8hpp_1a2413a535901135a74d4d20f101c78abd" kindref="member">Gambit::ColliderBit::filter_reject</ref>  (const JetPtrs &amp;jets, std::function&lt; bool(const Jet *)&gt; rejfn, bool do_delete=true)</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000042"/>Optimise by only copying those which are selected (filter_select is canonical)  </para>
</listitem>
<varlistentry><term>Member <ref refid="Py8Utils_8hpp_1afe3f3167e3fd6c6a40c811daf8049a9e" kindref="member">Gambit::ColliderBit::fromBottom</ref>  (int n, const EventT &amp;evt)</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000036"/>What about partonic decays? </para>
<para><anchor id="todo_1_todo000035"/>Rewrite using the Pythia &gt; 8.176 particle-based methods  </para>
</listitem>
<varlistentry><term>Member <ref refid="Py8Utils_8hpp_1aa7eb6fa6f85fb094a6b3eccf87c51913" kindref="member">Gambit::ColliderBit::fromHadron</ref>  (int n, const EventT &amp;evt)</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000038"/>Rewrite using the Pythia &gt; 8.176 particle-based methods  </para>
</listitem>
<varlistentry><term>Member <ref refid="Py8Utils_8hpp_1aabbafbbb0e8d2bbba0ed8f66cd799471" kindref="member">Gambit::ColliderBit::fromTau</ref>  (int n, const EventT &amp;evt)</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000037"/>Rewrite using the Pythia &gt; 8.176 particle-based methods  </para>
</listitem>
<varlistentry><term>Member <ref refid="LHC__likelihoods_8cpp_1a88887324dcde65eec7890eddc1b942b3" kindref="member">Gambit::ColliderBit::get_LHC_LogLike_SR_indices</ref>  (map_str_dbl &amp;result)</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000094"/>Switch result type to map_str_int once we have implemented a printer for this type  </para>
</listitem>
<varlistentry><term>Member <ref refid="SUSY__extras_8cpp_1a6363fd11361a2611aa3285cb075a5672" kindref="member">Gambit::ColliderBit::getAndReplaceSLHAContent</ref>  (pair_str_SLHAstruct &amp;result)</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000097"/>Add option to save the new SLHA content to file  </para>
</listitem>
<varlistentry><term>Member <ref refid="Utils_8hpp_1a3a98b6d22188cdf64b09e866b31cb6f3" kindref="member">Gambit::ColliderBit::has_tag</ref>  (const HEPUtils::BinnedFn2D&lt; double &gt; &amp;effmap, double eta, double pt)</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000044"/>Also need 1D? Sampling in what variable?  </para>
</listitem>
<varlistentry><term>Member <ref refid="LHC__likelihoods_8cpp_1ac6ca5a53404e7386a30f556ff9894ca7" kindref="member">Gambit::ColliderBit::marg_loglike_cov</ref>  (const Eigen::ArrayXd &amp;n_preds, const Eigen::ArrayXd &amp;n_obss, const Eigen::ArrayXd &amp;sqrtevals, const Eigen::MatrixXd &amp;evecs)</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000084"/>Should also implement a check of relative difference  </para>
</listitem>
<varlistentry><term>Member <ref refid="AnalysisContainer_8hpp_1a02a869bd87c56deb16a32a91e08342be" kindref="member">Gambit::ColliderBit::mkAnalysis</ref>  (const str &amp;name)</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000001"/>Move to a separate file  </para>
</listitem>
<varlistentry><term>Member <ref refid="LHC__likelihoods_8cpp_1ac5fbc3cb77924f2552408b92e1e6435e" kindref="member">Gambit::ColliderBit::profile_loglike_cov</ref>  (const Eigen::ArrayXd &amp;n_preds, const Eigen::ArrayXd &amp;n_obss, const Eigen::ArrayXd &amp;sqrtevals, const Eigen::MatrixXd &amp;evecs)</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000083"/>Pass in the cov, and compute the fixed evals, evecs, and corr matrix as fixed params in here? Via a helper function to reduce duplication  </para>
</listitem>
<varlistentry><term>Member <ref refid="Utils_8hpp_1a3b59353a7ec6cb32c170baddc17ee4ed" kindref="member">Gambit::ColliderBit::random_bool</ref>  (double eff)</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000098"/>Handle out-of-range eff values  </para>
</listitem>
<varlistentry><term>Member <ref refid="structGambit_1_1ColliderBit_1_1SignalRegionData_1a80c806d8e0fb934d1463dc44ddd1c14a" kindref="member">Gambit::ColliderBit::SignalRegionData::check</ref>  () const</term></varlistentry>
<listitem><para><anchor id="todo_1_todo000003"/>Add SR consistency checks </para>
</listitem>
</variablelist>
</para>
    </detaileddescription>
    <location file="todo"/>
  </compounddef>
</doxygen>
