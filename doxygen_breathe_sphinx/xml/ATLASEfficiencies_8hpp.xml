<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="ATLASEfficiencies_8hpp" kind="file" language="C++">
    <compoundname>ATLASEfficiencies.hpp</compoundname>
    <includes local="no">cfloat</includes>
    <includes refid="Utils_8hpp" local="yes">gambit/ColliderBit/Utils.hpp</includes>
    <includes local="yes">gambit/Utils/threadsafe_rng.hpp</includes>
    <includes local="yes">HEPUtils/MathUtils.h</includes>
    <includes local="yes">HEPUtils/BinnedFn.h</includes>
    <includes local="yes">HEPUtils/Event.h</includes>
    <includedby refid="Analysis__ATLAS__13TeV__0LEPStop__36invfb_8cpp" local="yes">C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/src/analyses/Analysis_ATLAS_13TeV_0LEPStop_36invfb.cpp</includedby>
    <includedby refid="Analysis__ATLAS__13TeV__0LEP__139invfb_8cpp" local="yes">C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/src/analyses/Analysis_ATLAS_13TeV_0LEP_139invfb.cpp</includedby>
    <includedby refid="Analysis__ATLAS__13TeV__0LEP__13invfb_8cpp" local="yes">C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/src/analyses/Analysis_ATLAS_13TeV_0LEP_13invfb.cpp</includedby>
    <includedby refid="Analysis__ATLAS__13TeV__0LEP__36invfb_8cpp" local="yes">C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/src/analyses/Analysis_ATLAS_13TeV_0LEP_36invfb.cpp</includedby>
    <includedby refid="Analysis__ATLAS__13TeV__1LEPStop__36invfb_8cpp" local="yes">C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/src/analyses/Analysis_ATLAS_13TeV_1LEPStop_36invfb.cpp</includedby>
    <includedby refid="Analysis__ATLAS__13TeV__2LEPStop__139invfb_8cpp" local="yes">C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/src/analyses/Analysis_ATLAS_13TeV_2LEPStop_139invfb.cpp</includedby>
    <includedby refid="Analysis__ATLAS__13TeV__2LEPStop__36invfb_8cpp" local="yes">C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/src/analyses/Analysis_ATLAS_13TeV_2LEPStop_36invfb.cpp</includedby>
    <includedby refid="Analysis__ATLAS__13TeV__2OSLEP__Z__139invfb_8cpp" local="yes">C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/src/analyses/Analysis_ATLAS_13TeV_2OSLEP_Z_139invfb.cpp</includedby>
    <includedby refid="Analysis__ATLAS__13TeV__2OSLEP__chargino__139invfb_8cpp" local="yes">C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/src/analyses/Analysis_ATLAS_13TeV_2OSLEP_chargino_139invfb.cpp</includedby>
    <includedby refid="Analysis__ATLAS__13TeV__2OSLEP__chargino__80invfb_8cpp" local="yes">C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/src/analyses/Analysis_ATLAS_13TeV_2OSLEP_chargino_80invfb.cpp</includedby>
    <includedby refid="Analysis__ATLAS__13TeV__2bMET__36invfb_8cpp" local="yes">C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/src/analyses/Analysis_ATLAS_13TeV_2bMET_36invfb.cpp</includedby>
    <includedby refid="Analysis__ATLAS__13TeV__3b__24invfb_8cpp" local="yes">C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/src/analyses/Analysis_ATLAS_13TeV_3b_24invfb.cpp</includedby>
    <includedby refid="Analysis__ATLAS__13TeV__3b__36invfb_8cpp" local="yes">C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/src/analyses/Analysis_ATLAS_13TeV_3b_36invfb.cpp</includedby>
    <includedby refid="Analysis__ATLAS__13TeV__4LEP__139invfb_8cpp" local="yes">C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/src/analyses/Analysis_ATLAS_13TeV_4LEP_139invfb.cpp</includedby>
    <includedby refid="Analysis__ATLAS__13TeV__4LEP__36invfb_8cpp" local="yes">C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/src/analyses/Analysis_ATLAS_13TeV_4LEP_36invfb.cpp</includedby>
    <includedby refid="Analysis__ATLAS__13TeV__MultiLEP__36invfb_8cpp" local="yes">C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/src/analyses/Analysis_ATLAS_13TeV_MultiLEP_36invfb.cpp</includedby>
    <includedby refid="Analysis__ATLAS__13TeV__MultiLEP__confnote__36invfb_8cpp" local="yes">C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/src/analyses/Analysis_ATLAS_13TeV_MultiLEP_confnote_36invfb.cpp</includedby>
    <includedby refid="Analysis__ATLAS__13TeV__MultiLEP__strong__139invfb_8cpp" local="yes">C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/src/analyses/Analysis_ATLAS_13TeV_MultiLEP_strong_139invfb.cpp</includedby>
    <includedby refid="Analysis__ATLAS__13TeV__PhotonGGM__36invfb_8cpp" local="yes">C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/src/analyses/Analysis_ATLAS_13TeV_PhotonGGM_36invfb.cpp</includedby>
    <includedby refid="Analysis__ATLAS__13TeV__RJ3L__lowmass__36invfb_8cpp" local="yes">C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/src/analyses/Analysis_ATLAS_13TeV_RJ3L_lowmass_36invfb.cpp</includedby>
    <includedby refid="Analysis__ATLAS__13TeV__ZGammaGrav__CONFNOTE__80invfb_8cpp" local="yes">C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/src/analyses/Analysis_ATLAS_13TeV_ZGammaGrav_CONFNOTE_80invfb.cpp</includedby>
    <includedby refid="Analysis__ATLAS__7TeV__1OR2LEPStop__4__7invfb_8cpp" local="no">C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/src/analyses/Analysis_ATLAS_7TeV_1OR2LEPStop_4_7invfb.cpp</includedby>
    <includedby refid="Analysis__ATLAS__7TeV__2LEPStop__4__7invfb_8cpp" local="yes">C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/src/analyses/Analysis_ATLAS_7TeV_2LEPStop_4_7invfb.cpp</includedby>
    <includedby refid="Analysis__ATLAS__8TeV__0LEPStop__20invfb_8cpp" local="yes">C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/src/analyses/Analysis_ATLAS_8TeV_0LEPStop_20invfb.cpp</includedby>
    <includedby refid="Analysis__ATLAS__8TeV__0LEP__20invfb_8cpp" local="yes">C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/src/analyses/Analysis_ATLAS_8TeV_0LEP_20invfb.cpp</includedby>
    <includedby refid="Analysis__ATLAS__8TeV__1LEPStop__20invfb_8cpp" local="yes">C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/src/analyses/Analysis_ATLAS_8TeV_1LEPStop_20invfb.cpp</includedby>
    <includedby refid="Analysis__ATLAS__8TeV__1LEPbb__20invfb_8cpp" local="yes">C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/src/analyses/Analysis_ATLAS_8TeV_1LEPbb_20invfb.cpp</includedby>
    <includedby refid="Analysis__ATLAS__8TeV__2LEPEW__20invfb_8cpp" local="yes">C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/src/analyses/Analysis_ATLAS_8TeV_2LEPEW_20invfb.cpp</includedby>
    <includedby refid="Analysis__ATLAS__8TeV__2LEPStop__20invfb_8cpp" local="yes">C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/src/analyses/Analysis_ATLAS_8TeV_2LEPStop_20invfb.cpp</includedby>
    <includedby refid="Analysis__ATLAS__8TeV__2bStop__20invfb_8cpp" local="yes">C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/src/analyses/Analysis_ATLAS_8TeV_2bStop_20invfb.cpp</includedby>
    <includedby refid="Analysis__ATLAS__8TeV__3LEPEW__20invfb_8cpp" local="yes">C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/src/analyses/Analysis_ATLAS_8TeV_3LEPEW_20invfb.cpp</includedby>
    <includedby refid="Analysis__CMS__13TeV__2LEPStop__36invfb_8cpp" local="yes">C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/src/analyses/Analysis_CMS_13TeV_2LEPStop_36invfb.cpp</includedby>
    <includedby refid="Analysis__Covariance_8cpp" local="yes">C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/src/analyses/Analysis_Covariance.cpp</includedby>
    <includedby refid="Analysis__Minimum_8cpp" local="yes">C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/src/analyses/Analysis_Minimum.cpp</includedby>
    <includedby refid="getBuckFast_8cpp" local="yes">C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/src/getBuckFast.cpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/include/gambit/ColliderBit/ATLASEfficiencies.hpp</label>
        <link refid="ATLASEfficiencies_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>gambit/ColliderBit/Utils.hpp</label>
        <link refid="Utils_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>HEPUtils/BinnedFn.h</label>
      </node>
      <node id="8">
        <label>HEPUtils/Event.h</label>
      </node>
      <node id="9">
        <label>HEPUtils/FastJet.h</label>
      </node>
      <node id="6">
        <label>HEPUtils/MathUtils.h</label>
      </node>
      <node id="2">
        <label>cfloat</label>
      </node>
      <node id="4">
        <label>functional</label>
      </node>
      <node id="10">
        <label>gambit/Utils/threadsafe_rng.hpp</label>
      </node>
      <node id="5">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/include/gambit/ColliderBit/ATLASEfficiencies.hpp</label>
        <link refid="ATLASEfficiencies_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/src/getBuckFast.cpp</label>
        <link refid="getBuckFast_8cpp"/>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespaceGambit">Gambit</innernamespace>
    <innernamespace refid="namespaceGambit_1_1ColliderBit">Gambit::ColliderBit</innernamespace>
    <innernamespace refid="namespaceGambit_1_1ColliderBit_1_1ATLAS">Gambit::ColliderBit::ATLAS</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Functions that do super fast ATLAS detector simulation based on four-vector smearing.</para>
<para><hruler/>
</para>
<para>Authors (add name and date if you modify):</para>
<para><simplesect kind="author"><para>Andy Buckley </para>
</simplesect>
<simplesect kind="author"><para>Abram Krislock </para>
</simplesect>
<simplesect kind="author"><para>Anders Kvellestad </para>
</simplesect>
<simplesect kind="author"><para>Matthias Danninger </para>
</simplesect>
<simplesect kind="author"><para>Rose Kudzman-Blais </para>
</simplesect>
<simplesect kind="author"><para>Pat Scott </para>
</simplesect>
<simplesect kind="author"><para>Tomas Gonzalo</para>
</simplesect>
<hruler/>
 </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/><sp/><sp/>GAMBIT:<sp/>Global<sp/>and<sp/>Modular<sp/>BSM<sp/>Inference<sp/>Tool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>*********************************************</highlight></codeline>
<codeline lineno="21"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cfloat&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Utils_8hpp" kindref="compound">gambit/ColliderBit/Utils.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;gambit/Utils/threadsafe_rng.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;HEPUtils/MathUtils.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;HEPUtils/BinnedFn.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;HEPUtils/Event.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceGambit" kindref="compound">Gambit</ref></highlight></codeline>
<codeline lineno="35"><highlight class="normal">{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">ColliderBit</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="namespaceGambit_1_1ColliderBit_1_1ATLAS" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">ATLAS</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>///<sp/>Randomly<sp/>filter<sp/>the<sp/>supplied<sp/>particle<sp/>list<sp/>by<sp/>parameterised<sp/>electron<sp/>tracking<sp/>efficiency</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>///<sp/>@todo<sp/>Remove?<sp/>This<sp/>is<sp/>not<sp/>the<sp/>electron<sp/>efficiency</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>inline<sp/>void<sp/>applyElectronTrackingEff(std::vector&lt;const<sp/>HEPUtils::Particle*&gt;&amp;<sp/>electrons)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>static<sp/>HEPUtils::BinnedFn2D&lt;double&gt;<sp/>_elTrackEff2d({{0,<sp/>1.5,<sp/>2.5,<sp/>DBL_MAX}},<sp/>//&lt;<sp/>|eta|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{{0,<sp/>0.1,<sp/>1.0,<sp/>100,<sp/>DBL_MAX}},<sp/>//&lt;<sp/>pT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{{0.,<sp/>0.73,<sp/>0.95,<sp/>0.99,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.,<sp/>0.5,<sp/><sp/>0.83,<sp/>0.90,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.,<sp/>0.,<sp/><sp/><sp/>0.,<sp/><sp/><sp/>0.}});</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>filtereff_etapt(electrons,<sp/>_elTrackEff2d);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="namespaceGambit_1_1ColliderBit_1_1ATLAS_1a11974204f71df5d81e23f013b68b5027" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1_1ColliderBit_1_1ATLAS_1a11974204f71df5d81e23f013b68b5027" kindref="member">applyElectronEff</ref>(std::vector&lt;const<sp/>HEPUtils::Particle*&gt;&amp;<sp/>electrons)<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>HEPUtils::BinnedFn2D&lt;double&gt;<sp/>_elEff2d({{0,1.5,2.5,DBL_MAX}},<sp/></highlight><highlight class="comment">//&lt;<sp/>|eta|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{{0,10.,DBL_MAX}},<sp/></highlight><highlight class="comment">//&lt;<sp/>pT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{{0.,<sp/>0.95,</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.,<sp/>0.85,</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.,<sp/>0.}});</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="Utils_8hpp_1a198880b5e00a4a2c6a6e7a3ee801ad1e" kindref="member">filtereff_etapt</ref>(electrons,<sp/>_elEff2d);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>///<sp/>Randomly<sp/>filter<sp/>the<sp/>supplied<sp/>particle<sp/>list<sp/>by<sp/>parameterised<sp/>muon<sp/>tracking<sp/>efficiency</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>///<sp/>@todo<sp/>Remove?<sp/>This<sp/>is<sp/>not<sp/>the<sp/>muon<sp/>efficiency</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>inline<sp/>void<sp/>applyMuonTrackEff(std::vector&lt;const<sp/>HEPUtils::Particle*&gt;&amp;<sp/>muons)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>static<sp/>HEPUtils::BinnedFn2D&lt;double&gt;<sp/>_muTrackEff2d({{0,1.5,2.5,DBL_MAX}},<sp/>//&lt;<sp/>|eta|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{{0,0.1,1.0,DBL_MAX}},<sp/>//&lt;<sp/>pT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{{0.,<sp/>0.75,<sp/>0.99,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.,<sp/>0.70,<sp/>0.98,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.,<sp/>0.,<sp/><sp/><sp/>0.}});</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>filtereff_etapt(muons,<sp/>_muTrackEff2d);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="namespaceGambit_1_1ColliderBit_1_1ATLAS_1aed15b411a9dd1525f4c429001c30e2a9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1_1ColliderBit_1_1ATLAS_1aed15b411a9dd1525f4c429001c30e2a9" kindref="member">applyMuonEff</ref>(std::vector&lt;const<sp/>HEPUtils::Particle*&gt;&amp;<sp/>muons)<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>HEPUtils::BinnedFn2D&lt;double&gt;<sp/>_muEff2d({{0,1.5,2.7,DBL_MAX}},<sp/></highlight><highlight class="comment">//&lt;<sp/>|eta|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{{0,10.0,DBL_MAX}},<sp/></highlight><highlight class="comment">//&lt;<sp/>pT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{{0.,<sp/>0.95,</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.,<sp/>0.85,</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.,<sp/>0.}});</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="Utils_8hpp_1a198880b5e00a4a2c6a6e7a3ee801ad1e" kindref="member">filtereff_etapt</ref>(muons,<sp/>_muEff2d);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="namespaceGambit_1_1ColliderBit_1_1ATLAS_1a6210e1c1e1bc6608f69993b0706ae8c0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1_1ColliderBit_1_1ATLAS_1a6210e1c1e1bc6608f69993b0706ae8c0" kindref="member">applyMuonEffR2</ref>(std::vector&lt;const<sp/>HEPUtils::Particle*&gt;&amp;<sp/>muons)<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>HEPUtils::BinnedFn2D&lt;double&gt;<sp/>_muEff2d({0,<sp/>2.7,<sp/>DBL_MAX},<sp/></highlight><highlight class="comment">//&lt;<sp/>|eta|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{0.,<sp/>3.5,<sp/>4.,<sp/>5.,<sp/>6.,<sp/>7.,<sp/>8.,<sp/>10.,<sp/>DBL_MAX},<sp/></highlight><highlight class="comment">//&lt;<sp/>pT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{0.00,<sp/>0.76,<sp/>0.94,<sp/>0.97,<sp/>0.98,<sp/>0.98,<sp/>0.98,<sp/>0.99,</highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.00,<sp/>0.00,<sp/>0.00,<sp/>0.00,<sp/>0.00,<sp/>0.00,<sp/>0.00,<sp/>0.00});</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="Utils_8hpp_1a198880b5e00a4a2c6a6e7a3ee801ad1e" kindref="member">filtereff_etapt</ref>(muons,<sp/>_muEff2d);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="namespaceGambit_1_1ColliderBit_1_1ATLAS_1a7f1d0f561ef2bb959ce676241583c33e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1_1ColliderBit_1_1ATLAS_1a7f1d0f561ef2bb959ce676241583c33e" kindref="member">applyTauEfficiencyR1</ref>(std::vector&lt;const<sp/>HEPUtils::Particle*&gt;&amp;<sp/>taus)<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="Utils_8hpp_1a878e042861c7e3c817f85f0678954ecc" kindref="member">filtereff</ref>(taus,<sp/>0.40);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="116" refid="namespaceGambit_1_1ColliderBit_1_1ATLAS_1a9adc55ce219844b065be0eeaf11fdf29" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1_1ColliderBit_1_1ATLAS_1a9adc55ce219844b065be0eeaf11fdf29" kindref="member">applyTauEfficiencyR2</ref>(std::vector&lt;const<sp/>HEPUtils::Particle*&gt;&amp;<sp/>taus)<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Delphes<sp/>3.3.2<sp/>config:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>set<sp/>DeltaR<sp/>0.2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>set<sp/>DeltaRTrack<sp/>0.2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>set<sp/>TrackPTMin<sp/>1.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>set<sp/>TauPTMin<sp/>1.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>set<sp/>TauEtaMax<sp/>2.5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>#<sp/>instructions:<sp/>{n-prongs}<sp/>{eff}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>#<sp/>1<sp/>-<sp/>one<sp/>prong<sp/>efficiency</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>#<sp/>2<sp/>-<sp/>two<sp/>or<sp/>more<sp/>efficiency</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>#<sp/>-1<sp/>-<sp/>one<sp/>prong<sp/>mistag<sp/>rate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>#<sp/>-2<sp/>-<sp/>two<sp/>or<sp/>more<sp/>mistag<sp/>rate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>set<sp/>BitNumber<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>#<sp/>taken<sp/>from<sp/>ATL-PHYS-PUB-2015-045<sp/>(medium<sp/>working<sp/>point)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>add<sp/>EfficiencyFormula<sp/>{1}<sp/>{0.70}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>add<sp/>EfficiencyFormula<sp/>{2}<sp/>{0.60}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>add<sp/>EfficiencyFormula<sp/>{-1}<sp/>{0.02}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>add<sp/>EfficiencyFormula<sp/>{-2}<sp/>{0.01}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>filtereff(taus,<sp/>0.65);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Distributions<sp/>from<sp/>ATL-PHYS-PUB-2015-045,<sp/>Fig<sp/>10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/>binedges_pt<sp/><sp/><sp/><sp/>=<sp/>{<sp/>0.,<sp/><sp/>20.,<sp/><sp/>40.,<sp/><sp/><sp/>60.,<sp/><sp/><sp/>120.,<sp/><sp/>160.,<sp/><sp/><sp/>220.,<sp/><sp/><sp/>280.,<sp/><sp/><sp/>380.,<sp/><sp/><sp/><sp/>500.,<sp/><sp/>DBL_MAX<sp/>};</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/>bineffs_pt_1p<sp/><sp/>=<sp/>{<sp/>0.,<sp/><sp/>.54,<sp/><sp/>.55,<sp/><sp/><sp/>.56,<sp/><sp/><sp/><sp/>.58,<sp/><sp/><sp/>.57,<sp/><sp/><sp/><sp/>.56,<sp/><sp/><sp/><sp/>.54,<sp/><sp/><sp/><sp/><sp/>.51,<sp/><sp/><sp/><sp/><sp/>0.<sp/>};</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/>bineffs_pt_3p<sp/><sp/>=<sp/>{<sp/>0.,<sp/><sp/>.40,<sp/><sp/>.41,<sp/><sp/><sp/>.42,<sp/><sp/><sp/><sp/>.46,<sp/><sp/><sp/>.46,<sp/><sp/><sp/><sp/>.43,<sp/><sp/><sp/><sp/>.39,<sp/><sp/><sp/><sp/><sp/>.33,<sp/><sp/><sp/><sp/><sp/>0.<sp/>};</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>HEPUtils::BinnedFn1D&lt;double&gt;<sp/>_eff_pt_1p(binedges_pt,<sp/>bineffs_pt_1p);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>HEPUtils::BinnedFn1D&lt;double&gt;<sp/>_eff_pt_3p(binedges_pt,<sp/>bineffs_pt_3p);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>85%<sp/>1-prong,<sp/>15%<sp/>&gt;=3-prong</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/>bineffs_pt_avg<sp/>=<sp/>{<sp/>0.,<sp/><sp/>.52,<sp/><sp/>.53,<sp/><sp/><sp/>.54,<sp/><sp/><sp/><sp/>.56,<sp/><sp/><sp/>.55,<sp/><sp/><sp/><sp/>.54,<sp/><sp/><sp/><sp/>.52,<sp/><sp/><sp/><sp/><sp/>.48,<sp/><sp/><sp/><sp/><sp/>0.<sp/>};</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>HEPUtils::BinnedFn1D&lt;double&gt;<sp/>_eff_pt_avg(binedges_pt,<sp/>bineffs_pt_avg);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="Utils_8hpp_1acacdc93daa0787f1cf7a436380390a7a" kindref="member">filtereff_pt</ref>(taus,<sp/>_eff_pt_avg);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>applyPhotonEfficiencyR2(std::vector&lt;const<sp/>HEPUtils::Particle*&gt;&amp;<sp/>photons)<sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/>binedges_eta<sp/><sp/><sp/>=<sp/>{<sp/>0.,<sp/>0.6,<sp/>1.37,<sp/>1.52,<sp/>1.81,<sp/>2.37,<sp/>DBL_MAX<sp/>};</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/>binedges_pt<sp/><sp/><sp/><sp/>=<sp/>{<sp/>0.,<sp/>10.,<sp/>15.,<sp/>20.,<sp/>25.,<sp/>30.,<sp/>35.,<sp/>40.,<sp/>45.,<sp/>50.,<sp/>60.,<sp/>80.,<sp/>100.,<sp/>125.,<sp/>150.,<sp/>175.,<sp/>250.,<sp/>DBL_MAX<sp/>};</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/>bineffs_etapt<sp/><sp/>=<sp/>{<sp/>0.00,<sp/>0.55,<sp/>0.70,<sp/>0.85,<sp/>0.89,<sp/>0.93,<sp/>0.95,<sp/>0.96,<sp/>0.96,<sp/>0.97,<sp/>0.97,<sp/>0.98,<sp/>0.97,<sp/>0.97,<sp/>0.97,<sp/>0.97,<sp/>0.97,<sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.00,<sp/>0.47,<sp/>0.66,<sp/>0.79,<sp/>0.86,<sp/>0.89,<sp/>0.94,<sp/>0.96,<sp/>0.97,<sp/>0.97,<sp/>0.98,<sp/>0.97,<sp/>0.98,<sp/>0.98,<sp/>0.98,<sp/>0.98,<sp/>0.98,<sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.00,<sp/>0.00,<sp/>0.00,<sp/>0.00,<sp/>0.00,<sp/>0.00,<sp/>0.00,<sp/>0.00,<sp/>0.00,<sp/>0.00,<sp/>0.00,<sp/>0.00,<sp/>0.00,<sp/>0.00,<sp/>0.00,<sp/>0.00,<sp/>0.00,<sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.00,<sp/>0.54,<sp/>0.71,<sp/>0.84,<sp/>0.88,<sp/>0.92,<sp/>0.93,<sp/>0.94,<sp/>0.95,<sp/>0.96,<sp/>0.96,<sp/>0.96,<sp/>0.96,<sp/>0.96,<sp/>0.96,<sp/>0.96,<sp/>0.96,<sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.00,<sp/>0.61,<sp/>0.74,<sp/>0.83,<sp/>0.88,<sp/>0.91,<sp/>0.94,<sp/>0.95,<sp/>0.96,<sp/>0.97,<sp/>0.98,<sp/>0.98,<sp/>0.98,<sp/>0.98,<sp/>0.98,<sp/>0.98,<sp/>0.98,<sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.00,<sp/>0.00,<sp/>0.00,<sp/>0.00,<sp/>0.00,<sp/>0.00,<sp/>0.00,<sp/>0.00,<sp/>0.00,<sp/>0.00,<sp/>0.00,<sp/>0.00,<sp/>0.00,<sp/>0.00,<sp/>0.00,<sp/>0.00,<sp/>0.00<sp/>};</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>HEPUtils::BinnedFn2D&lt;double&gt;<sp/>_eff_etapt(binedges_eta,<sp/>binedges_pt,<sp/>bineffs_etapt);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="Utils_8hpp_1a198880b5e00a4a2c6a6e7a3ee801ad1e" kindref="member">filtereff_etapt</ref>(photons,<sp/>_eff_etapt);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="168" refid="namespaceGambit_1_1ColliderBit_1_1ATLAS_1a507de27fec530a6e39e3b8011b7113fb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1_1ColliderBit_1_1ATLAS_1a507de27fec530a6e39e3b8011b7113fb" kindref="member">smearElectronEnergy</ref>(std::vector&lt;HEPUtils::Particle*&gt;&amp;<sp/>electrons)<sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Function<sp/>that<sp/>mimics<sp/>the<sp/>DELPHES<sp/>electron<sp/>energy<sp/>resolution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>need<sp/>to<sp/>smear<sp/>E,<sp/>then<sp/>recalculate<sp/>pT,<sp/>then<sp/>reset<sp/>4<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>HEPUtils::BinnedFn2D&lt;double&gt;<sp/>coeffE2({{0,<sp/>2.5,<sp/>3.,<sp/>5.}},<sp/></highlight><highlight class="comment">//&lt;<sp/>|eta|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{{0,<sp/>0.1,<sp/>25.,<sp/>DBL_MAX}},<sp/></highlight><highlight class="comment">//&lt;<sp/>pT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{{0.,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.015*0.015,<sp/>0.005*0.005,</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.005*0.005,<sp/>0.005*0.005,<sp/>0.005*0.005,</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.107*0.107,<sp/>0.107*0.107,<sp/>0.107*0.107}});</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>HEPUtils::BinnedFn2D&lt;double&gt;<sp/>coeffE({{0,<sp/>2.5,<sp/>3.,<sp/>5.}},<sp/></highlight><highlight class="comment">//&lt;<sp/>|eta|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{{0,<sp/>0.1,<sp/>25.,<sp/>DBL_MAX}},<sp/></highlight><highlight class="comment">//&lt;<sp/>pT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{{0.,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.05*0.05,</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.05*0.05,<sp/>0.05*0.05,<sp/>0.05*0.05,</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2.08*2.08,<sp/>2.08*2.08,<sp/>2.08*2.08}});</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>HEPUtils::BinnedFn2D&lt;double&gt;<sp/>coeffC({{0,<sp/>2.5,<sp/>3.,<sp/>5.}},<sp/></highlight><highlight class="comment">//&lt;<sp/>|eta|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{{0,<sp/>0.1,<sp/>25.,<sp/>DBL_MAX}},<sp/></highlight><highlight class="comment">//&lt;<sp/>pT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{{0.,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.25*0.25,</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.25*0.25,0.25*0.25,0.25*0.25,</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.}});</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>loop<sp/>over<sp/>the<sp/>electrons<sp/>and<sp/>smear<sp/>the<sp/>4-vectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(HEPUtils::Particle*<sp/>e<sp/>:<sp/>electrons)<sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(e-&gt;abseta()<sp/>&gt;<sp/>5)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Look<sp/>up<sp/>/<sp/>calculate<sp/>resolution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c1<sp/>=<sp/>coeffE2.get_at(e-&gt;abseta(),<sp/>e-&gt;pT());</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c2<sp/>=<sp/>coeffE.get_at(e-&gt;abseta(),<sp/>e-&gt;pT());</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c3<sp/>=<sp/>coeffC.get_at(e-&gt;abseta(),<sp/>e-&gt;pT());</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>resolution<sp/>=<sp/>sqrt(c1*HEPUtils::sqr(e-&gt;E())<sp/>+<sp/>c2*e-&gt;E()<sp/>+<sp/>c3);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Smear<sp/>by<sp/>a<sp/>Gaussian<sp/>centered<sp/>on<sp/>the<sp/>current<sp/>energy,<sp/>with<sp/>width<sp/>given<sp/>by<sp/>the<sp/>resolution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::normal_distribution&lt;&gt;<sp/>d(e-&gt;E(),<sp/>resolution);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>smeared_E<sp/>=<sp/>d(Random::rng());</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(smeared_E<sp/>&lt;<sp/>e-&gt;mass())<sp/>smeared_E<sp/>=<sp/>1.01*e-&gt;mass();</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>double<sp/>smeared_pt<sp/>=<sp/>smeared_E/cosh(e-&gt;eta());<sp/>///&lt;<sp/>@todo<sp/>Should<sp/>be<sp/>cosh(|eta|)?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e-&gt;set_mom(HEPUtils::P4::mkEtaPhiME(e-&gt;eta(),<sp/>e-&gt;phi(),<sp/>e-&gt;mass(),<sp/>smeared_E));</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="211" refid="namespaceGambit_1_1ColliderBit_1_1ATLAS_1ad58906fcb8d039c94e1fa423a76e70a6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1_1ColliderBit_1_1ATLAS_1ad58906fcb8d039c94e1fa423a76e70a6" kindref="member">smearMuonMomentum</ref>(std::vector&lt;HEPUtils::Particle*&gt;&amp;<sp/>muons)<sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Function<sp/>that<sp/>mimics<sp/>the<sp/>DELPHES<sp/>muon<sp/>momentum<sp/>resolution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>need<sp/>to<sp/>smear<sp/>pT,<sp/>then<sp/>recalculate<sp/>E,<sp/>then<sp/>reset<sp/>4<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>HEPUtils::BinnedFn2D&lt;double&gt;<sp/>_muEff({{0,1.5,2.5}},</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{{0,0.1,1.,10.,200.,DBL_MAX}},</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{{0.,0.03,0.02,0.03,0.05,</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.,0.04,0.03,0.04,0.05}});</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>loop<sp/>over<sp/>the<sp/>muons<sp/>and<sp/>smear<sp/>the<sp/>4-vectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(HEPUtils::Particle*<sp/>mu<sp/>:<sp/>muons)<sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mu-&gt;abseta()<sp/>&gt;<sp/>2.5)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Look<sp/>up<sp/>resolution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>resolution<sp/>=<sp/>_muEff.get_at(mu-&gt;abseta(),<sp/>mu-&gt;pT());</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Smear<sp/>by<sp/>a<sp/>Gaussian<sp/>centered<sp/>on<sp/>the<sp/>current<sp/>energy,<sp/>with<sp/>width<sp/>given<sp/>by<sp/>the<sp/>resolution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::normal_distribution&lt;&gt;<sp/>d(mu-&gt;pT(),<sp/>resolution*mu-&gt;pT());</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>smeared_pt<sp/>=<sp/>d(Random::rng());</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(smeared_pt<sp/>&lt;<sp/>0)<sp/>smeared_pt<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>const<sp/>double<sp/>smeared_E<sp/>=<sp/>smeared_pt*cosh(mu-&gt;eta());<sp/>///&lt;<sp/>@todo<sp/>Should<sp/>be<sp/>cosh(|eta|)?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;Muon<sp/>pt<sp/>&quot;<sp/>&lt;&lt;<sp/>mu_pt<sp/>&lt;&lt;<sp/>&quot;<sp/>smeared<sp/>&quot;<sp/>&lt;&lt;<sp/>smeared_pt<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mu-&gt;set_mom(HEPUtils::P4::mkEtaPhiMPt(mu-&gt;eta(),<sp/>mu-&gt;phi(),<sp/>mu-&gt;mass(),<sp/>smeared_pt));</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="239" refid="namespaceGambit_1_1ColliderBit_1_1ATLAS_1a43ab61722c904642c08b935644dbd0d9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1_1ColliderBit_1_1ATLAS_1a43ab61722c904642c08b935644dbd0d9" kindref="member">smearJets</ref>(std::vector&lt;HEPUtils::Jet*&gt;&amp;<sp/>jets)<sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Function<sp/>that<sp/>mimics<sp/>the<sp/>DELPHES<sp/>jet<sp/>momentum<sp/>resolution.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>need<sp/>to<sp/>smear<sp/>pT,<sp/>then<sp/>recalculate<sp/>E,<sp/>then<sp/>reset<sp/>the<sp/>4-vector.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Const<sp/>resolution<sp/>for<sp/>now</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//const<sp/>double<sp/>resolution<sp/>=<sp/>0.03;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Matthias<sp/>jet<sp/>smearing<sp/>implemented<sp/>roughly<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>https://atlas.web.cern.ch/Atlas/GROUPS/PHYSICS/CONFNOTES/ATLAS-CONF-2015-017/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Parameterisation<sp/>can<sp/>be<sp/>still<sp/>improved,<sp/>but<sp/>eta<sp/>dependence<sp/>is<sp/>minimal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/><sp/>binedges_eta<sp/>=<sp/>{0,10.};</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/><sp/>binedges_pt<sp/>=<sp/>{0,50.,70.,100.,150.,200.,1000.,10000.};</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/>JetsJER<sp/>=<sp/>{0.145,0.115,0.095,0.075,0.07,0.05,0.04};</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>HEPUtils::BinnedFn2D&lt;double&gt;<sp/>_resJets2D(binedges_eta,binedges_pt,JetsJER);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>loop<sp/>over<sp/>the<sp/>jets<sp/>and<sp/>smear<sp/>the<sp/>4-vectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(HEPUtils::Jet*<sp/>jet<sp/>:<sp/>jets)<sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>resolution<sp/>=<sp/>_resJets2D.get_at(jet-&gt;abseta(),<sp/>jet-&gt;pT());</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::normal_distribution&lt;&gt;<sp/>d(1.,<sp/>resolution);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Smear<sp/>by<sp/>a<sp/>Gaussian<sp/>centered<sp/>on<sp/>1<sp/>with<sp/>width<sp/>given<sp/>by<sp/>the<sp/>(fractional)<sp/>resolution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>smear_factor<sp/>=<sp/>d(Random::rng());</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jet-&gt;set_mom(HEPUtils::P4::mkXYZM(jet-&gt;mom().px()*smear_factor,<sp/>jet-&gt;mom().py()*smear_factor,<sp/>jet-&gt;mom().pz()*smear_factor,<sp/>jet-&gt;mass()));</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="266" refid="namespaceGambit_1_1ColliderBit_1_1ATLAS_1a8e7ceb91b11cb38469b7f264b8503bb1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1_1ColliderBit_1_1ATLAS_1a8e7ceb91b11cb38469b7f264b8503bb1" kindref="member">smearMET</ref>(HEPUtils::P4&amp;<sp/>pmiss,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>set)<sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Smearing<sp/>function<sp/>from<sp/>ATLAS<sp/>Run<sp/>1<sp/>performance<sp/>paper,<sp/>converted<sp/>from<sp/>Rivet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cf.<sp/>https://arxiv.org/pdf/1108.5602v2.pdf,<sp/>Figs<sp/>14<sp/>and<sp/>15</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Linearity<sp/>offset<sp/>(Fig<sp/>14)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pmiss.pT()<sp/>&lt;<sp/>25)<sp/>pmiss<sp/>*=<sp/>1.05;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pmiss.pT()<sp/>&lt;<sp/>40)<sp/>pmiss<sp/>*=<sp/>(1.05<sp/>-<sp/>(0.04/15)*(pmiss.pT()<sp/>-<sp/>25));<sp/></highlight><highlight class="comment">//&lt;<sp/>linear<sp/>decrease</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>pmiss<sp/>*=<sp/>1.01;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Smear<sp/>by<sp/>a<sp/>Gaussian<sp/>with<sp/>width<sp/>given<sp/>by<sp/>the<sp/>resolution(sumEt)<sp/>~<sp/>0.45<sp/>sqrt(sumEt)<sp/>GeV</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>resolution<sp/>=<sp/>0.45<sp/>*<sp/>sqrt(set);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::normal_distribution&lt;&gt;<sp/>d(pmiss.pT(),<sp/>resolution);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>smearedmet<sp/>=<sp/>std::max(d(Random::rng()),<sp/>0.);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pmiss<sp/>*=<sp/>smearedmet<sp/>/<sp/>pmiss.pT();</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="285" refid="namespaceGambit_1_1ColliderBit_1_1ATLAS_1a788362cce2744e7839f03f6db3950b90" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1_1ColliderBit_1_1ATLAS_1a788362cce2744e7839f03f6db3950b90" kindref="member">smearTaus</ref>(std::vector&lt;HEPUtils::Particle*&gt;&amp;<sp/>taus)<sp/>{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>need<sp/>to<sp/>smear<sp/>pT,<sp/>then<sp/>recalculate<sp/>E,<sp/>then<sp/>reset<sp/>the<sp/>4-vector.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Same<sp/>as<sp/>for<sp/>jets,<sp/>but<sp/>on<sp/>a<sp/>vector<sp/>of<sp/>particles.<sp/>(?)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Const<sp/>resolution<sp/>for<sp/>now</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>resolution<sp/>=<sp/>0.03;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>loop<sp/>over<sp/>the<sp/>jets<sp/>and<sp/>smear<sp/>the<sp/>4-vectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::normal_distribution&lt;&gt;<sp/>d(1.,<sp/>resolution);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(HEPUtils::Particle*<sp/>p<sp/>:<sp/>taus)<sp/>{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Smear<sp/>by<sp/>a<sp/>Gaussian<sp/>centered<sp/>on<sp/>1<sp/>with<sp/>width<sp/>given<sp/>by<sp/>the<sp/>(fractional)<sp/>resolution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>smear_factor<sp/>=<sp/>d(Random::rng());</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;set_mom(HEPUtils::P4::mkXYZM(p-&gt;mom().px()*smear_factor,<sp/>p-&gt;mom().py()*smear_factor,<sp/>p-&gt;mom().pz()*smear_factor,<sp/>p-&gt;mass()));</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="305" refid="namespaceGambit_1_1ColliderBit_1_1ATLAS_1ab03047d9d6f4f1dae6fdd0389a8e57ac" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1_1ColliderBit_1_1ATLAS_1ab03047d9d6f4f1dae6fdd0389a8e57ac" kindref="member">applyLooseIDElectronSelectionR2</ref>(std::vector&lt;const<sp/>HEPUtils::Particle*&gt;&amp;<sp/>electrons)<sp/>{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(electrons.empty())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Manually<sp/>symmetrised<sp/>eta<sp/>eff<sp/>histogram</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/>binedges_eta<sp/>=<sp/>{<sp/>0.0,<sp/><sp/><sp/>0.1,<sp/><sp/><sp/>0.8,<sp/><sp/><sp/>1.37,<sp/><sp/>1.52,<sp/><sp/>2.01,<sp/><sp/>2.37,<sp/><sp/>2.47,<sp/>DBL_MAX<sp/>};</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/>bineffs_eta<sp/><sp/>=<sp/>{<sp/>0.950,<sp/>0.965,<sp/>0.955,<sp/>0.885,<sp/>0.950,<sp/>0.935,<sp/>0.90,<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>HEPUtils::BinnedFn1D&lt;double&gt;<sp/>_eff_eta(binedges_eta,<sp/>bineffs_eta);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Et<sp/>eff<sp/>histogram<sp/>(10-20<sp/>GeV<sp/>bin<sp/>added<sp/>by<sp/>hand)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/>binedges_et<sp/>=<sp/>{<sp/>10,<sp/><sp/><sp/>20,<sp/><sp/><sp/>25,<sp/><sp/><sp/>30,<sp/><sp/><sp/>35,<sp/><sp/><sp/>40,<sp/><sp/><sp/><sp/>45,<sp/><sp/><sp/><sp/>50,<sp/><sp/><sp/>60,<sp/><sp/>80,<sp/>DBL_MAX<sp/>};</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/>bineffs_et<sp/><sp/>=<sp/>{<sp/>0.90,<sp/>0.91,<sp/>0.92,<sp/>0.94,<sp/>0.95,<sp/>0.955,<sp/>0.965,<sp/>0.97,<sp/>0.98,<sp/>0.98<sp/>};</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>HEPUtils::BinnedFn1D&lt;double&gt;<sp/>_eff_et(binedges_et,<sp/>bineffs_et);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>keptElectronsEnd<sp/>=<sp/>std::remove_if(electrons.begin(),<sp/>electrons.end(),</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>HEPUtils::Particle*<sp/>electron)<sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>double<sp/>e_pt<sp/>=<sp/>electron-&gt;pT();</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>double<sp/>e_aeta<sp/>=<sp/>electron-&gt;abseta();</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(e_aeta<sp/>&gt;<sp/>2.47<sp/>||<sp/>e_pt<sp/>&lt;<sp/>10)<sp/>return<sp/>true;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>double<sp/>eff1<sp/>=<sp/>_eff_eta.get_at(e_aeta),<sp/>eff2<sp/>=<sp/>_eff_et.get_at(e_pt);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>double<sp/>eff<sp/>=<sp/>std::min(eff1<sp/>*<sp/>eff2<sp/>/<sp/>0.95,<sp/>1.0);<sp/></highlight><highlight class="comment">//&lt;<sp/>norm<sp/>factor<sp/>as<sp/>approximate<sp/>double<sp/>differential</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>random_bool(1-eff);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>electrons.erase(keptElectronsEnd,<sp/>electrons.end());</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="330" refid="namespaceGambit_1_1ColliderBit_1_1ATLAS_1ae43a82fc034584efbd3cc1eac2f4fb5b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1_1ColliderBit_1_1ATLAS_1ab03047d9d6f4f1dae6fdd0389a8e57ac" kindref="member">applyLooseIDElectronSelectionR2</ref>(std::vector&lt;HEPUtils::Particle*&gt;&amp;<sp/>electrons)<sp/>{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1_1ColliderBit_1_1ATLAS_1ab03047d9d6f4f1dae6fdd0389a8e57ac" kindref="member">applyLooseIDElectronSelectionR2</ref>(</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">std::vector&lt;const<sp/>HEPUtils::Particle*&gt;&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(electrons));</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="336" refid="namespaceGambit_1_1ColliderBit_1_1ATLAS_1a8b216d9e4efc7df991880ec63234b234" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1_1ColliderBit_1_1ATLAS_1a8b216d9e4efc7df991880ec63234b234" kindref="member">applyMediumIDElectronSelectionR2</ref>(std::vector&lt;const<sp/>HEPUtils::Particle*&gt;&amp;<sp/>electrons)<sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(electrons.empty())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Manually<sp/>symmetrised<sp/>eta<sp/>eff<sp/>histogram</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/>binedges_eta<sp/>=<sp/>{<sp/>0.0,<sp/><sp/><sp/>0.1,<sp/><sp/><sp/>0.8,<sp/><sp/><sp/>1.37,<sp/><sp/>1.52,<sp/><sp/>2.01,<sp/><sp/>2.37,<sp/><sp/>2.47,<sp/>DBL_MAX<sp/>};</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/>bineffs_eta<sp/><sp/>=<sp/>{<sp/>0.900,<sp/>0.930,<sp/>0.905,<sp/>0.830,<sp/>0.900,<sp/>0.880,<sp/>0.85,<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>HEPUtils::BinnedFn1D&lt;double&gt;<sp/>_eff_eta(binedges_eta,<sp/>bineffs_eta);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Et<sp/>eff<sp/>histogram<sp/>(10-20<sp/>GeV<sp/>bin<sp/>added<sp/>by<sp/>hand)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/>binedges_et<sp/>=<sp/>{<sp/>10,<sp/><sp/><sp/>20,<sp/><sp/><sp/>25,<sp/><sp/><sp/>30,<sp/><sp/><sp/>35,<sp/><sp/><sp/>40,<sp/><sp/><sp/><sp/>45,<sp/><sp/><sp/><sp/>50,<sp/><sp/><sp/>60,<sp/><sp/>80,<sp/>DBL_MAX<sp/>};</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/>bineffs_et<sp/><sp/>=<sp/>{<sp/>0.83,<sp/>0.845,<sp/>0.87,<sp/>0.89,<sp/>0.90,<sp/>0.91,<sp/>0.92,<sp/>0.93,<sp/>0.95,<sp/>0.95<sp/>};</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>HEPUtils::BinnedFn1D&lt;double&gt;<sp/>_eff_et(binedges_et,<sp/>bineffs_et);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>keptElectronsEnd<sp/>=<sp/>std::remove_if(electrons.begin(),<sp/>electrons.end(),</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>HEPUtils::Particle*<sp/>electron)<sp/>{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>double<sp/>e_pt<sp/>=<sp/>electron-&gt;pT();</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>double<sp/>e_aeta<sp/>=<sp/>electron-&gt;abseta();</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(e_aeta<sp/>&gt;<sp/>2.47<sp/>||<sp/>e_pt<sp/>&lt;<sp/>10)<sp/>return<sp/>true;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>double<sp/>eff1<sp/>=<sp/>_eff_eta.get_at(e_aeta),<sp/>eff2<sp/>=<sp/>_eff_et.get_at(e_pt);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>double<sp/>eff<sp/>=<sp/>std::min(eff1<sp/>*<sp/>eff2<sp/>/<sp/>0.95,<sp/>1.0);<sp/></highlight><highlight class="comment">//&lt;<sp/>norm<sp/>factor<sp/>as<sp/>approximate<sp/>double<sp/>differential</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>random_bool(1-eff);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>electrons.erase(keptElectronsEnd,<sp/>electrons.end());</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="361" refid="namespaceGambit_1_1ColliderBit_1_1ATLAS_1ab9a06c7b74a0a6fb60a3f4631aea30fc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1_1ColliderBit_1_1ATLAS_1a8b216d9e4efc7df991880ec63234b234" kindref="member">applyMediumIDElectronSelectionR2</ref>(std::vector&lt;HEPUtils::Particle*&gt;&amp;<sp/>electrons)<sp/>{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1_1ColliderBit_1_1ATLAS_1a8b216d9e4efc7df991880ec63234b234" kindref="member">applyMediumIDElectronSelectionR2</ref>(</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">std::vector&lt;const<sp/>HEPUtils::Particle*&gt;&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(electrons));</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="367" refid="namespaceGambit_1_1ColliderBit_1_1ATLAS_1a0a1f1fd449b607e29c209e3b457e7d7e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1_1ColliderBit_1_1ATLAS_1a0a1f1fd449b607e29c209e3b457e7d7e" kindref="member">applyMediumIDElectronSelection</ref>(std::vector&lt;const<sp/>HEPUtils::Particle*&gt;&amp;<sp/>electrons)<sp/>{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(electrons.empty())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/>binedges_E10_15<sp/>=<sp/>{0.,<sp/>0.0494681,<sp/>0.453578,<sp/>1.10675,<sp/>1.46298,<sp/>1.78963,<sp/>2.2766,<sp/>2.5};</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/>binvalues_E10_15<sp/>=<sp/><ref refid="Utils_8hpp_1a815f2f22867c52a165aad8f6de2aec24" kindref="member">makeBinValues</ref>({0.730435,<sp/>0.730435,<sp/>0.782609,<sp/>0.776812,<sp/>0.765217,<sp/>0.773913,<sp/>0.77971,<sp/>0.776812});</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>HEPUtils::BinnedFn1D&lt;double&gt;<sp/>_eff_E10_15(binedges_E10_15,<sp/>binvalues_E10_15);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/>binedges_E15_20<sp/>=<sp/>{0.,<sp/>0.0533175,<sp/>0.456161,<sp/>1.1019,<sp/>1.46327,<sp/>1.78318,<sp/>2.26303,<sp/>2.5};</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/>binvalues_E15_20<sp/>=<sp/><ref refid="Utils_8hpp_1a815f2f22867c52a165aad8f6de2aec24" kindref="member">makeBinValues</ref>({0.77971,<sp/>0.77971,<sp/>0.82029,<sp/>0.817391,<sp/>0.701449,<sp/>0.797101,<sp/>0.828986,<sp/>0.828986});</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>HEPUtils::BinnedFn1D&lt;double&gt;<sp/>_eff_E15_20(binedges_E15_20,<sp/>binvalues_E15_20);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/>binedges_E20_25<sp/>=<sp/>{-2.5,<sp/>-2.45249,<sp/>-2.21496,<sp/>-1.94181,<sp/>-1.6924,<sp/>-1.46675,<sp/>-1.26485,<sp/>-0.991686,<sp/>-0.682898,<sp/>-0.350356,<sp/>-0.0415677,<sp/>0.0653207,<sp/>0.362233,<sp/>0.718527,<sp/>0.97981,<sp/>1.2886,<sp/>1.45487,<sp/>1.68052,<sp/>1.94181,<sp/>2.23872,<sp/>2.45249,<sp/>2.5};</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/>binvalues_E20_25<sp/>=<sp/><ref refid="Utils_8hpp_1a815f2f22867c52a165aad8f6de2aec24" kindref="member">makeBinValues</ref>({0.827811,<sp/>0.82572,<sp/>0.790414,<sp/>0.798585,<sp/>0.779843,<sp/>0.727974,<sp/>0.802447,<sp/>0.798192,<sp/>0.812561,<sp/>0.812423,<sp/>0.808153,<sp/>0.779115,<sp/>0.822483,<sp/>0.816123,<sp/>0.795304,<sp/>0.793105,<sp/>0.772326,<sp/>0.778446,<sp/>0.794906,<sp/>0.78857,<sp/>0.821617,<sp/>0.821593});</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>HEPUtils::BinnedFn1D&lt;double&gt;<sp/>_eff_E20_25(binedges_E20_25,<sp/>binvalues_E20_25);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/>binedges_E25_30<sp/>=<sp/>{-2.5,<sp/>-2.45249,<sp/>-2.22684,<sp/>-1.92993,<sp/>-1.6924,<sp/>-1.46675,<sp/>-1.26485,<sp/>-0.97981,<sp/>-0.694774,<sp/>-0.33848,<sp/>-0.0534442,<sp/>0.0771971,<sp/>0.33848,<sp/>0.74228,<sp/>1.00356,<sp/>1.26485,<sp/>1.46675,<sp/>1.6924,<sp/>1.94181,<sp/>2.22684,<sp/>2.45249,<sp/>2.5};</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/>binvalues_E25_30<sp/>=<sp/><ref refid="Utils_8hpp_1a815f2f22867c52a165aad8f6de2aec24" kindref="member">makeBinValues</ref>({0.84095,<sp/>0.838892,<sp/>0.8286,<sp/>0.830801,<sp/>0.818436,<sp/>0.76037,<sp/>0.841463,<sp/>0.83535,<sp/>0.850008,<sp/>0.852233,<sp/>0.837812,<sp/>0.82748,<sp/>0.854592,<sp/>0.854759,<sp/>0.838251,<sp/>0.844591,<sp/>0.76782,<sp/>0.815688,<sp/>0.836563,<sp/>0.824219,<sp/>0.838853,<sp/>0.838877});</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>HEPUtils::BinnedFn1D&lt;double&gt;<sp/>_eff_E25_30(binedges_E25_30,<sp/>binvalues_E25_30);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/>binedges_E30_35<sp/>=<sp/>{-2.5,<sp/>-2.44062,<sp/>-2.21496,<sp/>-1.92993,<sp/>-1.68052,<sp/>-1.46675,<sp/>-1.27672,<sp/>-0.991686,<sp/>-0.706651,<sp/>-0.350356,<sp/>-0.0534442,<sp/>0.0771971,<sp/>0.350356,<sp/>0.706651,<sp/>0.97981,<sp/>1.2886,<sp/>1.47862,<sp/>1.68052,<sp/>1.94181,<sp/>2.23872,<sp/>2.44062,<sp/>2.5};</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/>binvalues_E30_35<sp/>=<sp/><ref refid="Utils_8hpp_1a815f2f22867c52a165aad8f6de2aec24" kindref="member">makeBinValues</ref>({0.849263,<sp/>0.849233,<sp/>0.840831,<sp/>0.853176,<sp/>0.844763,<sp/>0.771974,<sp/>0.873676,<sp/>0.865249,<sp/>0.877593,<sp/>0.883677,<sp/>0.869013,<sp/>0.856496,<sp/>0.879231,<sp/>0.883238,<sp/>0.870661,<sp/>0.870533,<sp/>0.779059,<sp/>0.839213,<sp/>0.84949,<sp/>0.834827,<sp/>0.834743,<sp/>0.834718});</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>HEPUtils::BinnedFn1D&lt;double&gt;<sp/>_eff_E30_35(binedges_E30_35,<sp/>binvalues_E30_35);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/>binedges_E35_40<sp/>=<sp/>{-2.5,<sp/>-2.44841,<sp/>-2.23431,<sp/>-1.94914,<sp/>-1.69969,<sp/>-1.46336,<sp/>-1.28359,<sp/>-0.998664,<sp/>-0.713488,<sp/>-0.357087,<sp/>-0.0723338,<sp/>0.0580256,<sp/>0.343519,<sp/>0.699955,<sp/>1.0085,<sp/>1.26989,<sp/>1.45836,<sp/>1.685,<sp/>1.93451,<sp/>2.23118,<sp/>2.46818,<sp/>2.5};</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/>binvalues_E35_40<sp/>=<sp/><ref refid="Utils_8hpp_1a815f2f22867c52a165aad8f6de2aec24" kindref="member">makeBinValues</ref>({0.836795,<sp/>0.84095,<sp/>0.859644,<sp/>0.867953,<sp/>0.87003,<sp/>0.799407,<sp/>0.894955,<sp/>0.888724,<sp/>0.897033,<sp/>0.903264,<sp/>0.886647,<sp/>0.87003,<sp/>0.897033,<sp/>0.905341,<sp/>0.890801,<sp/>0.897033,<sp/>0.805638,<sp/>0.863798,<sp/>0.87003,<sp/>0.85549,<sp/>0.824332,<sp/>0.826409});</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>HEPUtils::BinnedFn1D&lt;double&gt;<sp/>_eff_E35_40(binedges_E35_40,<sp/>binvalues_E35_40);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/>binedges_E40_45<sp/>=<sp/>{-2.5,<sp/>-2.45261,<sp/>-2.22749,<sp/>-1.93128,<sp/>-1.68246,<sp/>-1.46919,<sp/>-1.27962,<sp/>-0.995261,<sp/>-0.7109,<sp/>-0.343602,<sp/>-0.0592417,<sp/>0.0473934,<sp/>0.35545,<sp/>0.699052,<sp/>0.983412,<sp/>1.27962,<sp/>1.4455,<sp/>1.69431,<sp/>1.94313,<sp/>2.22749,<sp/>2.44076,<sp/>2.5};</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/>binvalues_E40_45<sp/>=<sp/><ref refid="Utils_8hpp_1a815f2f22867c52a165aad8f6de2aec24" kindref="member">makeBinValues</ref>({0.836795,<sp/>0.836795,<sp/>0.87003,<sp/>0.882493,<sp/>0.897033,<sp/>0.84095,<sp/>0.911573,<sp/>0.89911,<sp/>0.907418,<sp/>0.909496,<sp/>0.89911,<sp/>0.888724,<sp/>0.907418,<sp/>0.91365,<sp/>0.89911,<sp/>0.907418,<sp/>0.843027,<sp/>0.890801,<sp/>0.882493,<sp/>0.87003,<sp/>0.816024,<sp/>0.816024});</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>HEPUtils::BinnedFn1D&lt;double&gt;<sp/>_eff_E40_45(binedges_E40_45,<sp/>binvalues_E40_45);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/>binedges_E45_50<sp/>=<sp/>{-2.5,<sp/>-2.46086,<sp/>-2.22192,<sp/>-1.93675,<sp/>-1.68709,<sp/>-1.46211,<sp/>-1.27124,<sp/>-0.986416,<sp/>-0.689328,<sp/>-0.356822,<sp/>-0.0482438,<sp/>0.0584337,<sp/>0.355838,<sp/>0.712203,<sp/>0.996992,<sp/>1.28217,<sp/>1.45947,<sp/>1.68576,<sp/>1.93499,<sp/>2.21988,<sp/>2.44378,<sp/>2.5};</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/><sp/>binvalues_E45_50<sp/>=<sp/><sp/><ref refid="Utils_8hpp_1a815f2f22867c52a165aad8f6de2aec24" kindref="member">makeBinValues</ref>({0.807101,<sp/>0.807101,<sp/>0.889941,<sp/>0.898225,<sp/>0.912722,<sp/>0.873373,<sp/>0.923077,<sp/>0.910651,<sp/>0.921006,<sp/>0.918935,<sp/>0.906509,<sp/>0.894083,<sp/>0.923077,<sp/>0.927219,<sp/>0.912722,<sp/>0.921006,<sp/>0.871302,<sp/>0.90858,<sp/>0.898225,<sp/>0.889941,<sp/>0.786391,<sp/>0.786391});</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>HEPUtils::BinnedFn1D&lt;double&gt;<sp/>_eff_E45_50<sp/>=<sp/>{binedges_E45_50,<sp/>binvalues_E45_50};</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/>binedges_E50_60<sp/>=<sp/>{-2.5,<sp/>-2.44076,<sp/>-2.21564,<sp/>-1.93128,<sp/>-1.69431,<sp/>-1.46919,<sp/>-1.26777,<sp/>-0.983412,<sp/>-0.7109,<sp/>-0.35545,<sp/>-0.0592417,<sp/>0.0592417,<sp/>0.35545,<sp/>0.7109,<sp/>0.983412,<sp/>1.27962,<sp/>1.46919,<sp/>1.68246,<sp/>1.91943,<sp/>2.22749,<sp/>2.44076,<sp/>2.5};</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/><sp/>binvalues_E50_60<sp/>=<sp/><ref refid="Utils_8hpp_1a815f2f22867c52a165aad8f6de2aec24" kindref="member">makeBinValues</ref>({0.785417,<sp/>0.785417,<sp/>0.891667,<sp/>0.9,<sp/>0.916667,<sp/>0.877083,<sp/>0.927083,<sp/>0.91875,<sp/>0.91875,<sp/>0.922917,<sp/>0.90625,<sp/>0.9,<sp/>0.922917,<sp/>0.929167,<sp/>0.920833,<sp/>0.925,<sp/>0.885417,<sp/>0.9125,<sp/>0.904167,<sp/>0.885417,<sp/>0.7625,<sp/>0.7625});</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>HEPUtils::BinnedFn1D&lt;double&gt;<sp/>_eff_E50_60<sp/>=<sp/>{binedges_E50_60,<sp/>binvalues_E50_60};</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/>binedges_E60_80<sp/>=<sp/>{-2.5,<sp/>-2.44933,<sp/>-2.22119,<sp/>-1.9353,<sp/>-1.68491,<sp/>-1.47115,<sp/>-1.2682,<sp/>-0.982628,<sp/>-0.696912,<sp/>-0.351494,<sp/>-0.0423579,<sp/>0.0526683,<sp/>0.350856,<sp/>0.719871,<sp/>1.00552,<sp/>1.29137,<sp/>1.46938,<sp/>1.69596,<sp/>1.94572,<sp/>2.24305,<sp/>2.45479,<sp/>2.5};</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/><sp/>binvalues_E60_80<sp/>=<sp/><ref refid="Utils_8hpp_1a815f2f22867c52a165aad8f6de2aec24" kindref="member">makeBinValues</ref>({0.779163,<sp/>0.779188,<sp/>0.893866,<sp/>0.904402,<sp/>0.927423,<sp/>0.896262,<sp/>0.92968,<sp/>0.921466,<sp/>0.921585,<sp/>0.932145,<sp/>0.909357,<sp/>0.896897,<sp/>0.930355,<sp/>0.928425,<sp/>0.924377,<sp/>0.93283,<sp/>0.899571,<sp/>0.922582,<sp/>0.908102,<sp/>0.89156,<sp/>0.741648,<sp/>0.741678});</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>HEPUtils::BinnedFn1D&lt;double&gt;<sp/>_eff_E60_80<sp/>=<sp/>{binedges_E60_80,<sp/>binvalues_E60_80};</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/>binedges_E80<sp/>=<sp/>{-2.5,<sp/>-2.45835,<sp/>-2.22058,<sp/>-1.94663,<sp/>-1.68451,<sp/>-1.44712,<sp/>-1.27961,<sp/>-0.970161,<sp/>-0.708258,<sp/>-0.351259,<sp/>-0.0537477,<sp/>0.0532884,<sp/>0.351188,<sp/>0.72041,<sp/>0.994111,<sp/>1.29176,<sp/>1.4815,<sp/>1.70839,<sp/>1.93419,<sp/>2.21998,<sp/>2.45825,<sp/>2.5};</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/><sp/>binvalues_E80<sp/>=<sp/><ref refid="Utils_8hpp_1a815f2f22867c52a165aad8f6de2aec24" kindref="member">makeBinValues</ref>({0.951041,<sp/>0.948944,<sp/>0.930151,<sp/>0.938346,<sp/>0.9507,<sp/>0.909058,<sp/>0.95884,<sp/>0.954557,<sp/>0.954449,<sp/>0.945992,<sp/>0.939637,<sp/>0.933361,<sp/>0.949854,<sp/>0.960086,<sp/>0.953741,<sp/>0.955695,<sp/>0.911996,<sp/>0.953445,<sp/>0.930502,<sp/>0.934538,<sp/>0.944824,<sp/>0.9448});</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>HEPUtils::BinnedFn1D&lt;double&gt;<sp/>_eff_E80<sp/>=<sp/>{binedges_E80,<sp/>binvalues_E80};</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>loop<sp/>over<sp/>the<sp/>electrons<sp/>and<sp/>only<sp/>keep<sp/>those<sp/>that<sp/>pass<sp/>the<sp/>random<sp/>efficiency<sp/>cut</highlight></codeline>
<codeline lineno="417"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>keptElectronsEnd<sp/>=<sp/>std::remove_if(electrons.begin(),<sp/>electrons.end(),</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>HEPUtils::Particle*<sp/>electron)<sp/>{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>double<sp/>e_pt<sp/>=<sp/>electron-&gt;pT();</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>double<sp/>e_eta<sp/>=<sp/>electron-&gt;eta();</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(!(fabs(e_eta)<sp/>&lt;<sp/>2.5<sp/>&amp;&amp;<sp/>e_pt<sp/>&gt;=<sp/>10))<sp/>return<sp/>true;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/>if<sp/>(HEPUtils::in_range(e_pt,<sp/>10,<sp/>15))<sp/>return<sp/>!random_bool(_eff_E10_15,<sp/>fabs(e_eta));</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/>if<sp/>(HEPUtils::in_range(e_pt,<sp/>15,<sp/>20))<sp/>return<sp/>!random_bool(_eff_E15_20,<sp/>fabs(e_eta));</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/>if<sp/>(HEPUtils::in_range(e_pt,<sp/>20,<sp/>25))<sp/>return<sp/>!random_bool(_eff_E20_25,<sp/>e_eta);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/>if<sp/>(HEPUtils::in_range(e_pt,<sp/>25,<sp/>30))<sp/>return<sp/>!random_bool(_eff_E25_30,<sp/>e_eta);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/>if<sp/>(HEPUtils::in_range(e_pt,<sp/>30,<sp/>35))<sp/>return<sp/>!random_bool(_eff_E30_35,<sp/>e_eta);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/>if<sp/>(HEPUtils::in_range(e_pt,<sp/>35,<sp/>40))<sp/>return<sp/>!random_bool(_eff_E35_40,<sp/>e_eta);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/>if<sp/>(HEPUtils::in_range(e_pt,<sp/>40,<sp/>45))<sp/>return<sp/>!random_bool(_eff_E40_45,<sp/>e_eta);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/>if<sp/>(HEPUtils::in_range(e_pt,<sp/>45,<sp/>50))<sp/>return<sp/>!random_bool(_eff_E45_50,<sp/>e_eta);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/>if<sp/>(HEPUtils::in_range(e_pt,<sp/>50,<sp/>60))<sp/>return<sp/>!random_bool(_eff_E50_60,<sp/>e_eta);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/>if<sp/>(HEPUtils::in_range(e_pt,<sp/>60,<sp/>80))<sp/>return<sp/>!random_bool(_eff_E60_80,<sp/>e_eta);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/>return<sp/>!random_bool(_eff_E80,<sp/>e_eta);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>electrons.erase(keptElectronsEnd,<sp/>electrons.end());</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="439" refid="namespaceGambit_1_1ColliderBit_1_1ATLAS_1a983c53a960850a544394eb2a54ec2f8c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1_1ColliderBit_1_1ATLAS_1a0a1f1fd449b607e29c209e3b457e7d7e" kindref="member">applyMediumIDElectronSelection</ref>(std::vector&lt;HEPUtils::Particle*&gt;&amp;<sp/>electrons)<sp/>{</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1_1ColliderBit_1_1ATLAS_1a0a1f1fd449b607e29c209e3b457e7d7e" kindref="member">applyMediumIDElectronSelection</ref>(</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">std::vector&lt;const<sp/>HEPUtils::Particle*&gt;&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(electrons));</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="446" refid="namespaceGambit_1_1ColliderBit_1_1ATLAS_1a02e070dc82bdc10cf8d4d07477cd111c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1_1ColliderBit_1_1ATLAS_1a02e070dc82bdc10cf8d4d07477cd111c" kindref="member">applyTightIDElectronSelection</ref>(std::vector&lt;const<sp/>HEPUtils::Particle*&gt;&amp;<sp/>electrons)<sp/>{</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/>binedges_E10_15<sp/>=<sp/>{0.,<sp/>0.0485903,<sp/>0.458914,<sp/>1.10009,<sp/>1.46117,<sp/>1.78881,<sp/>2.27013,<sp/>2.5};</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/>binvalues_E10_15<sp/>=<sp/><ref refid="Utils_8hpp_1a815f2f22867c52a165aad8f6de2aec24" kindref="member">makeBinValues</ref>({0.57971,<sp/>0.582609,<sp/>0.681159,<sp/>0.655072,<sp/>0.46087,<sp/>0.634783,<sp/>0.689855,<sp/>0.689855});</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>HEPUtils::BinnedFn1D&lt;double&gt;<sp/>_eff_E10_15(binedges_E10_15,<sp/>binvalues_E10_15);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/>binedges_E15_20<sp/>=<sp/>{0.,<sp/>0.0533175,<sp/>0.450237,<sp/>1.09597,<sp/>1.46327,<sp/>1.78318,<sp/>2.26896,<sp/>2.5};</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/>binvalues_E15_20<sp/>=<sp/><ref refid="Utils_8hpp_1a815f2f22867c52a165aad8f6de2aec24" kindref="member">makeBinValues</ref>({0.631884,<sp/>0.628986,<sp/>0.727536,<sp/>0.701449,<sp/>0.565217,<sp/>0.666667,<sp/>0.733333,<sp/>0.733333});</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>HEPUtils::BinnedFn1D&lt;double&gt;<sp/>_eff_E15_20(binedges_E15_20,<sp/>binvalues_E15_20);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/>binedges_E20_25<sp/>=<sp/><sp/>{-2.5,<sp/>-2.44062,<sp/>-2.22684,<sp/>-1.92993,<sp/>-1.66865,<sp/>-1.45487,<sp/>-1.26485,<sp/>-0.967933,<sp/>-0.706651,<sp/>-0.350356,<sp/>-0.0415677,<sp/>0.0653207,<sp/>0.362233,<sp/>0.718527,<sp/>0.991686,<sp/>1.27672,<sp/>1.47862,<sp/>1.6924,<sp/>1.92993,<sp/>2.22684,<sp/>2.46437,<sp/>2.5};</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/>binvalues_E20_25<sp/>=<sp/><ref refid="Utils_8hpp_1a815f2f22867c52a165aad8f6de2aec24" kindref="member">makeBinValues</ref>({0.678698,<sp/>0.678674,<sp/>0.70965,<sp/>0.65361,<sp/>0.655573,<sp/>0.599567,<sp/>0.6844,<sp/>0.694632,<sp/>0.729731,<sp/>0.731654,<sp/>0.665254,<sp/>0.640358,<sp/>0.743785,<sp/>0.733282,<sp/>0.697962,<sp/>0.672992,<sp/>0.585926,<sp/>0.660394,<sp/>0.652011,<sp/>0.703663,<sp/>0.670429,<sp/>0.668338});</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>HEPUtils::BinnedFn1D&lt;double&gt;<sp/>_eff_E20_25(binedges_E20_25,<sp/>binvalues_E20_25);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/>binedges_E25_30<sp/>=<sp/>{-2.5,<sp/>-2.44062,<sp/>-2.22684,<sp/>-1.91805,<sp/>-1.68052,<sp/>-1.45487,<sp/>-1.27672,<sp/>-0.97981,<sp/>-0.706651,<sp/>-0.350356,<sp/>-0.0415677,<sp/>0.0771971,<sp/>0.362233,<sp/>0.718527,<sp/>0.991686,<sp/>1.30048,<sp/>1.47862,<sp/>1.6924,<sp/>1.94181,<sp/>2.22684,<sp/>2.46437,<sp/>2.5};</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/>binvalues_E25_30<sp/>=<sp/><ref refid="Utils_8hpp_1a815f2f22867c52a165aad8f6de2aec24" kindref="member">makeBinValues</ref>({0.678932,<sp/>0.681034,<sp/>0.737205,<sp/>0.683328,<sp/>0.695889,<sp/>0.633669,<sp/>0.720983,<sp/>0.733569,<sp/>0.758609,<sp/>0.769142,<sp/>0.69657,<sp/>0.688311,<sp/>0.771515,<sp/>0.771663,<sp/>0.734388,<sp/>0.717899,<sp/>0.636964,<sp/>0.699368,<sp/>0.689086,<sp/>0.730747,<sp/>0.67684,<sp/>0.67686});</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>HEPUtils::BinnedFn1D&lt;double&gt;<sp/>_eff_E25_30(binedges_E25_30,<sp/>binvalues_E25_30);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/>binedges_E30_35<sp/>=<sp/>{-2.5,<sp/>-2.45249,<sp/>-2.21496,<sp/>-1.94181,<sp/>-1.68052,<sp/>-1.47862,<sp/>-1.27672,<sp/>-0.97981,<sp/>-0.706651,<sp/>-0.33848,<sp/>-0.0415677,<sp/>0.0534442,<sp/>0.362233,<sp/>0.718527,<sp/>1.00356,<sp/>1.27672,<sp/>1.46675,<sp/>1.68052,<sp/>1.95368,<sp/>2.23872,<sp/>2.45249,<sp/>2.5};</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/>binvalues_E30_35<sp/>=<sp/><ref refid="Utils_8hpp_1a815f2f22867c52a165aad8f6de2aec24" kindref="member">makeBinValues</ref>({0.691395,<sp/>0.691375,<sp/>0.749436,<sp/>0.716089,<sp/>0.726366,<sp/>0.653582,<sp/>0.749047,<sp/>0.771772,<sp/>0.800739,<sp/>0.802663,<sp/>0.731916,<sp/>0.71526,<sp/>0.802372,<sp/>0.810532,<sp/>0.773025,<sp/>0.75214,<sp/>0.656512,<sp/>0.722892,<sp/>0.712393,<sp/>0.745509,<sp/>0.670643,<sp/>0.6727});</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>HEPUtils::BinnedFn1D&lt;double&gt;<sp/>_eff_E30_35(binedges_E30_35,<sp/>binvalues_E30_35);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/>binedges_E35_40<sp/>=<sp/>{-2.5,<sp/>-2.46296,<sp/>-2.22413,<sp/>-1.93966,<sp/>-1.7017,<sp/>-1.47721,<sp/>-1.28567,<sp/>-0.988409,<sp/>-0.714721,<sp/>-0.334744,<sp/>-0.0510125,<sp/>0.0437527,<sp/>0.342215,<sp/>0.710598,<sp/>0.971211,<sp/>1.27968,<sp/>1.45638,<sp/>1.68306,<sp/>1.94399,<sp/>2.21764,<sp/>2.44185,<sp/>2.5};</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/>binvalues_E35_40<sp/>=<sp/><ref refid="Utils_8hpp_1a815f2f22867c52a165aad8f6de2aec24" kindref="member">makeBinValues</ref>({0.683086,<sp/>0.683086,<sp/>0.759941,<sp/>0.726706,<sp/>0.751632,<sp/>0.683086,<sp/>0.772404,<sp/>0.793175,<sp/>0.824332,<sp/>0.820178,<sp/>0.743323,<sp/>0.728783,<sp/>0.820178,<sp/>0.832641,<sp/>0.793175,<sp/>0.774481,<sp/>0.689318,<sp/>0.749555,<sp/>0.728783,<sp/>0.757864,<sp/>0.6727,<sp/>0.6727});</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>HEPUtils::BinnedFn1D&lt;double&gt;<sp/>_eff_E35_40(binedges_E35_40,<sp/>binvalues_E35_40);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/>binedges_E40_45<sp/>=<sp/>{-2.5,<sp/>-2.45261,<sp/>-2.21564,<sp/>-1.94313,<sp/>-1.69431,<sp/>-1.45735,<sp/>-1.27962,<sp/>-0.983412,<sp/>-0.7109,<sp/>-0.35545,<sp/>-0.0592417,<sp/>0.0473934,<sp/>0.35545,<sp/>0.699052,<sp/>0.983412,<sp/>1.26777,<sp/>1.45735,<sp/>1.67062,<sp/>1.93128,<sp/>2.20379,<sp/>2.45261,<sp/>2.5};</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/>binvalues_E40_45<sp/>=<sp/><ref refid="Utils_8hpp_1a815f2f22867c52a165aad8f6de2aec24" kindref="member">makeBinValues</ref>({0.693472,<sp/>0.693472,<sp/>0.782789,<sp/>0.757864,<sp/>0.784866,<sp/>0.726706,<sp/>0.797329,<sp/>0.803561,<sp/>0.836795,<sp/>0.805638,<sp/>0.747478,<sp/>0.735015,<sp/>0.805638,<sp/>0.843027,<sp/>0.807715,<sp/>0.797329,<sp/>0.732938,<sp/>0.780712,<sp/>0.762018,<sp/>0.782789,<sp/>0.674777,<sp/>0.674777});</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>HEPUtils::BinnedFn1D&lt;double&gt;<sp/>_eff_E40_45(binedges_E40_45,<sp/>binvalues_E40_45);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/>binedges_E45_50<sp/>=<sp/>{-2.5,<sp/>-2.46311,<sp/>-2.22329,<sp/>-1.93875,<sp/>-1.70073,<sp/>-1.47585,<sp/>-1.273,<sp/>-0.976015,<sp/>-0.714205,<sp/>-0.358403,<sp/>-0.0625448,<sp/>0.0560444,<sp/>0.354151,<sp/>0.711078,<sp/>0.98364,<sp/>1.28045,<sp/>1.45768,<sp/>1.68407,<sp/>1.94493,<sp/>2.20653,<sp/>2.4415,<sp/>2.5};</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/><sp/>binvalues_E45_50<sp/>=<sp/><sp/><ref refid="Utils_8hpp_1a815f2f22867c52a165aad8f6de2aec24" kindref="member">makeBinValues</ref>({0.674556,<sp/>0.674556,<sp/>0.809172,<sp/>0.780178,<sp/>0.809172,<sp/>0.763609,<sp/>0.819527,<sp/>0.823669,<sp/>0.854734,<sp/>0.82574,<sp/>0.763609,<sp/>0.753254,<sp/>0.823669,<sp/>0.860947,<sp/>0.82574,<sp/>0.819527,<sp/>0.76568,<sp/>0.809172,<sp/>0.78432,<sp/>0.802959,<sp/>0.651775,<sp/>0.651775});</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>HEPUtils::BinnedFn1D&lt;double&gt;<sp/>_eff_E45_50<sp/>=<sp/>{binedges_E45_50,<sp/>binvalues_E45_50};</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/>binedges_E50_60<sp/>=<sp/>{-2.5,<sp/>-2.45261,<sp/>-2.21564,<sp/>-1.93128,<sp/>-1.68246,<sp/>-1.45735,<sp/>-1.27962,<sp/>-0.995261,<sp/>-0.699052,<sp/>-0.343602,<sp/>-0.0592417,<sp/>0.0592417,<sp/>0.35545,<sp/>0.699052,<sp/>0.983412,<sp/>1.26777,<sp/>1.4455,<sp/>1.68246,<sp/>1.94313,<sp/>2.21564,<sp/>2.45261,<sp/>2.5};</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/><sp/>binvalues_E50_60<sp/>=<sp/><ref refid="Utils_8hpp_1a815f2f22867c52a165aad8f6de2aec24" kindref="member">makeBinValues</ref>({0.6625,<sp/>0.6625,<sp/>0.810417,<sp/>0.795833,<sp/>0.81875,<sp/>0.779167,<sp/>0.839583,<sp/>0.84375,<sp/>0.860417,<sp/>0.841667,<sp/>0.777083,<sp/>0.764583,<sp/>0.841667,<sp/>0.877083,<sp/>0.85,<sp/>0.839583,<sp/>0.785417,<sp/>0.816667,<sp/>0.8,<sp/>0.804167,<sp/>0.64375,<sp/>0.64375});</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>HEPUtils::BinnedFn1D&lt;double&gt;<sp/>_eff_E50_60<sp/>=<sp/>{binedges_E50_60,<sp/>binvalues_E50_60};</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/>binedges_E60_80<sp/>=<sp/>{-2.5,<sp/>-2.46326,<sp/>-2.22265,<sp/>-1.93711,<sp/>-1.69844,<sp/>-1.47299,<sp/>-1.28152,<sp/>-0.995631,<sp/>-0.709702,<sp/>-0.364674,<sp/>-0.0564949,<sp/>0.0504716,<sp/>0.349652,<sp/>0.707116,<sp/>0.980538,<sp/>1.27812,<sp/>1.46757,<sp/>1.69447,<sp/>1.94394,<sp/>2.24157,<sp/>2.45288,<sp/>2.5};</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/><sp/>binvalues_E60_80<sp/>=<sp/><ref refid="Utils_8hpp_1a815f2f22867c52a165aad8f6de2aec24" kindref="member">makeBinValues</ref>({0.660412,<sp/>0.660432,<sp/>0.808449,<sp/>0.798151,<sp/>0.831584,<sp/>0.787928,<sp/>0.846341,<sp/>0.856877,<sp/>0.869496,<sp/>0.85714,<sp/>0.778101,<sp/>0.767729,<sp/>0.859521,<sp/>0.87842,<sp/>0.855617,<sp/>0.853658,<sp/>0.79332,<sp/>0.835081,<sp/>0.803935,<sp/>0.804059,<sp/>0.629147,<sp/>0.629172});</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>HEPUtils::BinnedFn1D&lt;double&gt;<sp/>_eff_E60_80<sp/>=<sp/>{binedges_E60_80,<sp/>binvalues_E60_80};</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/>binedges_E80<sp/>=<sp/>{-2.5,<sp/>-2.45987,<sp/>-2.22149,<sp/>-1.94797,<sp/>-1.69748,<sp/>-1.47206,<sp/>-1.29251,<sp/>-0.994818,<sp/>-0.709105,<sp/>-0.352212,<sp/>-0.0558319,<sp/>0.0513809,<sp/>0.374044,<sp/>0.719562,<sp/>0.981359,<sp/>1.27873,<sp/>1.46843,<sp/>1.70723,<sp/>1.9449,<sp/>2.20712,<sp/>2.45676,<sp/>2.5};</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/><sp/>binvalues_E80<sp/>=<sp/><ref refid="Utils_8hpp_1a815f2f22867c52a165aad8f6de2aec24" kindref="member">makeBinValues</ref>({0.859652,<sp/>0.859627,<sp/>0.876145,<sp/>0.859415,<sp/>0.888391,<sp/>0.8426,<sp/>0.900685,<sp/>0.904716,<sp/>0.904597,<sp/>0.889909,<sp/>0.817086,<sp/>0.821195,<sp/>0.893762,<sp/>0.910235,<sp/>0.903895,<sp/>0.889231,<sp/>0.843455,<sp/>0.884899,<sp/>0.859875,<sp/>0.87846,<sp/>0.857585,<sp/>0.85756});</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>HEPUtils::BinnedFn1D&lt;double&gt;<sp/>_eff_E80<sp/>=<sp/>{binedges_E80,<sp/>binvalues_E80};</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>loop<sp/>over<sp/>the<sp/>electrons<sp/>and<sp/>only<sp/>keep<sp/>those<sp/>that<sp/>pass<sp/>the<sp/>random<sp/>efficiency<sp/>cut</highlight></codeline>
<codeline lineno="495"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>keptElectronsEnd<sp/>=<sp/>std::remove_if(electrons.begin(),<sp/>electrons.end(),</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>HEPUtils::Particle*<sp/>electron)<sp/>{</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>double<sp/>e_pt<sp/>=<sp/>electron-&gt;pT();</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>double<sp/>e_eta<sp/>=<sp/>electron-&gt;eta();</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(!(fabs(e_eta)<sp/>&lt;<sp/>2.5<sp/>&amp;&amp;<sp/>e_pt<sp/>&gt;=<sp/>10))<sp/>return<sp/>true;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/>if<sp/>(HEPUtils::in_range(e_pt,<sp/>10,<sp/>15))<sp/>return<sp/>!random_bool(_eff_E10_15,<sp/>fabs(e_eta));</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/>if<sp/>(HEPUtils::in_range(e_pt,<sp/>15,<sp/>20))<sp/>return<sp/>!random_bool(_eff_E15_20,<sp/>fabs(e_eta));</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/>if<sp/>(HEPUtils::in_range(e_pt,<sp/>20,<sp/>25))<sp/>return<sp/>!random_bool(_eff_E20_25,<sp/>e_eta);</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/>if<sp/>(HEPUtils::in_range(e_pt,<sp/>25,<sp/>30))<sp/>return<sp/>!random_bool(_eff_E25_30,<sp/>e_eta);</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/>if<sp/>(HEPUtils::in_range(e_pt,<sp/>30,<sp/>35))<sp/>return<sp/>!random_bool(_eff_E30_35,<sp/>e_eta);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/>if<sp/>(HEPUtils::in_range(e_pt,<sp/>35,<sp/>40))<sp/>return<sp/>!random_bool(_eff_E35_40,<sp/>e_eta);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/>if<sp/>(HEPUtils::in_range(e_pt,<sp/>40,<sp/>45))<sp/>return<sp/>!random_bool(_eff_E40_45,<sp/>e_eta);</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/>if<sp/>(HEPUtils::in_range(e_pt,<sp/>45,<sp/>50))<sp/>return<sp/>!random_bool(_eff_E45_50,<sp/>e_eta);</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/>if<sp/>(HEPUtils::in_range(e_pt,<sp/>50,<sp/>60))<sp/>return<sp/>!random_bool(_eff_E50_60,<sp/>e_eta);</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/>if<sp/>(HEPUtils::in_range(e_pt,<sp/>60,<sp/>80))<sp/>return<sp/>!random_bool(_eff_E60_80,<sp/>e_eta);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/>return<sp/>!random_bool(_eff_E80,<sp/>e_eta);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>electrons.erase(keptElectronsEnd,<sp/>electrons.end());</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="517" refid="namespaceGambit_1_1ColliderBit_1_1ATLAS_1a007d73ea93df5516dae8e99a99d23a40" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1_1ColliderBit_1_1ATLAS_1a02e070dc82bdc10cf8d4d07477cd111c" kindref="member">applyTightIDElectronSelection</ref>(std::vector&lt;HEPUtils::Particle*&gt;&amp;<sp/>electrons)<sp/>{</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceGambit_1_1ColliderBit_1_1ATLAS_1a02e070dc82bdc10cf8d4d07477cd111c" kindref="member">applyTightIDElectronSelection</ref>(</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">std::vector&lt;const<sp/>HEPUtils::Particle*&gt;&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(electrons));</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="524" refid="namespaceGambit_1_1ColliderBit_1_1ATLAS_1a9020cc2ad2fd30a62f5e69105b48c1a1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1_1ColliderBit_1_1ATLAS_1a9020cc2ad2fd30a62f5e69105b48c1a1" kindref="member">applyElectronIDEfficiency2019</ref>(std::vector&lt;const<sp/>HEPUtils::Particle*&gt;&amp;<sp/>electrons,<sp/>str<sp/>operating_point)</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>digitised<sp/>from<sp/>Fig<sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/>binedges_pt<sp/><sp/>=<sp/>{<sp/>0.0,<sp/>6.668795911849248,<sp/>9.673354432217419,<sp/>14.643593391597225,<sp/>19.57318312476409,<sp/>24.71356813100665,<sp/>29.655352632037403,<sp/>34.594233616910074,<sp/>39.73636073284749,<sp/>44.68221015649952,<sp/>49.6292209866148,<sp/>59.52440405330856,<sp/>79.51859702099242,<sp/>DBL_MAX};</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/>bineffs_pt_loose<sp/><sp/>=<sp/>{<sp/>0.9054376657824932,<sp/>0.9267904509283819,<sp/>0.8757294429708221,<sp/>0.8450928381962863,<sp/>0.8775862068965516,<sp/>0.889655172413793,<sp/>0.9035809018567638,<sp/>0.9193633952254641,<sp/>0.929575596816976,<sp/>0.9370026525198938,<sp/>0.942572944297082,<sp/>0.9509283819628646,<sp/>0.9592838196286471};</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/>bineffs_pt_medium<sp/><sp/>=<sp/>{<sp/>0.7355437665782492,<sp/>0.7912466843501325,<sp/>0.7986737400530503,<sp/>0.7717506631299733,<sp/>0.8135278514588858,<sp/>0.8348806366047744,<sp/>0.8525198938992041,<sp/>0.8692307692307691,<sp/>0.8822281167108752,<sp/>0.889655172413793,<sp/>0.902652519893899,<sp/>0.9230769230769229,<sp/>0.9407161803713526<sp/>};</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/>bineffs_pt_tight<sp/><sp/>=<sp/>{<sp/>0.5572944297082227,<sp/>0.6213527851458884,<sp/>0.6547745358090185,<sp/>0.6714854111405835,<sp/>0.699336870026525,<sp/>0.7299734748010609,<sp/>0.7559681697612731,<sp/>0.7754641909814322,<sp/>0.7921750663129972,<sp/>0.8079575596816975,<sp/>0.8311671087533155,<sp/>0.8710875331564986,<sp/>0.8989389920424402<sp/>};</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>select<sp/>operating<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>bineffs_pt;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(operating_point<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Loose&quot;</highlight><highlight class="normal"><sp/>or<sp/>operating_point<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;VeryLoose&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bineffs_pt<sp/>=<sp/>bineffs_pt_loose;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(operating_point<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Medium&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bineffs_pt<sp/>=<sp/>bineffs_pt_medium;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(operating_point<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Tight&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bineffs_pt<sp/>=<sp/>bineffs_pt_tight;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>utils_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Unknown<sp/>operating<sp/>point&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>HEPUtils::BinnedFn1D&lt;double&gt;<sp/>_eff_pt(binedges_pt,<sp/>bineffs_pt);</highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>filter<sp/>electrons</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="Utils_8hpp_1acacdc93daa0787f1cf7a436380390a7a" kindref="member">filtereff_pt</ref>(electrons,<sp/>_eff_pt);</highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="552" refid="namespaceGambit_1_1ColliderBit_1_1ATLAS_1a6411ca61a81ce789e3a480801ef7d565" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceGambit_1_1ColliderBit_1_1ATLAS_1a6411ca61a81ce789e3a480801ef7d565" kindref="member">applyElectronIsolationEfficiency2019</ref>(std::vector&lt;const<sp/>HEPUtils::Particle*&gt;&amp;<sp/>electrons,<sp/>str<sp/>operating_point)</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>digitised<sp/>from<sp/>Fig<sp/>12</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/>binedges_pt<sp/>=<sp/>{0.0,<sp/>6.548307897301772,<sp/>9.706735099256047,<sp/>19.611982283197417,<sp/>24.561829913760132,<sp/>29.71154676569653,<sp/>34.461525174885566,<sp/>39.61370954807349,<sp/>44.56047277707178,<sp/>49.5109372879474,<sp/>59.60803424919497,<sp/>79.4086585320716,<sp/>DBL_MAX};</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/>bineffs_pt_loose_trackonly<sp/>=<sp/>{0.9694027334287603,<sp/>0.9841898810834618,<sp/>0.9915715839022242,<sp/>0.9890807366218896,<sp/>0.9875756991852016,<sp/>0.9875509249064084,<sp/>0.9875261506276152,<sp/>0.9879947974014535,<sp/>0.9884634441752919,<sp/>0.9884386698964986,<sp/>0.9888959617925568,<sp/>0.9907953231667035,<sp/>0.9930404921823388};</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/>bineffs_pt_loose<sp/>=<sp/>{0.9595332801145123,<sp/>0.9812303870292888,<sp/>0.9891055109006828,<sp/>0.9875994412023784,<sp/>0.9856020149746753,<sp/>0.9826167143800926,<sp/>0.9820985190486677,<sp/>0.9820737447698745,<sp/>0.9820489704910813,<sp/>0.9825186495265361,<sp/>0.9829749091609778,<sp/>0.9903008698524555,<sp/>0.9930394599207224};</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/>bineffs_pt_gradient_loose<sp/>=<sp/>{0.8973632597445498,<sp/>0.9471843343977098,<sp/>0.9693676365338032,<sp/>0.9466465260955738,<sp/>0.947115172869412,<sp/>0.9485706617485136,<sp/>0.9539735190486678,<sp/>0.9593784408720547,<sp/>0.9642868448579609,<sp/>0.9706755120017618,<sp/>0.9780417308962784,<sp/>0.9843808494824929,<sp/>0.9851457553402335};</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/>bineffs_pt_gradient<sp/>=<sp/>{0.8425935229024444,<sp/>0.9082030389781987,<sp/>0.944204195111209,<sp/>0.9007573359392205,<sp/>0.9081359419731337,<sp/>0.9145235768553183,<sp/>0.924368255890773,<sp/>0.9351987447698745,<sp/>0.9460292336489761,<sp/>0.9573531435807092,<sp/>0.9716251926888351,<sp/>0.9838874284298613,<sp/>0.9851457553402335};</highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>select<sp/>operating<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>bineffs_pt;</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(operating_point<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;LooseTrackOnly&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bineffs_pt<sp/>=<sp/>bineffs_pt_loose_trackonly;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(operating_point<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Loose&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bineffs_pt<sp/>=<sp/>bineffs_pt_loose;</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(operating_point<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;GradientLoose&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bineffs_pt<sp/>=<sp/>bineffs_pt_gradient_loose;</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(operating_point<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Gradient&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bineffs_pt<sp/>=<sp/>bineffs_pt_gradient;</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>utils_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Unknown<sp/>operating<sp/>point&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>HEPUtils::BinnedFn1D&lt;double&gt;<sp/>_eff_pt(binedges_pt,<sp/>bineffs_pt);</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>filter<sp/>electrons</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="Utils_8hpp_1acacdc93daa0787f1cf7a436380390a7a" kindref="member">filtereff_pt</ref>(electrons,<sp/>_eff_pt);</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="585"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/include/gambit/ColliderBit/ATLASEfficiencies.hpp"/>
  </compounddef>
</doxygen>
