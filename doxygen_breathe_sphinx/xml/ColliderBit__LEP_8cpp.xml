<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="ColliderBit__LEP_8cpp" kind="file" language="C++">
    <compoundname>ColliderBit_LEP.cpp</compoundname>
    <includes local="no">cmath</includes>
    <includes local="no">string</includes>
    <includes local="no">iostream</includes>
    <includes local="no">fstream</includes>
    <includes local="no">memory</includes>
    <includes local="no">numeric</includes>
    <includes local="no">sstream</includes>
    <includes local="no">vector</includes>
    <includes local="yes">gambit/Elements/gambit_module_headers.hpp</includes>
    <includes refid="ColliderBit__rollcall_8hpp" local="yes">gambit/ColliderBit/ColliderBit_rollcall.hpp</includes>
    <includes local="yes">gambit/Elements/mssm_slhahelp.hpp</includes>
    <includes refid="lep__mssm__xsecs_8hpp" local="yes">gambit/ColliderBit/lep_mssm_xsecs.hpp</includes>
    <includes refid="ImageLimit_8hpp" local="yes">gambit/ColliderBit/limits/ImageLimit.hpp</includes>
    <incdepgraph>
      <node id="53">
        <label>gambit/ColliderBit/ColliderBit_Higgs_rollcall.hpp</label>
        <link refid="ColliderBit__Higgs__rollcall_8hpp"/>
      </node>
      <node id="54">
        <label>gambit/ColliderBit/ColliderBit_LEP_rollcall.hpp</label>
        <link refid="ColliderBit__LEP__rollcall_8hpp"/>
      </node>
      <node id="55">
        <label>gambit/ColliderBit/ColliderBit_MC_rollcall.hpp</label>
        <link refid="ColliderBit__MC__rollcall_8hpp"/>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>gambit/ColliderBit/ColliderBit_rollcall.hpp</label>
        <link refid="ColliderBit__rollcall_8hpp"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>gambit/ColliderBit/ColliderBit_types.hpp</label>
        <link refid="ColliderBit__types_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>gambit/ColliderBit/MCLoopInfo.hpp</label>
        <link refid="MCLoopInfo_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>gambit/ColliderBit/MC_convergence.hpp</label>
        <link refid="MC__convergence_8hpp"/>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>gambit/ColliderBit/analyses/AnalysisContainer.hpp</label>
        <link refid="AnalysisContainer_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>gambit/ColliderBit/analyses/AnalysisData.hpp</label>
        <link refid="AnalysisData_8hpp"/>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>gambit/ColliderBit/analyses/EventCounter.hpp</label>
        <link refid="EventCounter_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>gambit/ColliderBit/colliders/BaseCollider.hpp</label>
        <link refid="BaseCollider_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>gambit/ColliderBit/colliders/Pythia8/Py8Collider.hpp</label>
        <link refid="Py8Collider_8hpp"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>gambit/ColliderBit/colliders/Pythia8/SetHooksClass.hpp</label>
        <link refid="SetHooksClass_8hpp"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>gambit/ColliderBit/detectors/BaseDetector.hpp</label>
        <link refid="BaseDetector_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>gambit/ColliderBit/detectors/BuckFast.hpp</label>
        <link refid="BuckFast_8hpp"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>gambit/ColliderBit/lep_mssm_xsecs.hpp</label>
        <link refid="lep__mssm__xsecs_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>gambit/ColliderBit/limits/ALEPHSleptonLimits.hpp</label>
        <link refid="ALEPHSleptonLimits_8hpp_source"/>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>gambit/ColliderBit/limits/BaseLimitContainer.hpp</label>
        <link refid="BaseLimitContainer_8hpp"/>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>gambit/ColliderBit/limits/ImageLimit.hpp</label>
        <link refid="ImageLimit_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>gambit/ColliderBit/limits/L3GauginoLimits.hpp</label>
        <link refid="L3GauginoLimits_8hpp_source"/>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>gambit/ColliderBit/limits/L3SleptonLimits.hpp</label>
        <link refid="L3SleptonLimits_8hpp_source"/>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>gambit/ColliderBit/limits/OPALDegenerateCharginoLimits.hpp</label>
        <link refid="OPALDegenerateCharginoLimits_8hpp_source"/>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>gambit/ColliderBit/limits/OPALGauginoLimits.hpp</label>
        <link refid="OPALGauginoLimits_8hpp_source"/>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>gambit/ColliderBit/limits/PointsAndLines.hpp</label>
        <link refid="PointsAndLines_8hpp_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>gambit/ColliderBit/xsec.hpp</label>
        <link refid="xsec_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/src/ColliderBit_LEP.cpp</label>
        <link refid="ColliderBit__LEP_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>Eigen/Core</label>
      </node>
      <node id="31">
        <label>HEPUtils/Event.h</label>
      </node>
      <node id="33">
        <label>HEPUtils/Jet.h</label>
      </node>
      <node id="32">
        <label>HEPUtils/Particle.h</label>
      </node>
      <node id="26">
        <label>SLHAea/slhaea.h</label>
      </node>
      <node id="42">
        <label>algorithm</label>
      </node>
      <node id="39">
        <label>cfloat</label>
      </node>
      <node id="14">
        <label>chrono</label>
      </node>
      <node id="2">
        <label>cmath</label>
      </node>
      <node id="46">
        <label>cstdlib</label>
      </node>
      <node id="30">
        <label>exception</label>
      </node>
      <node id="5">
        <label>fstream</label>
      </node>
      <node id="56">
        <label>gambit/ColliderBit/ColliderBit_models_rollcall.hpp</label>
      </node>
      <node id="27">
        <label>gambit/ColliderBit/colliders/Pythia8/Py8Collider_typedefs.hpp</label>
      </node>
      <node id="10">
        <label>gambit/Elements/gambit_module_headers.hpp</label>
      </node>
      <node id="57">
        <label>gambit/Elements/mssm_slhahelp.hpp</label>
      </node>
      <node id="12">
        <label>gambit/Elements/shared_types.hpp</label>
      </node>
      <node id="15">
        <label>gambit/Utils/PID_pair.hpp</label>
      </node>
      <node id="36">
        <label>gambit/Utils/begin_ignore_warnings_eigen.hpp</label>
      </node>
      <node id="38">
        <label>gambit/Utils/end_ignore_warnings.hpp</label>
      </node>
      <node id="17">
        <label>gambit/Utils/util_types.hpp</label>
      </node>
      <node id="41">
        <label>iomanip</label>
      </node>
      <node id="4">
        <label>iostream</label>
      </node>
      <node id="40">
        <label>limits</label>
      </node>
      <node id="20">
        <label>map</label>
      </node>
      <node id="6">
        <label>memory</label>
      </node>
      <node id="7">
        <label>numeric</label>
      </node>
      <node id="22">
        <label>ostream</label>
      </node>
      <node id="8">
        <label>sstream</label>
      </node>
      <node id="23">
        <label>stdexcept</label>
      </node>
      <node id="3">
        <label>string</label>
      </node>
      <node id="47">
        <label>utility</label>
      </node>
      <node id="9">
        <label>vector</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceGambit">Gambit</innernamespace>
    <innernamespace refid="namespaceGambit_1_1ColliderBit">Gambit::ColliderBit</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Functions of ColliderBit LEP likelihoods.</para>
<para><hruler/>
</para>
<para>Authors (add name and date if you modify):</para>
<para><simplesect kind="author"><para>Abram Krislock (<ulink url="mailto:a.m.b.krislock@fys.uio.no">a.m.b.krislock@fys.uio.no</ulink>) </para>
</simplesect>
<simplesect kind="author"><para>Anders Kvellestad (<ulink url="mailto:anders.kvellestad@nordita.org">anders.kvellestad@nordita.org</ulink>)</para>
</simplesect>
<simplesect kind="author"><para>Are Raklev (<ulink url="mailto:ahye@fys.uio.no">ahye@fys.uio.no</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2018 Feb</para>
</simplesect>
<simplesect kind="author"><para>Tomas Gonzalo (<ulink url="mailto:t.e.gonzalo@fys.uio.no">t.e.gonzalo@fys.uio.no</ulink>) </para>
</simplesect>
<simplesect kind="date"><para>2018 Feb</para>
</simplesect>
<hruler/>
 </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/><sp/><sp/>GAMBIT:<sp/>Global<sp/>and<sp/>Modular<sp/>BSM<sp/>Inference<sp/>Tool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>*********************************************</highlight></codeline>
<codeline lineno="25"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;numeric&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;gambit/Elements/gambit_module_headers.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ColliderBit__rollcall_8hpp" kindref="compound">gambit/ColliderBit/ColliderBit_rollcall.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;gambit/Elements/mssm_slhahelp.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="lep__mssm__xsecs_8hpp" kindref="compound">gambit/ColliderBit/lep_mssm_xsecs.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ImageLimit_8hpp" kindref="compound">gambit/ColliderBit/limits/ImageLimit.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>COLLIDERBIT_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceGambit" kindref="compound">Gambit</ref></highlight></codeline>
<codeline lineno="44"><highlight class="normal">{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">ColliderBit</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>***<sp/>Limits<sp/>from<sp/>e+e-<sp/>colliders<sp/>***</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="ColliderBit__LEP_8cpp_1abd1ca4d53792828f13dce08349673b03" kindref="member">limit_LLike</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x95,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sigma)<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p95<sp/>=<sp/>1.;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">std::erf;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">std::sqrt;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p95<sp/>&lt;<sp/>1.01)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;20000;<sp/>i++)</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>step<sp/>=<sp/>0.1;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0.5<sp/>*<sp/>(1<sp/>-<sp/>erf(p95<sp/>+<sp/>step))<sp/>&gt;<sp/>0.05)<sp/>p95<sp/>+=<sp/>step;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>step<sp/>/=<sp/>10.;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>0.5<sp/>*<sp/>(1.0<sp/>-<sp/>erf(p95<sp/>+<sp/>(x<sp/>-<sp/>x95)<sp/>/<sp/>sigma<sp/>/<sp/>sqrt(2.)));</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>&lt;<sp/>0.0<sp/>or<sp/>Utils::isnan(result))</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;result:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>result<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;x:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>x<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;x95:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>x95<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;sigma:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>sigma<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;p95:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>p95<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;(x<sp/>-<sp/>x95)<sp/>/<sp/>sigma<sp/>/<sp/>sqrt(2.):<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(x<sp/>-<sp/>x95)<sp/>/<sp/>sigma<sp/>/<sp/>sqrt(2.)<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;erf(p95<sp/>+<sp/>(x<sp/>-<sp/>x95)<sp/>/<sp/>sigma<sp/>/<sp/>sqrt(2.)):<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>erf(p95<sp/>+<sp/>(x<sp/>-<sp/>x95)<sp/>/<sp/>sigma<sp/>/<sp/>sqrt(2.))<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Suspicious<sp/>results<sp/>in<sp/>limit_LLike!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(result<sp/>==<sp/>0.0<sp/>?<sp/>-1e10<sp/>:<sp/>log(result));</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>triplet&lt;double&gt;&amp;<sp/>xsecWithError)</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xsec<sp/>=<sp/>xsecWithError.central;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dxsec_upper<sp/>=<sp/>xsecWithError.upper<sp/>-<sp/>xsecWithError.central;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dxsec_lower<sp/>=<sp/>xsecWithError.central<sp/>-<sp/>xsecWithError.lower;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xsec<sp/>&lt;<sp/>0.0<sp/>or<sp/>dxsec_upper<sp/>&lt;<sp/>0.0<sp/>or<sp/>dxsec_lower<sp/>&lt;<sp/>0.0</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>or<sp/>Utils::isnan(xsec)<sp/>or<sp/>Utils::isnan(dxsec_upper)<sp/>or<sp/>Utils::isnan(dxsec_lower))</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;xsec:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>xsec<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;dxsec_upper:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>dxsec_upper<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;dxsec_lower:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>dxsec_lower<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP208_SLHA1_convention_xsec_selselbar(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::LEP208_SLHA1_convention_xsec_selselbar;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lep__mssm__xsecs_8hpp_1a989dc93c7fb84645e72819a5986ab7a5" kindref="member">get_sigma_ee_ll</ref>(result,<sp/>208.0,<sp/>1,<sp/>1,<sp/>1,<sp/>tol,<sp/>tol,<sp/>pt_error,<sp/>pt_error,<sp/>*Dep::MSSM_spectrum,<sp/>Dep::Z_decay_rates-&gt;width_in_GeV,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP208_SLHA1_convention_xsec_selserbar(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::LEP208_SLHA1_convention_xsec_selserbar;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lep__mssm__xsecs_8hpp_1a989dc93c7fb84645e72819a5986ab7a5" kindref="member">get_sigma_ee_ll</ref>(result,<sp/>208.0,<sp/>1,<sp/>1,<sp/>2,<sp/>tol,<sp/>tol,<sp/>pt_error,<sp/>pt_error,<sp/>*Dep::MSSM_spectrum,<sp/>Dep::Z_decay_rates-&gt;width_in_GeV,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP208_SLHA1_convention_xsec_serserbar(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::LEP208_SLHA1_convention_xsec_serserbar;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lep__mssm__xsecs_8hpp_1a989dc93c7fb84645e72819a5986ab7a5" kindref="member">get_sigma_ee_ll</ref>(result,<sp/>208.0,<sp/>1,<sp/>2,<sp/>2,<sp/>tol,<sp/>tol,<sp/>pt_error,<sp/>pt_error,<sp/>*Dep::MSSM_spectrum,<sp/>Dep::Z_decay_rates-&gt;width_in_GeV,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP208_SLHA1_convention_xsec_serselbar(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>*Pipes::LEP208_SLHA1_convention_xsec_serselbar::Dep::LEP208_xsec_selserbar;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP208_SLHA1_convention_xsec_se1se1bar(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::LEP208_SLHA1_convention_xsec_se1se1bar;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gtol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>gpt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ftol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;family_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fpt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;family_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lep__mssm__xsecs_8hpp_1a989dc93c7fb84645e72819a5986ab7a5" kindref="member">get_sigma_ee_ll</ref>(result,<sp/>208.0,<sp/>1,<sp/>1,<sp/>1,<sp/>gtol,<sp/>ftol,<sp/>gpt_error,<sp/>fpt_error,<sp/>*Dep::MSSM_spectrum,<sp/>Dep::Z_decay_rates-&gt;width_in_GeV,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP208_SLHA1_convention_xsec_se1se2bar(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::LEP208_SLHA1_convention_xsec_se1se2bar;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gtol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>gpt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ftol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;family_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fpt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;family_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lep__mssm__xsecs_8hpp_1a989dc93c7fb84645e72819a5986ab7a5" kindref="member">get_sigma_ee_ll</ref>(result,<sp/>208.0,<sp/>1,<sp/>1,<sp/>2,<sp/>gtol,<sp/>ftol,<sp/>gpt_error,<sp/>fpt_error,<sp/>*Dep::MSSM_spectrum,<sp/>Dep::Z_decay_rates-&gt;width_in_GeV,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP208_SLHA1_convention_xsec_se2se2bar(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::LEP208_SLHA1_convention_xsec_se2se2bar;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gtol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>gpt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ftol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;family_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fpt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;family_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lep__mssm__xsecs_8hpp_1a989dc93c7fb84645e72819a5986ab7a5" kindref="member">get_sigma_ee_ll</ref>(result,<sp/>208.0,<sp/>1,<sp/>2,<sp/>2,<sp/>gtol,<sp/>ftol,<sp/>gpt_error,<sp/>fpt_error,<sp/>*Dep::MSSM_spectrum,<sp/>Dep::Z_decay_rates-&gt;width_in_GeV,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP208_SLHA1_convention_xsec_se2se1bar(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>*Pipes::LEP208_SLHA1_convention_xsec_se2se1bar::Dep::LEP208_xsec_se1se2bar;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP208_SLHA1_convention_xsec_smulsmulbar(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::LEP208_SLHA1_convention_xsec_smulsmulbar;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lep__mssm__xsecs_8hpp_1a989dc93c7fb84645e72819a5986ab7a5" kindref="member">get_sigma_ee_ll</ref>(result,<sp/>208.0,<sp/>2,<sp/>1,<sp/>1,<sp/>tol,<sp/>tol,<sp/>pt_error,<sp/>pt_error,<sp/>*Dep::MSSM_spectrum,<sp/>Dep::Z_decay_rates-&gt;width_in_GeV,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP208_SLHA1_convention_xsec_smulsmurbar(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::LEP208_SLHA1_convention_xsec_smulsmurbar;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lep__mssm__xsecs_8hpp_1a989dc93c7fb84645e72819a5986ab7a5" kindref="member">get_sigma_ee_ll</ref>(result,<sp/>208.0,<sp/>2,<sp/>1,<sp/>2,<sp/>tol,<sp/>tol,<sp/>pt_error,<sp/>pt_error,<sp/>*Dep::MSSM_spectrum,<sp/>Dep::Z_decay_rates-&gt;width_in_GeV,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP208_SLHA1_convention_xsec_smursmurbar(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::LEP208_SLHA1_convention_xsec_smursmurbar;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lep__mssm__xsecs_8hpp_1a989dc93c7fb84645e72819a5986ab7a5" kindref="member">get_sigma_ee_ll</ref>(result,<sp/>208.0,<sp/>2,<sp/>2,<sp/>2,<sp/>tol,<sp/>tol,<sp/>pt_error,<sp/>pt_error,<sp/>*Dep::MSSM_spectrum,<sp/>Dep::Z_decay_rates-&gt;width_in_GeV,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP208_SLHA1_convention_xsec_smursmulbar(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>*Pipes::LEP208_SLHA1_convention_xsec_smursmulbar::Dep::LEP208_xsec_smulsmurbar;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP208_SLHA1_convention_xsec_smu1smu1bar(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::LEP208_SLHA1_convention_xsec_smu1smu1bar;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gtol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>gpt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ftol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;family_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fpt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;family_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lep__mssm__xsecs_8hpp_1a989dc93c7fb84645e72819a5986ab7a5" kindref="member">get_sigma_ee_ll</ref>(result,<sp/>208.0,<sp/>2,<sp/>1,<sp/>1,<sp/>gtol,<sp/>ftol,<sp/>gpt_error,<sp/>fpt_error,<sp/>*Dep::MSSM_spectrum,<sp/>Dep::Z_decay_rates-&gt;width_in_GeV,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP208_SLHA1_convention_xsec_smu1smu2bar(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::LEP208_SLHA1_convention_xsec_smu1smu2bar;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gtol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>gpt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ftol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;family_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fpt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;family_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lep__mssm__xsecs_8hpp_1a989dc93c7fb84645e72819a5986ab7a5" kindref="member">get_sigma_ee_ll</ref>(result,<sp/>208.0,<sp/>2,<sp/>1,<sp/>2,<sp/>gtol,<sp/>ftol,<sp/>gpt_error,<sp/>fpt_error,<sp/>*Dep::MSSM_spectrum,<sp/>Dep::Z_decay_rates-&gt;width_in_GeV,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP208_SLHA1_convention_xsec_smu2smu2bar(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::LEP208_SLHA1_convention_xsec_smu2smu2bar;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gtol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>gpt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ftol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;family_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fpt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;family_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lep__mssm__xsecs_8hpp_1a989dc93c7fb84645e72819a5986ab7a5" kindref="member">get_sigma_ee_ll</ref>(result,<sp/>208.0,<sp/>2,<sp/>2,<sp/>2,<sp/>gtol,<sp/>ftol,<sp/>gpt_error,<sp/>fpt_error,<sp/>*Dep::MSSM_spectrum,<sp/>Dep::Z_decay_rates-&gt;width_in_GeV,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP208_SLHA1_convention_xsec_smu2smu1bar(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>*Pipes::LEP208_SLHA1_convention_xsec_smu2smu1bar::Dep::LEP208_xsec_smu1smu2bar;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="265"></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP208_SLHA1_convention_xsec_staulstaulbar(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::LEP208_SLHA1_convention_xsec_staulstaulbar;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lep__mssm__xsecs_8hpp_1a989dc93c7fb84645e72819a5986ab7a5" kindref="member">get_sigma_ee_ll</ref>(result,<sp/>208.0,<sp/>3,<sp/>1,<sp/>1,<sp/>tol,<sp/>tol,<sp/>pt_error,<sp/>pt_error,<sp/>*Dep::MSSM_spectrum,<sp/>Dep::Z_decay_rates-&gt;width_in_GeV,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP208_SLHA1_convention_xsec_staulstaurbar(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::LEP208_SLHA1_convention_xsec_staulstaurbar;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lep__mssm__xsecs_8hpp_1a989dc93c7fb84645e72819a5986ab7a5" kindref="member">get_sigma_ee_ll</ref>(result,<sp/>208.0,<sp/>3,<sp/>1,<sp/>2,<sp/>tol,<sp/>tol,<sp/>pt_error,<sp/>pt_error,<sp/>*Dep::MSSM_spectrum,<sp/>Dep::Z_decay_rates-&gt;width_in_GeV,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP208_SLHA1_convention_xsec_staurstaurbar(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::LEP208_SLHA1_convention_xsec_staurstaurbar;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lep__mssm__xsecs_8hpp_1a989dc93c7fb84645e72819a5986ab7a5" kindref="member">get_sigma_ee_ll</ref>(result,<sp/>208.0,<sp/>3,<sp/>2,<sp/>2,<sp/>tol,<sp/>tol,<sp/>pt_error,<sp/>pt_error,<sp/>*Dep::MSSM_spectrum,<sp/>Dep::Z_decay_rates-&gt;width_in_GeV,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP208_SLHA1_convention_xsec_staurstaulbar(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>*Pipes::LEP208_SLHA1_convention_xsec_staurstaulbar::Dep::LEP208_xsec_staulstaurbar;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP208_SLHA1_convention_xsec_stau1stau1bar(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::LEP208_SLHA1_convention_xsec_stau1stau1bar;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gtol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>gpt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ftol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;family_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fpt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;family_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lep__mssm__xsecs_8hpp_1a989dc93c7fb84645e72819a5986ab7a5" kindref="member">get_sigma_ee_ll</ref>(result,<sp/>208.0,<sp/>3,<sp/>1,<sp/>1,<sp/>gtol,<sp/>ftol,<sp/>gpt_error,<sp/>fpt_error,<sp/>*Dep::MSSM_spectrum,<sp/>Dep::Z_decay_rates-&gt;width_in_GeV,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP208_SLHA1_convention_xsec_stau1stau2bar(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::LEP208_SLHA1_convention_xsec_stau1stau2bar;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gtol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>gpt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ftol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;family_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fpt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;family_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lep__mssm__xsecs_8hpp_1a989dc93c7fb84645e72819a5986ab7a5" kindref="member">get_sigma_ee_ll</ref>(result,<sp/>208.0,<sp/>3,<sp/>1,<sp/>2,<sp/>gtol,<sp/>ftol,<sp/>gpt_error,<sp/>fpt_error,<sp/>*Dep::MSSM_spectrum,<sp/>Dep::Z_decay_rates-&gt;width_in_GeV,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP208_SLHA1_convention_xsec_stau2stau2bar(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::LEP208_SLHA1_convention_xsec_stau2stau2bar;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gtol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>gpt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ftol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;family_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fpt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;family_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lep__mssm__xsecs_8hpp_1a989dc93c7fb84645e72819a5986ab7a5" kindref="member">get_sigma_ee_ll</ref>(result,<sp/>208.0,<sp/>3,<sp/>2,<sp/>2,<sp/>gtol,<sp/>ftol,<sp/>gpt_error,<sp/>fpt_error,<sp/>*Dep::MSSM_spectrum,<sp/>Dep::Z_decay_rates-&gt;width_in_GeV,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP208_SLHA1_convention_xsec_stau2stau1bar(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>*Pipes::LEP208_SLHA1_convention_xsec_stau2stau1bar::Dep::LEP208_xsec_stau1stau2bar;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>@brief<sp/>\f[ee<sp/>\to<sp/>\chi_1\chi_1\f]<sp/>pair<sp/>production<sp/>cross-section<sp/>at<sp/>207<sp/>GeV</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP207_SLHA1_convention_xsec_chi00_11(triplet&lt;double&gt;&amp;<sp/>result)<sp/>{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::LEP207_SLHA1_convention_xsec_chi00_11;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lep__mssm__xsecs_8hpp_1a4ec008f96435ebe11b78eca1aa2126f0" kindref="member">get_sigma_ee_chi00</ref>(result,<sp/>207.0,<sp/>1,<sp/>1,<sp/>tol,<sp/>pt_error,<sp/>*Dep::MSSM_spectrum,<sp/>Dep::Z_decay_rates-&gt;width_in_GeV);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))<sp/>{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP208_SLHA1_convention_xsec_chi00_11(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::LEP208_SLHA1_convention_xsec_chi00_11;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lep__mssm__xsecs_8hpp_1a4ec008f96435ebe11b78eca1aa2126f0" kindref="member">get_sigma_ee_chi00</ref>(result,<sp/>208.0,<sp/>1,<sp/>1,<sp/>tol,<sp/>pt_error,<sp/>*Dep::MSSM_spectrum,<sp/>Dep::Z_decay_rates-&gt;width_in_GeV);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP208_SLHA1_convention_xsec_chi00_12(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::LEP208_SLHA1_convention_xsec_chi00_12;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lep__mssm__xsecs_8hpp_1a4ec008f96435ebe11b78eca1aa2126f0" kindref="member">get_sigma_ee_chi00</ref>(result,<sp/>208.0,<sp/>1,<sp/>2,<sp/>tol,<sp/>pt_error,<sp/>*Dep::MSSM_spectrum,<sp/>Dep::Z_decay_rates-&gt;width_in_GeV);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP208_SLHA1_convention_xsec_chi00_13(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::LEP208_SLHA1_convention_xsec_chi00_13;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lep__mssm__xsecs_8hpp_1a4ec008f96435ebe11b78eca1aa2126f0" kindref="member">get_sigma_ee_chi00</ref>(result,<sp/>208.0,<sp/>1,<sp/>3,<sp/>tol,<sp/>pt_error,<sp/>*Dep::MSSM_spectrum,<sp/>Dep::Z_decay_rates-&gt;width_in_GeV);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP208_SLHA1_convention_xsec_chi00_14(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::LEP208_SLHA1_convention_xsec_chi00_14;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lep__mssm__xsecs_8hpp_1a4ec008f96435ebe11b78eca1aa2126f0" kindref="member">get_sigma_ee_chi00</ref>(result,<sp/>208.0,<sp/>1,<sp/>4,<sp/>tol,<sp/>pt_error,<sp/>*Dep::MSSM_spectrum,<sp/>Dep::Z_decay_rates-&gt;width_in_GeV);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP208_SLHA1_convention_xsec_chi00_22(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::LEP208_SLHA1_convention_xsec_chi00_22;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lep__mssm__xsecs_8hpp_1a4ec008f96435ebe11b78eca1aa2126f0" kindref="member">get_sigma_ee_chi00</ref>(result,<sp/>208.0,<sp/>2,<sp/>2,<sp/>tol,<sp/>pt_error,<sp/>*Dep::MSSM_spectrum,<sp/>Dep::Z_decay_rates-&gt;width_in_GeV);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP208_SLHA1_convention_xsec_chi00_23(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::LEP208_SLHA1_convention_xsec_chi00_23;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lep__mssm__xsecs_8hpp_1a4ec008f96435ebe11b78eca1aa2126f0" kindref="member">get_sigma_ee_chi00</ref>(result,<sp/>208.0,<sp/>2,<sp/>3,<sp/>tol,<sp/>pt_error,<sp/>*Dep::MSSM_spectrum,<sp/>Dep::Z_decay_rates-&gt;width_in_GeV);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP208_SLHA1_convention_xsec_chi00_24(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::LEP208_SLHA1_convention_xsec_chi00_24;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lep__mssm__xsecs_8hpp_1a4ec008f96435ebe11b78eca1aa2126f0" kindref="member">get_sigma_ee_chi00</ref>(result,<sp/>208.0,<sp/>2,<sp/>4,<sp/>tol,<sp/>pt_error,<sp/>*Dep::MSSM_spectrum,<sp/>Dep::Z_decay_rates-&gt;width_in_GeV);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP208_SLHA1_convention_xsec_chi00_33(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::LEP208_SLHA1_convention_xsec_chi00_33;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lep__mssm__xsecs_8hpp_1a4ec008f96435ebe11b78eca1aa2126f0" kindref="member">get_sigma_ee_chi00</ref>(result,<sp/>208.0,<sp/>3,<sp/>3,<sp/>tol,<sp/>pt_error,<sp/>*Dep::MSSM_spectrum,<sp/>Dep::Z_decay_rates-&gt;width_in_GeV);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP208_SLHA1_convention_xsec_chi00_34(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::LEP208_SLHA1_convention_xsec_chi00_34;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lep__mssm__xsecs_8hpp_1a4ec008f96435ebe11b78eca1aa2126f0" kindref="member">get_sigma_ee_chi00</ref>(result,<sp/>208.0,<sp/>3,<sp/>4,<sp/>tol,<sp/>pt_error,<sp/>*Dep::MSSM_spectrum,<sp/>Dep::Z_decay_rates-&gt;width_in_GeV);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP208_SLHA1_convention_xsec_chi00_44(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::LEP208_SLHA1_convention_xsec_chi00_44;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lep__mssm__xsecs_8hpp_1a4ec008f96435ebe11b78eca1aa2126f0" kindref="member">get_sigma_ee_chi00</ref>(result,<sp/>208.0,<sp/>4,<sp/>4,<sp/>tol,<sp/>pt_error,<sp/>*Dep::MSSM_spectrum,<sp/>Dep::Z_decay_rates-&gt;width_in_GeV);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP208_SLHA1_convention_xsec_chipm_11(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::LEP208_SLHA1_convention_xsec_chipm_11;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lep__mssm__xsecs_8hpp_1abbf01c906a8961538f1ea4f79d56fcec" kindref="member">get_sigma_ee_chipm</ref>(result,<sp/>208.0,<sp/>1,<sp/>1,<sp/>tol,<sp/>pt_error,<sp/>*Dep::MSSM_spectrum,<sp/>Dep::Z_decay_rates-&gt;width_in_GeV);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP208_SLHA1_convention_xsec_chipm_12(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::LEP208_SLHA1_convention_xsec_chipm_12;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lep__mssm__xsecs_8hpp_1abbf01c906a8961538f1ea4f79d56fcec" kindref="member">get_sigma_ee_chipm</ref>(result,<sp/>208.0,<sp/>1,<sp/>2,<sp/>tol,<sp/>pt_error,<sp/>*Dep::MSSM_spectrum,<sp/>Dep::Z_decay_rates-&gt;width_in_GeV);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP208_SLHA1_convention_xsec_chipm_22(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::LEP208_SLHA1_convention_xsec_chipm_22;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lep__mssm__xsecs_8hpp_1abbf01c906a8961538f1ea4f79d56fcec" kindref="member">get_sigma_ee_chipm</ref>(result,<sp/>208.0,<sp/>2,<sp/>2,<sp/>tol,<sp/>pt_error,<sp/>*Dep::MSSM_spectrum,<sp/>Dep::Z_decay_rates-&gt;width_in_GeV);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP208_SLHA1_convention_xsec_chipm_21(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>*Pipes::LEP208_SLHA1_convention_xsec_chipm_21::Dep::LEP208_xsec_chipm_12;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP205_SLHA1_convention_xsec_selselbar(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::LEP205_SLHA1_convention_xsec_selselbar;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lep__mssm__xsecs_8hpp_1a989dc93c7fb84645e72819a5986ab7a5" kindref="member">get_sigma_ee_ll</ref>(result,<sp/>205.0,<sp/>1,<sp/>1,<sp/>1,<sp/>tol,<sp/>tol,<sp/>pt_error,<sp/>pt_error,<sp/>*Dep::MSSM_spectrum,<sp/>Dep::Z_decay_rates-&gt;width_in_GeV,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP205_SLHA1_convention_xsec_selserbar(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::LEP205_SLHA1_convention_xsec_selserbar;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lep__mssm__xsecs_8hpp_1a989dc93c7fb84645e72819a5986ab7a5" kindref="member">get_sigma_ee_ll</ref>(result,<sp/>205.0,<sp/>1,<sp/>1,<sp/>2,<sp/>tol,<sp/>tol,<sp/>pt_error,<sp/>pt_error,<sp/>*Dep::MSSM_spectrum,<sp/>Dep::Z_decay_rates-&gt;width_in_GeV,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP205_SLHA1_convention_xsec_serserbar(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::LEP205_SLHA1_convention_xsec_serserbar;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lep__mssm__xsecs_8hpp_1a989dc93c7fb84645e72819a5986ab7a5" kindref="member">get_sigma_ee_ll</ref>(result,<sp/>205.0,<sp/>1,<sp/>2,<sp/>2,<sp/>tol,<sp/>tol,<sp/>pt_error,<sp/>pt_error,<sp/>*Dep::MSSM_spectrum,<sp/>Dep::Z_decay_rates-&gt;width_in_GeV,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP205_SLHA1_convention_xsec_serselbar(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>*Pipes::LEP205_SLHA1_convention_xsec_serselbar::Dep::LEP205_xsec_selserbar;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP205_SLHA1_convention_xsec_se1se1bar(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::LEP205_SLHA1_convention_xsec_se1se1bar;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gtol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>gpt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ftol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;family_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fpt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;family_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lep__mssm__xsecs_8hpp_1a989dc93c7fb84645e72819a5986ab7a5" kindref="member">get_sigma_ee_ll</ref>(result,<sp/>205.0,<sp/>1,<sp/>1,<sp/>1,<sp/>gtol,<sp/>ftol,<sp/>gpt_error,<sp/>fpt_error,<sp/>*Dep::MSSM_spectrum,<sp/>Dep::Z_decay_rates-&gt;width_in_GeV,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP205_SLHA1_convention_xsec_se1se2bar(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::LEP205_SLHA1_convention_xsec_se1se2bar;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gtol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>gpt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ftol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;family_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fpt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;family_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lep__mssm__xsecs_8hpp_1a989dc93c7fb84645e72819a5986ab7a5" kindref="member">get_sigma_ee_ll</ref>(result,<sp/>205.0,<sp/>1,<sp/>1,<sp/>2,<sp/>gtol,<sp/>ftol,<sp/>gpt_error,<sp/>fpt_error,<sp/>*Dep::MSSM_spectrum,<sp/>Dep::Z_decay_rates-&gt;width_in_GeV,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP205_SLHA1_convention_xsec_se2se2bar(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::LEP205_SLHA1_convention_xsec_se2se2bar;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gtol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>gpt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ftol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;family_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fpt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;family_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lep__mssm__xsecs_8hpp_1a989dc93c7fb84645e72819a5986ab7a5" kindref="member">get_sigma_ee_ll</ref>(result,<sp/>205.0,<sp/>1,<sp/>2,<sp/>2,<sp/>gtol,<sp/>ftol,<sp/>gpt_error,<sp/>fpt_error,<sp/>*Dep::MSSM_spectrum,<sp/>Dep::Z_decay_rates-&gt;width_in_GeV,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP205_SLHA1_convention_xsec_se2se1bar(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>*Pipes::LEP205_SLHA1_convention_xsec_se2se1bar::Dep::LEP205_xsec_se1se2bar;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="561"></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP205_SLHA1_convention_xsec_smulsmulbar(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::LEP205_SLHA1_convention_xsec_smulsmulbar;</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lep__mssm__xsecs_8hpp_1a989dc93c7fb84645e72819a5986ab7a5" kindref="member">get_sigma_ee_ll</ref>(result,<sp/>205.0,<sp/>2,<sp/>1,<sp/>1,<sp/>tol,<sp/>tol,<sp/>pt_error,<sp/>pt_error,<sp/>*Dep::MSSM_spectrum,<sp/>Dep::Z_decay_rates-&gt;width_in_GeV,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP205_SLHA1_convention_xsec_smulsmurbar(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::LEP205_SLHA1_convention_xsec_smulsmurbar;</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lep__mssm__xsecs_8hpp_1a989dc93c7fb84645e72819a5986ab7a5" kindref="member">get_sigma_ee_ll</ref>(result,<sp/>205.0,<sp/>2,<sp/>1,<sp/>2,<sp/>tol,<sp/>tol,<sp/>pt_error,<sp/>pt_error,<sp/>*Dep::MSSM_spectrum,<sp/>Dep::Z_decay_rates-&gt;width_in_GeV,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP205_SLHA1_convention_xsec_smursmurbar(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::LEP205_SLHA1_convention_xsec_smursmurbar;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lep__mssm__xsecs_8hpp_1a989dc93c7fb84645e72819a5986ab7a5" kindref="member">get_sigma_ee_ll</ref>(result,<sp/>205.0,<sp/>2,<sp/>2,<sp/>2,<sp/>tol,<sp/>tol,<sp/>pt_error,<sp/>pt_error,<sp/>*Dep::MSSM_spectrum,<sp/>Dep::Z_decay_rates-&gt;width_in_GeV,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP205_SLHA1_convention_xsec_smursmulbar(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>*Pipes::LEP205_SLHA1_convention_xsec_smursmulbar::Dep::LEP205_xsec_smulsmurbar;</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP205_SLHA1_convention_xsec_smu1smu1bar(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::LEP205_SLHA1_convention_xsec_smu1smu1bar;</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gtol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>gpt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ftol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;family_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fpt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;family_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lep__mssm__xsecs_8hpp_1a989dc93c7fb84645e72819a5986ab7a5" kindref="member">get_sigma_ee_ll</ref>(result,<sp/>205.0,<sp/>2,<sp/>1,<sp/>1,<sp/>gtol,<sp/>ftol,<sp/>gpt_error,<sp/>fpt_error,<sp/>*Dep::MSSM_spectrum,<sp/>Dep::Z_decay_rates-&gt;width_in_GeV,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP205_SLHA1_convention_xsec_smu1smu2bar(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::LEP205_SLHA1_convention_xsec_smu1smu2bar;</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gtol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>gpt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ftol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;family_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fpt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;family_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lep__mssm__xsecs_8hpp_1a989dc93c7fb84645e72819a5986ab7a5" kindref="member">get_sigma_ee_ll</ref>(result,<sp/>205.0,<sp/>2,<sp/>1,<sp/>2,<sp/>gtol,<sp/>ftol,<sp/>gpt_error,<sp/>fpt_error,<sp/>*Dep::MSSM_spectrum,<sp/>Dep::Z_decay_rates-&gt;width_in_GeV,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP205_SLHA1_convention_xsec_smu2smu2bar(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::LEP205_SLHA1_convention_xsec_smu2smu2bar;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gtol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>gpt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ftol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;family_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fpt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;family_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lep__mssm__xsecs_8hpp_1a989dc93c7fb84645e72819a5986ab7a5" kindref="member">get_sigma_ee_ll</ref>(result,<sp/>205.0,<sp/>2,<sp/>2,<sp/>2,<sp/>gtol,<sp/>ftol,<sp/>gpt_error,<sp/>fpt_error,<sp/>*Dep::MSSM_spectrum,<sp/>Dep::Z_decay_rates-&gt;width_in_GeV,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP205_SLHA1_convention_xsec_smu2smu1bar(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>*Pipes::LEP205_SLHA1_convention_xsec_smu2smu1bar::Dep::LEP205_xsec_smu1smu2bar;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="637"></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP205_SLHA1_convention_xsec_staulstaulbar(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::LEP205_SLHA1_convention_xsec_staulstaulbar;</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lep__mssm__xsecs_8hpp_1a989dc93c7fb84645e72819a5986ab7a5" kindref="member">get_sigma_ee_ll</ref>(result,<sp/>205.0,<sp/>3,<sp/>1,<sp/>1,<sp/>tol,<sp/>tol,<sp/>pt_error,<sp/>pt_error,<sp/>*Dep::MSSM_spectrum,<sp/>Dep::Z_decay_rates-&gt;width_in_GeV,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP205_SLHA1_convention_xsec_staulstaurbar(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::LEP205_SLHA1_convention_xsec_staulstaurbar;</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lep__mssm__xsecs_8hpp_1a989dc93c7fb84645e72819a5986ab7a5" kindref="member">get_sigma_ee_ll</ref>(result,<sp/>205.0,<sp/>3,<sp/>1,<sp/>2,<sp/>tol,<sp/>tol,<sp/>pt_error,<sp/>pt_error,<sp/>*Dep::MSSM_spectrum,<sp/>Dep::Z_decay_rates-&gt;width_in_GeV,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP205_SLHA1_convention_xsec_staurstaurbar(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::LEP205_SLHA1_convention_xsec_staurstaurbar;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lep__mssm__xsecs_8hpp_1a989dc93c7fb84645e72819a5986ab7a5" kindref="member">get_sigma_ee_ll</ref>(result,<sp/>205.0,<sp/>3,<sp/>2,<sp/>2,<sp/>tol,<sp/>tol,<sp/>pt_error,<sp/>pt_error,<sp/>*Dep::MSSM_spectrum,<sp/>Dep::Z_decay_rates-&gt;width_in_GeV,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP205_SLHA1_convention_xsec_staurstaulbar(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>*Pipes::LEP205_SLHA1_convention_xsec_staurstaulbar::Dep::LEP205_xsec_staulstaurbar;</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP205_SLHA1_convention_xsec_stau1stau1bar(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::LEP205_SLHA1_convention_xsec_stau1stau1bar;</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gtol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>gpt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ftol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;family_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fpt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;family_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lep__mssm__xsecs_8hpp_1a989dc93c7fb84645e72819a5986ab7a5" kindref="member">get_sigma_ee_ll</ref>(result,<sp/>205.0,<sp/>3,<sp/>1,<sp/>1,<sp/>gtol,<sp/>ftol,<sp/>gpt_error,<sp/>fpt_error,<sp/>*Dep::MSSM_spectrum,<sp/>Dep::Z_decay_rates-&gt;width_in_GeV,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP205_SLHA1_convention_xsec_stau1stau2bar(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::LEP205_SLHA1_convention_xsec_stau1stau2bar;</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gtol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>gpt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ftol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;family_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fpt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;family_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lep__mssm__xsecs_8hpp_1a989dc93c7fb84645e72819a5986ab7a5" kindref="member">get_sigma_ee_ll</ref>(result,<sp/>205.0,<sp/>3,<sp/>1,<sp/>2,<sp/>gtol,<sp/>ftol,<sp/>gpt_error,<sp/>fpt_error,<sp/>*Dep::MSSM_spectrum,<sp/>Dep::Z_decay_rates-&gt;width_in_GeV,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP205_SLHA1_convention_xsec_stau2stau2bar(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::LEP205_SLHA1_convention_xsec_stau2stau2bar;</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gtol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>gpt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ftol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;family_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fpt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;family_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lep__mssm__xsecs_8hpp_1a989dc93c7fb84645e72819a5986ab7a5" kindref="member">get_sigma_ee_ll</ref>(result,<sp/>205.0,<sp/>3,<sp/>2,<sp/>2,<sp/>gtol,<sp/>ftol,<sp/>gpt_error,<sp/>fpt_error,<sp/>*Dep::MSSM_spectrum,<sp/>Dep::Z_decay_rates-&gt;width_in_GeV,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP205_SLHA1_convention_xsec_stau2stau1bar(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>*Pipes::LEP205_SLHA1_convention_xsec_stau2stau1bar::Dep::LEP205_xsec_stau1stau2bar;</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP205_SLHA1_convention_xsec_chi00_11(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::LEP205_SLHA1_convention_xsec_chi00_11;</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lep__mssm__xsecs_8hpp_1a4ec008f96435ebe11b78eca1aa2126f0" kindref="member">get_sigma_ee_chi00</ref>(result,<sp/>205.0,<sp/>1,<sp/>1,<sp/>tol,<sp/>pt_error,<sp/>*Dep::MSSM_spectrum,<sp/>Dep::Z_decay_rates-&gt;width_in_GeV);</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP205_SLHA1_convention_xsec_chi00_12(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::LEP205_SLHA1_convention_xsec_chi00_12;</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lep__mssm__xsecs_8hpp_1a4ec008f96435ebe11b78eca1aa2126f0" kindref="member">get_sigma_ee_chi00</ref>(result,<sp/>205.0,<sp/>1,<sp/>2,<sp/>tol,<sp/>pt_error,<sp/>*Dep::MSSM_spectrum,<sp/>Dep::Z_decay_rates-&gt;width_in_GeV);</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP205_SLHA1_convention_xsec_chi00_13(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::LEP205_SLHA1_convention_xsec_chi00_13;</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lep__mssm__xsecs_8hpp_1a4ec008f96435ebe11b78eca1aa2126f0" kindref="member">get_sigma_ee_chi00</ref>(result,<sp/>205.0,<sp/>1,<sp/>3,<sp/>tol,<sp/>pt_error,<sp/>*Dep::MSSM_spectrum,<sp/>Dep::Z_decay_rates-&gt;width_in_GeV);</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP205_SLHA1_convention_xsec_chi00_14(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::LEP205_SLHA1_convention_xsec_chi00_14;</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lep__mssm__xsecs_8hpp_1a4ec008f96435ebe11b78eca1aa2126f0" kindref="member">get_sigma_ee_chi00</ref>(result,<sp/>205.0,<sp/>1,<sp/>4,<sp/>tol,<sp/>pt_error,<sp/>*Dep::MSSM_spectrum,<sp/>Dep::Z_decay_rates-&gt;width_in_GeV);</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP205_SLHA1_convention_xsec_chi00_22(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::LEP205_SLHA1_convention_xsec_chi00_22;</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lep__mssm__xsecs_8hpp_1a4ec008f96435ebe11b78eca1aa2126f0" kindref="member">get_sigma_ee_chi00</ref>(result,<sp/>205.0,<sp/>2,<sp/>2,<sp/>tol,<sp/>pt_error,<sp/>*Dep::MSSM_spectrum,<sp/>Dep::Z_decay_rates-&gt;width_in_GeV);</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP205_SLHA1_convention_xsec_chi00_23(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::LEP205_SLHA1_convention_xsec_chi00_23;</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lep__mssm__xsecs_8hpp_1a4ec008f96435ebe11b78eca1aa2126f0" kindref="member">get_sigma_ee_chi00</ref>(result,<sp/>205.0,<sp/>2,<sp/>3,<sp/>tol,<sp/>pt_error,<sp/>*Dep::MSSM_spectrum,<sp/>Dep::Z_decay_rates-&gt;width_in_GeV);</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP205_SLHA1_convention_xsec_chi00_24(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::LEP205_SLHA1_convention_xsec_chi00_24;</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lep__mssm__xsecs_8hpp_1a4ec008f96435ebe11b78eca1aa2126f0" kindref="member">get_sigma_ee_chi00</ref>(result,<sp/>205.0,<sp/>2,<sp/>4,<sp/>tol,<sp/>pt_error,<sp/>*Dep::MSSM_spectrum,<sp/>Dep::Z_decay_rates-&gt;width_in_GeV);</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP205_SLHA1_convention_xsec_chi00_33(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::LEP205_SLHA1_convention_xsec_chi00_33;</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lep__mssm__xsecs_8hpp_1a4ec008f96435ebe11b78eca1aa2126f0" kindref="member">get_sigma_ee_chi00</ref>(result,<sp/>205.0,<sp/>3,<sp/>3,<sp/>tol,<sp/>pt_error,<sp/>*Dep::MSSM_spectrum,<sp/>Dep::Z_decay_rates-&gt;width_in_GeV);</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP205_SLHA1_convention_xsec_chi00_34(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::LEP205_SLHA1_convention_xsec_chi00_34;</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lep__mssm__xsecs_8hpp_1a4ec008f96435ebe11b78eca1aa2126f0" kindref="member">get_sigma_ee_chi00</ref>(result,<sp/>205.0,<sp/>3,<sp/>4,<sp/>tol,<sp/>pt_error,<sp/>*Dep::MSSM_spectrum,<sp/>Dep::Z_decay_rates-&gt;width_in_GeV);</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP205_SLHA1_convention_xsec_chi00_44(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::LEP205_SLHA1_convention_xsec_chi00_44;</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lep__mssm__xsecs_8hpp_1a4ec008f96435ebe11b78eca1aa2126f0" kindref="member">get_sigma_ee_chi00</ref>(result,<sp/>205.0,<sp/>4,<sp/>4,<sp/>tol,<sp/>pt_error,<sp/>*Dep::MSSM_spectrum,<sp/>Dep::Z_decay_rates-&gt;width_in_GeV);</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="808"><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP205_SLHA1_convention_xsec_chipm_11(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::LEP205_SLHA1_convention_xsec_chipm_11;</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lep__mssm__xsecs_8hpp_1abbf01c906a8961538f1ea4f79d56fcec" kindref="member">get_sigma_ee_chipm</ref>(result,<sp/>205.0,<sp/>1,<sp/>1,<sp/>tol,<sp/>pt_error,<sp/>*Dep::MSSM_spectrum,<sp/>Dep::Z_decay_rates-&gt;width_in_GeV);</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP205_SLHA1_convention_xsec_chipm_12(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::LEP205_SLHA1_convention_xsec_chipm_12;</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lep__mssm__xsecs_8hpp_1abbf01c906a8961538f1ea4f79d56fcec" kindref="member">get_sigma_ee_chipm</ref>(result,<sp/>205.0,<sp/>1,<sp/>2,<sp/>tol,<sp/>pt_error,<sp/>*Dep::MSSM_spectrum,<sp/>Dep::Z_decay_rates-&gt;width_in_GeV);</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP205_SLHA1_convention_xsec_chipm_22(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::LEP205_SLHA1_convention_xsec_chipm_22;</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lep__mssm__xsecs_8hpp_1abbf01c906a8961538f1ea4f79d56fcec" kindref="member">get_sigma_ee_chipm</ref>(result,<sp/>205.0,<sp/>2,<sp/>2,<sp/>tol,<sp/>pt_error,<sp/>*Dep::MSSM_spectrum,<sp/>Dep::Z_decay_rates-&gt;width_in_GeV);</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP205_SLHA1_convention_xsec_chipm_21(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>*Pipes::LEP205_SLHA1_convention_xsec_chipm_21::Dep::LEP205_xsec_chipm_12;</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="845"><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP188_SLHA1_convention_xsec_selselbar(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::LEP188_SLHA1_convention_xsec_selselbar;</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lep__mssm__xsecs_8hpp_1a989dc93c7fb84645e72819a5986ab7a5" kindref="member">get_sigma_ee_ll</ref>(result,<sp/>188.6,<sp/>1,<sp/>1,<sp/>1,<sp/>tol,<sp/>tol,<sp/>pt_error,<sp/>pt_error,<sp/>*Dep::MSSM_spectrum,<sp/>Dep::Z_decay_rates-&gt;width_in_GeV,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP188_SLHA1_convention_xsec_selserbar(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::LEP188_SLHA1_convention_xsec_selserbar;</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lep__mssm__xsecs_8hpp_1a989dc93c7fb84645e72819a5986ab7a5" kindref="member">get_sigma_ee_ll</ref>(result,<sp/>188.6,<sp/>1,<sp/>1,<sp/>2,<sp/>tol,<sp/>tol,<sp/>pt_error,<sp/>pt_error,<sp/>*Dep::MSSM_spectrum,<sp/>Dep::Z_decay_rates-&gt;width_in_GeV,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP188_SLHA1_convention_xsec_serserbar(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::LEP188_SLHA1_convention_xsec_serserbar;</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lep__mssm__xsecs_8hpp_1a989dc93c7fb84645e72819a5986ab7a5" kindref="member">get_sigma_ee_ll</ref>(result,<sp/>188.6,<sp/>1,<sp/>2,<sp/>2,<sp/>tol,<sp/>tol,<sp/>pt_error,<sp/>pt_error,<sp/>*Dep::MSSM_spectrum,<sp/>Dep::Z_decay_rates-&gt;width_in_GeV,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP188_SLHA1_convention_xsec_serselbar(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>*Pipes::LEP188_SLHA1_convention_xsec_serselbar::Dep::LEP188_xsec_selserbar;</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP188_SLHA1_convention_xsec_se1se1bar(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::LEP188_SLHA1_convention_xsec_se1se1bar;</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gtol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>gpt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ftol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;family_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fpt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;family_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lep__mssm__xsecs_8hpp_1a989dc93c7fb84645e72819a5986ab7a5" kindref="member">get_sigma_ee_ll</ref>(result,<sp/>188.6,<sp/>1,<sp/>1,<sp/>1,<sp/>gtol,<sp/>ftol,<sp/>gpt_error,<sp/>fpt_error,<sp/>*Dep::MSSM_spectrum,<sp/>Dep::Z_decay_rates-&gt;width_in_GeV,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP188_SLHA1_convention_xsec_se1se2bar(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::LEP188_SLHA1_convention_xsec_se1se2bar;</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gtol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>gpt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ftol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;family_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fpt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;family_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lep__mssm__xsecs_8hpp_1a989dc93c7fb84645e72819a5986ab7a5" kindref="member">get_sigma_ee_ll</ref>(result,<sp/>188.6,<sp/>1,<sp/>1,<sp/>2,<sp/>gtol,<sp/>ftol,<sp/>gpt_error,<sp/>fpt_error,<sp/>*Dep::MSSM_spectrum,<sp/>Dep::Z_decay_rates-&gt;width_in_GeV,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP188_SLHA1_convention_xsec_se2se2bar(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::LEP188_SLHA1_convention_xsec_se2se2bar;</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gtol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>gpt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ftol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;family_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fpt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;family_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lep__mssm__xsecs_8hpp_1a989dc93c7fb84645e72819a5986ab7a5" kindref="member">get_sigma_ee_ll</ref>(result,<sp/>188.6,<sp/>1,<sp/>2,<sp/>2,<sp/>gtol,<sp/>ftol,<sp/>gpt_error,<sp/>fpt_error,<sp/>*Dep::MSSM_spectrum,<sp/>Dep::Z_decay_rates-&gt;width_in_GeV,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP188_SLHA1_convention_xsec_se2se1bar(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>*Pipes::LEP188_SLHA1_convention_xsec_se2se1bar::Dep::LEP188_xsec_se1se2bar;</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="921"></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP188_SLHA1_convention_xsec_smulsmulbar(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::LEP188_SLHA1_convention_xsec_smulsmulbar;</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lep__mssm__xsecs_8hpp_1a989dc93c7fb84645e72819a5986ab7a5" kindref="member">get_sigma_ee_ll</ref>(result,<sp/>188.6,<sp/>2,<sp/>1,<sp/>1,<sp/>tol,<sp/>tol,<sp/>pt_error,<sp/>pt_error,<sp/>*Dep::MSSM_spectrum,<sp/>Dep::Z_decay_rates-&gt;width_in_GeV,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP188_SLHA1_convention_xsec_smulsmurbar(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::LEP188_SLHA1_convention_xsec_smulsmurbar;</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lep__mssm__xsecs_8hpp_1a989dc93c7fb84645e72819a5986ab7a5" kindref="member">get_sigma_ee_ll</ref>(result,<sp/>188.6,<sp/>2,<sp/>1,<sp/>2,<sp/>tol,<sp/>tol,<sp/>pt_error,<sp/>pt_error,<sp/>*Dep::MSSM_spectrum,<sp/>Dep::Z_decay_rates-&gt;width_in_GeV,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP188_SLHA1_convention_xsec_smursmurbar(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::LEP188_SLHA1_convention_xsec_smursmurbar;</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lep__mssm__xsecs_8hpp_1a989dc93c7fb84645e72819a5986ab7a5" kindref="member">get_sigma_ee_ll</ref>(result,<sp/>188.6,<sp/>2,<sp/>2,<sp/>2,<sp/>tol,<sp/>tol,<sp/>pt_error,<sp/>pt_error,<sp/>*Dep::MSSM_spectrum,<sp/>Dep::Z_decay_rates-&gt;width_in_GeV,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP188_SLHA1_convention_xsec_smursmulbar(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>*Pipes::LEP188_SLHA1_convention_xsec_smursmulbar::Dep::LEP188_xsec_smulsmurbar;</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP188_SLHA1_convention_xsec_smu1smu1bar(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::LEP188_SLHA1_convention_xsec_smu1smu1bar;</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gtol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>gpt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ftol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;family_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fpt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;family_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lep__mssm__xsecs_8hpp_1a989dc93c7fb84645e72819a5986ab7a5" kindref="member">get_sigma_ee_ll</ref>(result,<sp/>188.6,<sp/>2,<sp/>1,<sp/>1,<sp/>gtol,<sp/>ftol,<sp/>gpt_error,<sp/>fpt_error,<sp/>*Dep::MSSM_spectrum,<sp/>Dep::Z_decay_rates-&gt;width_in_GeV,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP188_SLHA1_convention_xsec_smu1smu2bar(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::LEP188_SLHA1_convention_xsec_smu1smu2bar;</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gtol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>gpt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ftol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;family_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fpt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;family_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lep__mssm__xsecs_8hpp_1a989dc93c7fb84645e72819a5986ab7a5" kindref="member">get_sigma_ee_ll</ref>(result,<sp/>188.6,<sp/>2,<sp/>1,<sp/>2,<sp/>gtol,<sp/>ftol,<sp/>gpt_error,<sp/>fpt_error,<sp/>*Dep::MSSM_spectrum,<sp/>Dep::Z_decay_rates-&gt;width_in_GeV,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP188_SLHA1_convention_xsec_smu2smu2bar(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::LEP188_SLHA1_convention_xsec_smu2smu2bar;</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gtol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>gpt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ftol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;family_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fpt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;family_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lep__mssm__xsecs_8hpp_1a989dc93c7fb84645e72819a5986ab7a5" kindref="member">get_sigma_ee_ll</ref>(result,<sp/>188.6,<sp/>2,<sp/>2,<sp/>2,<sp/>gtol,<sp/>ftol,<sp/>gpt_error,<sp/>fpt_error,<sp/>*Dep::MSSM_spectrum,<sp/>Dep::Z_decay_rates-&gt;width_in_GeV,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP188_SLHA1_convention_xsec_smu2smu1bar(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>*Pipes::LEP188_SLHA1_convention_xsec_smu2smu1bar::Dep::LEP188_xsec_smu1smu2bar;</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="997"></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP188_SLHA1_convention_xsec_staulstaulbar(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::LEP188_SLHA1_convention_xsec_staulstaulbar;</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lep__mssm__xsecs_8hpp_1a989dc93c7fb84645e72819a5986ab7a5" kindref="member">get_sigma_ee_ll</ref>(result,<sp/>188.6,<sp/>3,<sp/>1,<sp/>1,<sp/>tol,<sp/>tol,<sp/>pt_error,<sp/>pt_error,<sp/>*Dep::MSSM_spectrum,<sp/>Dep::Z_decay_rates-&gt;width_in_GeV,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP188_SLHA1_convention_xsec_staulstaurbar(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::LEP188_SLHA1_convention_xsec_staulstaurbar;</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lep__mssm__xsecs_8hpp_1a989dc93c7fb84645e72819a5986ab7a5" kindref="member">get_sigma_ee_ll</ref>(result,<sp/>188.6,<sp/>3,<sp/>1,<sp/>2,<sp/>tol,<sp/>tol,<sp/>pt_error,<sp/>pt_error,<sp/>*Dep::MSSM_spectrum,<sp/>Dep::Z_decay_rates-&gt;width_in_GeV,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP188_SLHA1_convention_xsec_staurstaurbar(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::LEP188_SLHA1_convention_xsec_staurstaurbar;</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lep__mssm__xsecs_8hpp_1a989dc93c7fb84645e72819a5986ab7a5" kindref="member">get_sigma_ee_ll</ref>(result,<sp/>188.6,<sp/>3,<sp/>2,<sp/>2,<sp/>tol,<sp/>tol,<sp/>pt_error,<sp/>pt_error,<sp/>*Dep::MSSM_spectrum,<sp/>Dep::Z_decay_rates-&gt;width_in_GeV,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP188_SLHA1_convention_xsec_staurstaulbar(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>*Pipes::LEP188_SLHA1_convention_xsec_staurstaulbar::Dep::LEP188_xsec_staulstaurbar;</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP188_SLHA1_convention_xsec_stau1stau1bar(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::LEP188_SLHA1_convention_xsec_stau1stau1bar;</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gtol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>gpt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ftol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;family_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fpt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;family_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lep__mssm__xsecs_8hpp_1a989dc93c7fb84645e72819a5986ab7a5" kindref="member">get_sigma_ee_ll</ref>(result,<sp/>188.6,<sp/>3,<sp/>1,<sp/>1,<sp/>gtol,<sp/>ftol,<sp/>gpt_error,<sp/>fpt_error,<sp/>*Dep::MSSM_spectrum,<sp/>Dep::Z_decay_rates-&gt;width_in_GeV,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP188_SLHA1_convention_xsec_stau1stau2bar(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::LEP188_SLHA1_convention_xsec_stau1stau2bar;</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gtol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>gpt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ftol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;family_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fpt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;family_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lep__mssm__xsecs_8hpp_1a989dc93c7fb84645e72819a5986ab7a5" kindref="member">get_sigma_ee_ll</ref>(result,<sp/>188.6,<sp/>3,<sp/>1,<sp/>2,<sp/>gtol,<sp/>ftol,<sp/>gpt_error,<sp/>fpt_error,<sp/>*Dep::MSSM_spectrum,<sp/>Dep::Z_decay_rates-&gt;width_in_GeV,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP188_SLHA1_convention_xsec_stau2stau2bar(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::LEP188_SLHA1_convention_xsec_stau2stau2bar;</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gtol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>gpt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ftol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;family_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fpt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;family_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lep__mssm__xsecs_8hpp_1a989dc93c7fb84645e72819a5986ab7a5" kindref="member">get_sigma_ee_ll</ref>(result,<sp/>188.6,<sp/>3,<sp/>2,<sp/>2,<sp/>gtol,<sp/>ftol,<sp/>gpt_error,<sp/>fpt_error,<sp/>*Dep::MSSM_spectrum,<sp/>Dep::Z_decay_rates-&gt;width_in_GeV,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP188_SLHA1_convention_xsec_stau2stau1bar(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>*Pipes::LEP188_SLHA1_convention_xsec_stau2stau1bar::Dep::LEP188_xsec_stau1stau2bar;</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"></highlight></codeline>
<codeline lineno="1074"><highlight class="normal"></highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP188_SLHA1_convention_xsec_chi00_11(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::LEP188_SLHA1_convention_xsec_chi00_11;</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lep__mssm__xsecs_8hpp_1a4ec008f96435ebe11b78eca1aa2126f0" kindref="member">get_sigma_ee_chi00</ref>(result,<sp/>188.6,<sp/>1,<sp/>1,<sp/>tol,<sp/>pt_error,<sp/>*Dep::MSSM_spectrum,<sp/>Dep::Z_decay_rates-&gt;width_in_GeV);</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP188_SLHA1_convention_xsec_chi00_12(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::LEP188_SLHA1_convention_xsec_chi00_12;</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lep__mssm__xsecs_8hpp_1a4ec008f96435ebe11b78eca1aa2126f0" kindref="member">get_sigma_ee_chi00</ref>(result,<sp/>188.6,<sp/>1,<sp/>2,<sp/>tol,<sp/>pt_error,<sp/>*Dep::MSSM_spectrum,<sp/>Dep::Z_decay_rates-&gt;width_in_GeV);</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP188_SLHA1_convention_xsec_chi00_13(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::LEP188_SLHA1_convention_xsec_chi00_13;</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lep__mssm__xsecs_8hpp_1a4ec008f96435ebe11b78eca1aa2126f0" kindref="member">get_sigma_ee_chi00</ref>(result,<sp/>188.6,<sp/>1,<sp/>3,<sp/>tol,<sp/>pt_error,<sp/>*Dep::MSSM_spectrum,<sp/>Dep::Z_decay_rates-&gt;width_in_GeV);</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP188_SLHA1_convention_xsec_chi00_14(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::LEP188_SLHA1_convention_xsec_chi00_14;</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lep__mssm__xsecs_8hpp_1a4ec008f96435ebe11b78eca1aa2126f0" kindref="member">get_sigma_ee_chi00</ref>(result,<sp/>188.6,<sp/>1,<sp/>4,<sp/>tol,<sp/>pt_error,<sp/>*Dep::MSSM_spectrum,<sp/>Dep::Z_decay_rates-&gt;width_in_GeV);</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP188_SLHA1_convention_xsec_chi00_22(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::LEP188_SLHA1_convention_xsec_chi00_22;</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lep__mssm__xsecs_8hpp_1a4ec008f96435ebe11b78eca1aa2126f0" kindref="member">get_sigma_ee_chi00</ref>(result,<sp/>188.6,<sp/>2,<sp/>2,<sp/>tol,<sp/>pt_error,<sp/>*Dep::MSSM_spectrum,<sp/>Dep::Z_decay_rates-&gt;width_in_GeV);</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP188_SLHA1_convention_xsec_chi00_23(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::LEP188_SLHA1_convention_xsec_chi00_23;</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lep__mssm__xsecs_8hpp_1a4ec008f96435ebe11b78eca1aa2126f0" kindref="member">get_sigma_ee_chi00</ref>(result,<sp/>188.6,<sp/>2,<sp/>3,<sp/>tol,<sp/>pt_error,<sp/>*Dep::MSSM_spectrum,<sp/>Dep::Z_decay_rates-&gt;width_in_GeV);</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP188_SLHA1_convention_xsec_chi00_24(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::LEP188_SLHA1_convention_xsec_chi00_24;</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lep__mssm__xsecs_8hpp_1a4ec008f96435ebe11b78eca1aa2126f0" kindref="member">get_sigma_ee_chi00</ref>(result,<sp/>188.6,<sp/>2,<sp/>4,<sp/>tol,<sp/>pt_error,<sp/>*Dep::MSSM_spectrum,<sp/>Dep::Z_decay_rates-&gt;width_in_GeV);</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP188_SLHA1_convention_xsec_chi00_33(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::LEP188_SLHA1_convention_xsec_chi00_33;</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lep__mssm__xsecs_8hpp_1a4ec008f96435ebe11b78eca1aa2126f0" kindref="member">get_sigma_ee_chi00</ref>(result,<sp/>188.6,<sp/>3,<sp/>3,<sp/>tol,<sp/>pt_error,<sp/>*Dep::MSSM_spectrum,<sp/>Dep::Z_decay_rates-&gt;width_in_GeV);</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP188_SLHA1_convention_xsec_chi00_34(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::LEP188_SLHA1_convention_xsec_chi00_34;</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lep__mssm__xsecs_8hpp_1a4ec008f96435ebe11b78eca1aa2126f0" kindref="member">get_sigma_ee_chi00</ref>(result,<sp/>188.6,<sp/>3,<sp/>4,<sp/>tol,<sp/>pt_error,<sp/>*Dep::MSSM_spectrum,<sp/>Dep::Z_decay_rates-&gt;width_in_GeV);</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP188_SLHA1_convention_xsec_chi00_44(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::LEP188_SLHA1_convention_xsec_chi00_44;</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lep__mssm__xsecs_8hpp_1a4ec008f96435ebe11b78eca1aa2126f0" kindref="member">get_sigma_ee_chi00</ref>(result,<sp/>188.6,<sp/>4,<sp/>4,<sp/>tol,<sp/>pt_error,<sp/>*Dep::MSSM_spectrum,<sp/>Dep::Z_decay_rates-&gt;width_in_GeV);</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"></highlight></codeline>
<codeline lineno="1169"><highlight class="normal"></highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP188_SLHA1_convention_xsec_chipm_11(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::LEP188_SLHA1_convention_xsec_chipm_11;</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lep__mssm__xsecs_8hpp_1abbf01c906a8961538f1ea4f79d56fcec" kindref="member">get_sigma_ee_chipm</ref>(result,<sp/>188.6,<sp/>1,<sp/>1,<sp/>tol,<sp/>pt_error,<sp/>*Dep::MSSM_spectrum,<sp/>Dep::Z_decay_rates-&gt;width_in_GeV);</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP188_SLHA1_convention_xsec_chipm_12(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::LEP188_SLHA1_convention_xsec_chipm_12;</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lep__mssm__xsecs_8hpp_1abbf01c906a8961538f1ea4f79d56fcec" kindref="member">get_sigma_ee_chipm</ref>(result,<sp/>188.6,<sp/>1,<sp/>2,<sp/>tol,<sp/>pt_error,<sp/>*Dep::MSSM_spectrum,<sp/>Dep::Z_decay_rates-&gt;width_in_GeV);</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP188_SLHA1_convention_xsec_chipm_22(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::LEP188_SLHA1_convention_xsec_chipm_22;</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lep__mssm__xsecs_8hpp_1abbf01c906a8961538f1ea4f79d56fcec" kindref="member">get_sigma_ee_chipm</ref>(result,<sp/>188.6,<sp/>2,<sp/>2,<sp/>tol,<sp/>pt_error,<sp/>*Dep::MSSM_spectrum,<sp/>Dep::Z_decay_rates-&gt;width_in_GeV);</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LEP188_SLHA1_convention_xsec_chipm_21(triplet&lt;double&gt;&amp;<sp/>result)</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>*Pipes::LEP188_SLHA1_convention_xsec_chipm_21::Dep::LEP188_xsec_chipm_12;</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ColliderBit__LEP_8cpp_1ac7f44c0dc65eacab6d5cb8bacc7fbab4" kindref="member">is_xsec_sane</ref>(result))</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColliderBit_error().raise(LOCAL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;Non-physical<sp/>LEP<sp/>cross<sp/>section!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"></highlight></codeline>
<codeline lineno="1207"><highlight class="normal"></highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ALEPH_Selectron_Conservative_LLike(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>result)</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::ALEPH_Selectron_Conservative_LLike;</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">std::pow;</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">std::log;</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"></highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Spectrum&amp;<sp/>spec<sp/>=<sp/>*Dep::MSSM_spectrum;</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"></highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>max_mixing;</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SubSpectrum&amp;<sp/>mssm<sp/>=<sp/>spec.get_HE();</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>sel_string<sp/>=<sp/>slhahelp::mass_es_from_gauge_es(</highlight><highlight class="stringliteral">&quot;~e_L&quot;</highlight><highlight class="normal">,<sp/>max_mixing,<sp/>mssm);</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>ser_string<sp/>=<sp/>slhahelp::mass_es_from_gauge_es(</highlight><highlight class="stringliteral">&quot;~e_R&quot;</highlight><highlight class="normal">,<sp/>max_mixing,<sp/>mssm);</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mass_seL=spec.get(Par::Pole_Mass,sel_string);</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mass_neut1<sp/>=<sp/>spec.get(Par::Pole_Mass,1000022,<sp/>0);</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mass_seR<sp/>=<sp/>spec.get(Par::Pole_Mass,ser_string);</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mZ<sp/>=<sp/>spec.get(Par::Pole_Mass,23,<sp/>0);</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>triplet&lt;double&gt;<sp/>xsecWithError;</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xsecLimit;</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"></highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ALEPHSelectronLimitAt208GeV<sp/>limitContainer;</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>#ifdef<sp/>COLLIDERBIT_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//static<sp/>bool<sp/>dumped=false;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if(!dumped)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>limitContainer.dumpPlotData(45.,<sp/>115.,<sp/>0.,<sp/>100.,<sp/>mZ,<sp/>&quot;lepLimitPlanev2/ALEPHSelectronLimitAt208GeV.dump&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>dumped=true;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1238"><highlight class="normal"></highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Due<sp/>to<sp/>the<sp/>nature<sp/>of<sp/>the<sp/>analysis<sp/>details<sp/>of<sp/>the<sp/>model<sp/>independent<sp/>limit<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>paper,<sp/>the<sp/>best<sp/>we<sp/>can<sp/>do<sp/>is<sp/>to<sp/>try<sp/>these<sp/>two<sp/>processes<sp/>individually:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1242"><highlight class="normal"></highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>se_L,<sp/>se_L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecLimit<sp/>=<sp/>limitContainer.limitAverage(mass_seL,<sp/>mass_neut1,<sp/>mZ);</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError<sp/>=<sp/>*Dep::LEP208_xsec_selselbar;</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.upper<sp/>*=<sp/>pow(Dep::selectron_l_decay_rates-&gt;BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;e-&quot;</highlight><highlight class="normal">),<sp/>2);</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.central<sp/>*=<sp/>pow(Dep::selectron_l_decay_rates-&gt;BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;e-&quot;</highlight><highlight class="normal">),<sp/>2);</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.lower<sp/>*=<sp/>pow(Dep::selectron_l_decay_rates-&gt;BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;e-&quot;</highlight><highlight class="normal">),<sp/>2);</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"></highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xsecWithError.central<sp/>&lt;<sp/>xsecLimit)</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/><ref refid="ColliderBit__LEP_8cpp_1abd1ca4d53792828f13dce08349673b03" kindref="member">limit_LLike</ref>(xsecWithError.central,<sp/>xsecLimit,<sp/>xsecWithError.upper<sp/>-<sp/>xsecWithError.central);</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/><ref refid="ColliderBit__LEP_8cpp_1abd1ca4d53792828f13dce08349673b03" kindref="member">limit_LLike</ref>(xsecWithError.central,<sp/>xsecLimit,<sp/>xsecWithError.central<sp/>-<sp/>xsecWithError.lower);</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"></highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>se_R,<sp/>se_R</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecLimit<sp/>=<sp/>limitContainer.limitAverage(mass_seR,<sp/>mass_neut1,<sp/>mZ);</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"></highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError<sp/>=<sp/>*Dep::LEP208_xsec_serserbar;</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.upper<sp/>*=<sp/>pow(Dep::selectron_r_decay_rates-&gt;BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;e-&quot;</highlight><highlight class="normal">),<sp/>2);</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.central<sp/>*=<sp/>pow(Dep::selectron_r_decay_rates-&gt;BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;e-&quot;</highlight><highlight class="normal">),<sp/>2);</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.lower<sp/>*=<sp/>pow(Dep::selectron_r_decay_rates-&gt;BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;e-&quot;</highlight><highlight class="normal">),<sp/>2);</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"></highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xsecWithError.central<sp/>&lt;<sp/>xsecLimit)</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/><ref refid="ColliderBit__LEP_8cpp_1abd1ca4d53792828f13dce08349673b03" kindref="member">limit_LLike</ref>(xsecWithError.central,<sp/>xsecLimit,<sp/>xsecWithError.upper<sp/>-<sp/>xsecWithError.central);</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/><ref refid="ColliderBit__LEP_8cpp_1abd1ca4d53792828f13dce08349673b03" kindref="member">limit_LLike</ref>(xsecWithError.central,<sp/>xsecLimit,<sp/>xsecWithError.central<sp/>-<sp/>xsecWithError.lower);</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"></highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"></highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ALEPH_Smuon_Conservative_LLike(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>result)</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::ALEPH_Smuon_Conservative_LLike;</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">std::pow;</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">std::log;</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"></highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Spectrum&amp;<sp/>spec<sp/>=<sp/>*Dep::MSSM_spectrum;</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"></highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>max_mixing;</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SubSpectrum&amp;<sp/>mssm<sp/>=<sp/>spec.get_HE();</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>smul_string<sp/>=<sp/>slhahelp::mass_es_from_gauge_es(</highlight><highlight class="stringliteral">&quot;~mu_L&quot;</highlight><highlight class="normal">,<sp/>max_mixing,<sp/>mssm);</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>smur_string<sp/>=<sp/>slhahelp::mass_es_from_gauge_es(</highlight><highlight class="stringliteral">&quot;~mu_R&quot;</highlight><highlight class="normal">,<sp/>max_mixing,<sp/>mssm);</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mass_smuL=spec.get(Par::Pole_Mass,smul_string);</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mass_neut1<sp/>=<sp/>spec.get(Par::Pole_Mass,1000022,<sp/>0);</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mass_smuR<sp/>=<sp/>spec.get(Par::Pole_Mass,smur_string);</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mZ<sp/>=<sp/>spec.get(Par::Pole_Mass,23,<sp/>0);</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>triplet&lt;double&gt;<sp/>xsecWithError;</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xsecLimit;</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"></highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ALEPHSmuonLimitAt208GeV<sp/>limitContainer;</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>#ifdef<sp/>COLLIDERBIT_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>static<sp/>bool<sp/>dumped=false;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>if(!dumped)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>limitContainer.dumpPlotData(45.,<sp/>115.,<sp/>0.,<sp/>100.,<sp/>mZ,<sp/>&quot;lepLimitPlanev2/ALEPHSmuonLimitAt208GeV.dump&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>dumped=true;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1306"><highlight class="normal"></highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Due<sp/>to<sp/>the<sp/>nature<sp/>of<sp/>the<sp/>analysis<sp/>details<sp/>of<sp/>the<sp/>model<sp/>independent<sp/>limit<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>paper,<sp/>the<sp/>best<sp/>we<sp/>can<sp/>do<sp/>is<sp/>to<sp/>try<sp/>these<sp/>two<sp/>processes<sp/>individually:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1310"><highlight class="normal"></highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>smu_L,<sp/>smu_L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecLimit<sp/>=<sp/>limitContainer.limitAverage(mass_smuL,<sp/>mass_neut1,<sp/>mZ);</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError<sp/>=<sp/>*Dep::LEP208_xsec_smulsmulbar;</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.upper<sp/>*=<sp/>pow(Dep::smuon_l_decay_rates-&gt;BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mu-&quot;</highlight><highlight class="normal">),<sp/>2);</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.central<sp/>*=<sp/>pow(Dep::smuon_l_decay_rates-&gt;BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mu-&quot;</highlight><highlight class="normal">),<sp/>2);</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.lower<sp/>*=<sp/>pow(Dep::smuon_l_decay_rates-&gt;BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mu-&quot;</highlight><highlight class="normal">),<sp/>2);</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"></highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xsecWithError.central<sp/>&lt;<sp/>xsecLimit)</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/><ref refid="ColliderBit__LEP_8cpp_1abd1ca4d53792828f13dce08349673b03" kindref="member">limit_LLike</ref>(xsecWithError.central,<sp/>xsecLimit,<sp/>xsecWithError.upper<sp/>-<sp/>xsecWithError.central);</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/><ref refid="ColliderBit__LEP_8cpp_1abd1ca4d53792828f13dce08349673b03" kindref="member">limit_LLike</ref>(xsecWithError.central,<sp/>xsecLimit,<sp/>xsecWithError.central<sp/>-<sp/>xsecWithError.lower);</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"></highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>smu_R,<sp/>smu_R</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecLimit<sp/>=<sp/>limitContainer.limitAverage(mass_smuR,<sp/>mass_neut1,<sp/>mZ);</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"></highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError<sp/>=<sp/>*Dep::LEP208_xsec_smursmurbar;</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.upper<sp/>*=<sp/>pow(Dep::smuon_r_decay_rates-&gt;BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mu-&quot;</highlight><highlight class="normal">),<sp/>2);</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.central<sp/>*=<sp/>pow(Dep::smuon_r_decay_rates-&gt;BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mu-&quot;</highlight><highlight class="normal">),<sp/>2);</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.lower<sp/>*=<sp/>pow(Dep::smuon_r_decay_rates-&gt;BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mu-&quot;</highlight><highlight class="normal">),<sp/>2);</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"></highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xsecWithError.central<sp/>&lt;<sp/>xsecLimit)</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/><ref refid="ColliderBit__LEP_8cpp_1abd1ca4d53792828f13dce08349673b03" kindref="member">limit_LLike</ref>(xsecWithError.central,<sp/>xsecLimit,<sp/>xsecWithError.upper<sp/>-<sp/>xsecWithError.central);</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/><ref refid="ColliderBit__LEP_8cpp_1abd1ca4d53792828f13dce08349673b03" kindref="member">limit_LLike</ref>(xsecWithError.central,<sp/>xsecLimit,<sp/>xsecWithError.central<sp/>-<sp/>xsecWithError.lower);</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"></highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"></highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ALEPH_Stau_Conservative_LLike(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>result)</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::ALEPH_Stau_Conservative_LLike;</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">std::pow;</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">std::log;</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"></highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Spectrum&amp;<sp/>spec<sp/>=<sp/>*Dep::MSSM_spectrum;</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"></highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SubSpectrum&amp;<sp/>mssm<sp/>=<sp/>spec.get_HE();</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-5,<sp/></highlight><highlight class="stringliteral">&quot;family_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pterror<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;family_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>stau1_string<sp/>=<sp/>slhahelp::mass_es_closest_to_family(</highlight><highlight class="stringliteral">&quot;~tau_1&quot;</highlight><highlight class="normal">,<sp/>mssm,tol,LOCAL_INFO,pterror);</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>stau2_string<sp/>=<sp/>slhahelp::mass_es_closest_to_family(</highlight><highlight class="stringliteral">&quot;~tau_2&quot;</highlight><highlight class="normal">,<sp/>mssm,tol,LOCAL_INFO,pterror);</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mass_stau1=spec.get(Par::Pole_Mass,stau1_string);</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mass_neut1<sp/>=<sp/>spec.get(Par::Pole_Mass,1000022,<sp/>0);</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mass_stau2<sp/>=<sp/>spec.get(Par::Pole_Mass,stau2_string);</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mZ<sp/>=<sp/>spec.get(Par::Pole_Mass,23,<sp/>0);</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>triplet&lt;double&gt;<sp/>xsecWithError;</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xsecLimit;</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"></highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ALEPHStauLimitAt208GeV<sp/>limitContainer;</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>#ifdef<sp/>COLLIDERBIT_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>static<sp/>bool<sp/>dumped=false;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>if(!dumped)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>limitContainer.dumpPlotData(45.,<sp/>115.,<sp/>0.,<sp/>100.,<sp/>mZ,<sp/>&quot;lepLimitPlanev2/ALEPHStauLimitAt208GeV.dump&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>dumped=true;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1375"><highlight class="normal"></highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Due<sp/>to<sp/>the<sp/>nature<sp/>of<sp/>the<sp/>analysis<sp/>details<sp/>of<sp/>the<sp/>model<sp/>independent<sp/>limit<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>paper,<sp/>the<sp/>best<sp/>we<sp/>can<sp/>do<sp/>is<sp/>to<sp/>try<sp/>these<sp/>two<sp/>processes<sp/>individually:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1379"><highlight class="normal"></highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>stau_1,<sp/>stau_1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecLimit<sp/>=<sp/>limitContainer.limitAverage(mass_stau1,<sp/>mass_neut1,<sp/>mZ);</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"></highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError<sp/>=<sp/>*Dep::LEP208_xsec_stau1stau1bar;</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.upper<sp/>*=<sp/>pow(Dep::stau_1_decay_rates-&gt;BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;tau-&quot;</highlight><highlight class="normal">),<sp/>2);</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.central<sp/>*=<sp/>pow(Dep::stau_1_decay_rates-&gt;BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;tau-&quot;</highlight><highlight class="normal">),<sp/>2);</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.lower<sp/>*=<sp/>pow(Dep::stau_1_decay_rates-&gt;BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;tau-&quot;</highlight><highlight class="normal">),<sp/>2);</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"></highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xsecWithError.central<sp/>&lt;<sp/>xsecLimit)</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/><ref refid="ColliderBit__LEP_8cpp_1abd1ca4d53792828f13dce08349673b03" kindref="member">limit_LLike</ref>(xsecWithError.central,<sp/>xsecLimit,<sp/>xsecWithError.upper<sp/>-<sp/>xsecWithError.central);</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/><ref refid="ColliderBit__LEP_8cpp_1abd1ca4d53792828f13dce08349673b03" kindref="member">limit_LLike</ref>(xsecWithError.central,<sp/>xsecLimit,<sp/>xsecWithError.central<sp/>-<sp/>xsecWithError.lower);</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"></highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>stau_2,<sp/>stau_2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecLimit<sp/>=<sp/>limitContainer.limitAverage(mass_stau2,<sp/>mass_neut1,<sp/>mZ);</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"></highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError<sp/>=<sp/>*Dep::LEP208_xsec_stau2stau2bar;</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.upper<sp/>*=<sp/>pow(Dep::stau_2_decay_rates-&gt;BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;tau-&quot;</highlight><highlight class="normal">),<sp/>2);</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.central<sp/>*=<sp/>pow(Dep::stau_2_decay_rates-&gt;BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;tau-&quot;</highlight><highlight class="normal">),<sp/>2);</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.lower<sp/>*=<sp/>pow(Dep::stau_2_decay_rates-&gt;BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;tau-&quot;</highlight><highlight class="normal">),<sp/>2);</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"></highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xsecWithError.central<sp/>&lt;<sp/>xsecLimit)</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/><ref refid="ColliderBit__LEP_8cpp_1abd1ca4d53792828f13dce08349673b03" kindref="member">limit_LLike</ref>(xsecWithError.central,<sp/>xsecLimit,<sp/>xsecWithError.upper<sp/>-<sp/>xsecWithError.central);</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/><ref refid="ColliderBit__LEP_8cpp_1abd1ca4d53792828f13dce08349673b03" kindref="member">limit_LLike</ref>(xsecWithError.central,<sp/>xsecLimit,<sp/>xsecWithError.central<sp/>-<sp/>xsecWithError.lower);</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"></highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"></highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>L3_Selectron_Conservative_LLike(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>result)</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::L3_Selectron_Conservative_LLike;</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">std::pow;</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">std::log;</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"></highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Spectrum&amp;<sp/>spec<sp/>=<sp/>*Dep::MSSM_spectrum;</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"></highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>max_mixing;</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SubSpectrum&amp;<sp/>mssm<sp/>=<sp/>spec.get_HE();</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>sel_string<sp/>=<sp/>slhahelp::mass_es_from_gauge_es(</highlight><highlight class="stringliteral">&quot;~e_L&quot;</highlight><highlight class="normal">,<sp/>max_mixing,<sp/>mssm);</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>ser_string<sp/>=<sp/>slhahelp::mass_es_from_gauge_es(</highlight><highlight class="stringliteral">&quot;~e_R&quot;</highlight><highlight class="normal">,<sp/>max_mixing,<sp/>mssm);</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mass_seL=spec.get(Par::Pole_Mass,sel_string);</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mass_neut1<sp/>=<sp/>spec.get(Par::Pole_Mass,1000022,<sp/>0);</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mass_seR<sp/>=<sp/>spec.get(Par::Pole_Mass,ser_string);</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mZ<sp/>=<sp/>spec.get(Par::Pole_Mass,23,<sp/>0);</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>triplet&lt;double&gt;<sp/>xsecWithError;</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xsecLimit;</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"></highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>L3SelectronLimitAt205GeV<sp/>limitContainer;</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>#ifdef<sp/>COLLIDERBIT_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>dumped=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!dumped)</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>limitContainer.dumpPlotData(45.,<sp/>104.,<sp/>0.,<sp/>100.,<sp/>mZ,<sp/></highlight><highlight class="stringliteral">&quot;lepLimitPlanev2/L3SelectronLimitAt205GeV.dump&quot;</highlight><highlight class="normal">,200);</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dumped=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1444"><highlight class="normal"></highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Due<sp/>to<sp/>the<sp/>nature<sp/>of<sp/>the<sp/>analysis<sp/>details<sp/>of<sp/>the<sp/>model<sp/>independent<sp/>limit<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>paper,<sp/>the<sp/>best<sp/>we<sp/>can<sp/>do<sp/>is<sp/>to<sp/>try<sp/>these<sp/>two<sp/>processes<sp/>individually:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1448"><highlight class="normal"></highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>se_L,<sp/>se_L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecLimit<sp/>=<sp/>limitContainer.limitAverage(mass_seL,<sp/>mass_neut1,<sp/>mZ);</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"></highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError<sp/>=<sp/>*Dep::LEP205_xsec_selselbar;</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.upper<sp/>*=<sp/>pow(Dep::selectron_l_decay_rates-&gt;BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;e-&quot;</highlight><highlight class="normal">),<sp/>2);</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.central<sp/>*=<sp/>pow(Dep::selectron_l_decay_rates-&gt;BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;e-&quot;</highlight><highlight class="normal">),<sp/>2);</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.lower<sp/>*=<sp/>pow(Dep::selectron_l_decay_rates-&gt;BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;e-&quot;</highlight><highlight class="normal">),<sp/>2);</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"></highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xsecWithError.central<sp/>&lt;<sp/>xsecLimit)</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/><ref refid="ColliderBit__LEP_8cpp_1abd1ca4d53792828f13dce08349673b03" kindref="member">limit_LLike</ref>(xsecWithError.central,<sp/>xsecLimit,<sp/>xsecWithError.upper<sp/>-<sp/>xsecWithError.central);</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/><ref refid="ColliderBit__LEP_8cpp_1abd1ca4d53792828f13dce08349673b03" kindref="member">limit_LLike</ref>(xsecWithError.central,<sp/>xsecLimit,<sp/>xsecWithError.central<sp/>-<sp/>xsecWithError.lower);</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"></highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>se_R,<sp/>se_R</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecLimit<sp/>=<sp/>limitContainer.limitAverage(mass_seR,<sp/>mass_neut1,<sp/>mZ);</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"></highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError<sp/>=<sp/>*Dep::LEP205_xsec_serserbar;</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.upper<sp/>*=<sp/>pow(Dep::selectron_r_decay_rates-&gt;BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;e-&quot;</highlight><highlight class="normal">),<sp/>2);</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.central<sp/>*=<sp/>pow(Dep::selectron_r_decay_rates-&gt;BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;e-&quot;</highlight><highlight class="normal">),<sp/>2);</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.lower<sp/>*=<sp/>pow(Dep::selectron_r_decay_rates-&gt;BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;e-&quot;</highlight><highlight class="normal">),<sp/>2);</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"></highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xsecWithError.central<sp/>&lt;<sp/>xsecLimit)</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/><ref refid="ColliderBit__LEP_8cpp_1abd1ca4d53792828f13dce08349673b03" kindref="member">limit_LLike</ref>(xsecWithError.central,<sp/>xsecLimit,<sp/>xsecWithError.upper<sp/>-<sp/>xsecWithError.central);</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/><ref refid="ColliderBit__LEP_8cpp_1abd1ca4d53792828f13dce08349673b03" kindref="member">limit_LLike</ref>(xsecWithError.central,<sp/>xsecLimit,<sp/>xsecWithError.central<sp/>-<sp/>xsecWithError.lower);</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"></highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"></highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>L3_Smuon_Conservative_LLike(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>result)</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::L3_Smuon_Conservative_LLike;</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">std::pow;</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">std::log;</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"></highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Spectrum&amp;<sp/>spec<sp/>=<sp/>*Dep::MSSM_spectrum;</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"></highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>max_mixing;</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SubSpectrum&amp;<sp/>mssm<sp/>=<sp/>spec.get_HE();</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>smul_string<sp/>=<sp/>slhahelp::mass_es_from_gauge_es(</highlight><highlight class="stringliteral">&quot;~mu_L&quot;</highlight><highlight class="normal">,<sp/>max_mixing,<sp/>mssm);</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>smur_string<sp/>=<sp/>slhahelp::mass_es_from_gauge_es(</highlight><highlight class="stringliteral">&quot;~mu_R&quot;</highlight><highlight class="normal">,<sp/>max_mixing,<sp/>mssm);</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mass_smuL=spec.get(Par::Pole_Mass,smul_string);</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mass_neut1<sp/>=<sp/>spec.get(Par::Pole_Mass,1000022,<sp/>0);</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mass_smuR<sp/>=<sp/>spec.get(Par::Pole_Mass,smur_string);</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mZ<sp/>=<sp/>spec.get(Par::Pole_Mass,23,<sp/>0);</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>triplet&lt;double&gt;<sp/>xsecWithError;</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xsecLimit;</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"></highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>L3SmuonLimitAt205GeV<sp/>limitContainer;</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>#ifdef<sp/>COLLIDERBIT_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>static<sp/>bool<sp/>dumped=false;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if(!dumped)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>limitContainer.dumpPlotData(45.,<sp/>115.,<sp/>0.,<sp/>100.,<sp/>mZ,<sp/>&quot;lepLimitPlanev2/L3SmuonLimitAt205GeV.dump&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>dumped=true;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1513"><highlight class="normal"></highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Due<sp/>to<sp/>the<sp/>nature<sp/>of<sp/>the<sp/>analysis<sp/>details<sp/>of<sp/>the<sp/>model<sp/>independent<sp/>limit<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>paper,<sp/>the<sp/>best<sp/>we<sp/>can<sp/>do<sp/>is<sp/>to<sp/>try<sp/>these<sp/>two<sp/>processes<sp/>individually:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1517"><highlight class="normal"></highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>smu_L,<sp/>smu_L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecLimit<sp/>=<sp/>limitContainer.limitAverage(mass_smuL,<sp/>mass_neut1,<sp/>mZ);</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"></highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError<sp/>=<sp/>*Dep::LEP205_xsec_smulsmulbar;</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.upper<sp/>*=<sp/>pow(Dep::smuon_l_decay_rates-&gt;BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mu-&quot;</highlight><highlight class="normal">),<sp/>2);</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.central<sp/>*=<sp/>pow(Dep::smuon_l_decay_rates-&gt;BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mu-&quot;</highlight><highlight class="normal">),<sp/>2);</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.lower<sp/>*=<sp/>pow(Dep::smuon_l_decay_rates-&gt;BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mu-&quot;</highlight><highlight class="normal">),<sp/>2);</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"></highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xsecWithError.central<sp/>&lt;<sp/>xsecLimit)</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/><ref refid="ColliderBit__LEP_8cpp_1abd1ca4d53792828f13dce08349673b03" kindref="member">limit_LLike</ref>(xsecWithError.central,<sp/>xsecLimit,<sp/>xsecWithError.upper<sp/>-<sp/>xsecWithError.central);</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/><ref refid="ColliderBit__LEP_8cpp_1abd1ca4d53792828f13dce08349673b03" kindref="member">limit_LLike</ref>(xsecWithError.central,<sp/>xsecLimit,<sp/>xsecWithError.central<sp/>-<sp/>xsecWithError.lower);</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"></highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>smu_R,<sp/>smu_R</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecLimit<sp/>=<sp/>limitContainer.limitAverage(mass_smuR,<sp/>mass_neut1,<sp/>mZ);</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"></highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError<sp/>=<sp/>*Dep::LEP205_xsec_smursmurbar;</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.upper<sp/>*=<sp/>pow(Dep::smuon_r_decay_rates-&gt;BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mu-&quot;</highlight><highlight class="normal">),<sp/>2);</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.central<sp/>*=<sp/>pow(Dep::smuon_r_decay_rates-&gt;BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mu-&quot;</highlight><highlight class="normal">),<sp/>2);</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.lower<sp/>*=<sp/>pow(Dep::smuon_r_decay_rates-&gt;BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mu-&quot;</highlight><highlight class="normal">),<sp/>2);</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"></highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xsecWithError.central<sp/>&lt;<sp/>xsecLimit)</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/><ref refid="ColliderBit__LEP_8cpp_1abd1ca4d53792828f13dce08349673b03" kindref="member">limit_LLike</ref>(xsecWithError.central,<sp/>xsecLimit,<sp/>xsecWithError.upper<sp/>-<sp/>xsecWithError.central);</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/><ref refid="ColliderBit__LEP_8cpp_1abd1ca4d53792828f13dce08349673b03" kindref="member">limit_LLike</ref>(xsecWithError.central,<sp/>xsecLimit,<sp/>xsecWithError.central<sp/>-<sp/>xsecWithError.lower);</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"></highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"></highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>L3_Stau_Conservative_LLike(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>result)</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::L3_Stau_Conservative_LLike;</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">std::pow;</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">std::log;</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"></highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Spectrum&amp;<sp/>spec<sp/>=<sp/>*Dep::MSSM_spectrum;</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"></highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SubSpectrum&amp;<sp/>mssm<sp/>=<sp/>spec.get_HE();</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-5,<sp/></highlight><highlight class="stringliteral">&quot;family_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pterror<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;family_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>stau1_string<sp/>=<sp/>slhahelp::mass_es_closest_to_family(</highlight><highlight class="stringliteral">&quot;~tau_1&quot;</highlight><highlight class="normal">,<sp/>mssm,tol,LOCAL_INFO,pterror);</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>stau2_string<sp/>=<sp/>slhahelp::mass_es_closest_to_family(</highlight><highlight class="stringliteral">&quot;~tau_2&quot;</highlight><highlight class="normal">,<sp/>mssm,tol,LOCAL_INFO,pterror);</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mass_stau1=spec.get(Par::Pole_Mass,stau1_string);</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mass_neut1<sp/>=<sp/>spec.get(Par::Pole_Mass,1000022,<sp/>0);</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mass_stau2<sp/>=<sp/>spec.get(Par::Pole_Mass,stau2_string);</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mZ<sp/>=<sp/>spec.get(Par::Pole_Mass,23,<sp/>0);</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>triplet&lt;double&gt;<sp/>xsecWithError;</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xsecLimit;</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"></highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>L3StauLimitAt205GeV<sp/>limitContainer;</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>#ifdef<sp/>COLLIDERBIT_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>static<sp/>bool<sp/>dumped=false;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>if(!dumped)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>limitContainer.dumpPlotData(45.,<sp/>115.,<sp/>0.,<sp/>100.,<sp/>mZ,<sp/>&quot;lepLimitPlanev2/L3StauLimitAt205GeV.dump&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>dumped=true;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1583"><highlight class="normal"></highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Due<sp/>to<sp/>the<sp/>nature<sp/>of<sp/>the<sp/>analysis<sp/>details<sp/>of<sp/>the<sp/>model<sp/>independent<sp/>limit<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>paper,<sp/>the<sp/>best<sp/>we<sp/>can<sp/>do<sp/>is<sp/>to<sp/>try<sp/>these<sp/>two<sp/>processes<sp/>individually:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1587"><highlight class="normal"></highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>stau_1,<sp/>stau_1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecLimit<sp/>=<sp/>limitContainer.limitAverage(mass_stau1,<sp/>mass_neut1,<sp/>mZ);</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"></highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError<sp/>=<sp/>*Dep::LEP205_xsec_stau1stau1bar;</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.upper<sp/>*=<sp/>pow(Dep::stau_1_decay_rates-&gt;BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;tau-&quot;</highlight><highlight class="normal">),<sp/>2);</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.central<sp/>*=<sp/>pow(Dep::stau_1_decay_rates-&gt;BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;tau-&quot;</highlight><highlight class="normal">),<sp/>2);</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.lower<sp/>*=<sp/>pow(Dep::stau_1_decay_rates-&gt;BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;tau-&quot;</highlight><highlight class="normal">),<sp/>2);</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"></highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xsecWithError.central<sp/>&lt;<sp/>xsecLimit)</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/><ref refid="ColliderBit__LEP_8cpp_1abd1ca4d53792828f13dce08349673b03" kindref="member">limit_LLike</ref>(xsecWithError.central,<sp/>xsecLimit,<sp/>xsecWithError.upper<sp/>-<sp/>xsecWithError.central);</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/><ref refid="ColliderBit__LEP_8cpp_1abd1ca4d53792828f13dce08349673b03" kindref="member">limit_LLike</ref>(xsecWithError.central,<sp/>xsecLimit,<sp/>xsecWithError.central<sp/>-<sp/>xsecWithError.lower);</highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"></highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>stau_2,<sp/>stau_2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecLimit<sp/>=<sp/>limitContainer.limitAverage(mass_stau2,<sp/>mass_neut1,<sp/>mZ);</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"></highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError<sp/>=<sp/>*Dep::LEP205_xsec_stau2stau2bar;</highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.upper<sp/>*=<sp/>pow(Dep::stau_2_decay_rates-&gt;BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;tau-&quot;</highlight><highlight class="normal">),<sp/>2);</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.central<sp/>*=<sp/>pow(Dep::stau_2_decay_rates-&gt;BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;tau-&quot;</highlight><highlight class="normal">),<sp/>2);</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.lower<sp/>*=<sp/>pow(Dep::stau_2_decay_rates-&gt;BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;tau-&quot;</highlight><highlight class="normal">),<sp/>2);</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"></highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xsecWithError.central<sp/>&lt;<sp/>xsecLimit)</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/><ref refid="ColliderBit__LEP_8cpp_1abd1ca4d53792828f13dce08349673b03" kindref="member">limit_LLike</ref>(xsecWithError.central,<sp/>xsecLimit,<sp/>xsecWithError.upper<sp/>-<sp/>xsecWithError.central);</highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/><ref refid="ColliderBit__LEP_8cpp_1abd1ca4d53792828f13dce08349673b03" kindref="member">limit_LLike</ref>(xsecWithError.central,<sp/>xsecLimit,<sp/>xsecWithError.central<sp/>-<sp/>xsecWithError.lower);</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"></highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1624"></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>L3_Neutralino_All_Channels_Conservative_LLike(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>result)</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::L3_Neutralino_All_Channels_Conservative_LLike;</highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">std::pow;</highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">std::log;</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"></highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Spectrum&amp;<sp/>spec<sp/>=<sp/>*Dep::MSSM_spectrum;</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"></highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DecayTable&amp;<sp/>decays<sp/>=<sp/>*Dep::decay_rates;</highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mass_neut1<sp/>=<sp/>spec.get(Par::Pole_Mass,1000022,<sp/>0);</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mass_neut2<sp/>=<sp/>spec.get(Par::Pole_Mass,1000023,<sp/>0);</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mass_neut3<sp/>=<sp/>spec.get(Par::Pole_Mass,1000025,<sp/>0);</highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mass_neut4<sp/>=<sp/>spec.get(Par::Pole_Mass,1000035,<sp/>0);</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mZ<sp/>=<sp/>spec.get(Par::Pole_Mass,23,<sp/>0);</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>triplet&lt;double&gt;<sp/>xsecWithError;</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xsecLimit,<sp/>totalBR;</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"></highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>L3NeutralinoAllChannelsLimitAt188pt6GeV<sp/>limitContainer;</highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>#ifdef<sp/>COLLIDERBIT_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>static<sp/>bool<sp/>dumped=false;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>if(!dumped)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>limitContainer.dumpPlotData(0.,<sp/>200.,<sp/>0.,<sp/>100.,<sp/>mZ,<sp/>&quot;lepLimitPlanev2/L3NeutralinoAllChannelsLimitAt188pt6GeV.dump&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>dumped=true;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1653"><highlight class="normal"></highlight></codeline>
<codeline lineno="1654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Due<sp/>to<sp/>the<sp/>nature<sp/>of<sp/>the<sp/>analysis<sp/>details<sp/>of<sp/>the<sp/>model<sp/>independent<sp/>limit<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>paper,<sp/>the<sp/>best<sp/>we<sp/>can<sp/>do<sp/>is<sp/>to<sp/>try<sp/>these<sp/>processes<sp/>individually:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1657"><highlight class="normal"></highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>neut2,<sp/>neut1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecLimit<sp/>=<sp/>limitContainer.limitAverage(mass_neut2,<sp/>mass_neut1,<sp/>mZ);</highlight></codeline>
<codeline lineno="1660"><highlight class="normal"></highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError<sp/>=<sp/>*Dep::LEP188_xsec_chi00_12;</highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Total<sp/>up<sp/>all<sp/>channels<sp/>which<sp/>look<sp/>like<sp/>Z*<sp/>decays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi0_2&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Z0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi0_2&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ubar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;u&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi0_2&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;dbar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;d&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi0_2&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;cbar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;c&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi0_2&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;sbar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;s&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi0_2&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;bbar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi0_2&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;e+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;e-&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi0_2&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mu+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mu-&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi0_2&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;tau+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;tau-&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi0_2&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nubar_e&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nu_e&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi0_2&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nubar_mu&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nu_mu&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi0_2&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nubar_tau&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nu_tau&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.upper<sp/>*=<sp/>totalBR;</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.central<sp/>*=<sp/>totalBR;</highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.lower<sp/>*=<sp/>totalBR;</highlight></codeline>
<codeline lineno="1679"><highlight class="normal"></highlight></codeline>
<codeline lineno="1680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xsecWithError.central<sp/>&lt;<sp/>xsecLimit)</highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/><ref refid="ColliderBit__LEP_8cpp_1abd1ca4d53792828f13dce08349673b03" kindref="member">limit_LLike</ref>(xsecWithError.central,<sp/>xsecLimit,<sp/>xsecWithError.upper<sp/>-<sp/>xsecWithError.central);</highlight></codeline>
<codeline lineno="1683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/><ref refid="ColliderBit__LEP_8cpp_1abd1ca4d53792828f13dce08349673b03" kindref="member">limit_LLike</ref>(xsecWithError.central,<sp/>xsecLimit,<sp/>xsecWithError.central<sp/>-<sp/>xsecWithError.lower);</highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1688"><highlight class="normal"></highlight></codeline>
<codeline lineno="1689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>neut3,<sp/>neut1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecLimit<sp/>=<sp/>limitContainer.limitAverage(mass_neut3,<sp/>mass_neut1,<sp/>mZ);</highlight></codeline>
<codeline lineno="1691"><highlight class="normal"></highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError<sp/>=<sp/>*Dep::LEP188_xsec_chi00_13;</highlight></codeline>
<codeline lineno="1693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Total<sp/>up<sp/>all<sp/>channels<sp/>which<sp/>look<sp/>like<sp/>Z*<sp/>decays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi0_3&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Z0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi0_3&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ubar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;u&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi0_3&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;dbar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;d&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi0_3&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;cbar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;c&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi0_3&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;sbar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;s&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi0_3&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;bbar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi0_3&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;e+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;e-&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi0_3&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mu+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mu-&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi0_3&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;tau+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;tau-&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi0_3&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nubar_e&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nu_e&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi0_3&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nubar_mu&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nu_mu&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi0_3&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nubar_tau&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nu_tau&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.upper<sp/>*=<sp/>totalBR;</highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.central<sp/>*=<sp/>totalBR;</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.lower<sp/>*=<sp/>totalBR;</highlight></codeline>
<codeline lineno="1710"><highlight class="normal"></highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xsecWithError.central<sp/>&lt;<sp/>xsecLimit)</highlight></codeline>
<codeline lineno="1712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/><ref refid="ColliderBit__LEP_8cpp_1abd1ca4d53792828f13dce08349673b03" kindref="member">limit_LLike</ref>(xsecWithError.central,<sp/>xsecLimit,<sp/>xsecWithError.upper<sp/>-<sp/>xsecWithError.central);</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/><ref refid="ColliderBit__LEP_8cpp_1abd1ca4d53792828f13dce08349673b03" kindref="member">limit_LLike</ref>(xsecWithError.central,<sp/>xsecLimit,<sp/>xsecWithError.central<sp/>-<sp/>xsecWithError.lower);</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1719"><highlight class="normal"></highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>neut4,<sp/>neut1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecLimit<sp/>=<sp/>limitContainer.limitAverage(mass_neut4,<sp/>mass_neut1,<sp/>mZ);</highlight></codeline>
<codeline lineno="1722"><highlight class="normal"></highlight></codeline>
<codeline lineno="1723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError<sp/>=<sp/>*Dep::LEP188_xsec_chi00_14;</highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Total<sp/>up<sp/>all<sp/>channels<sp/>which<sp/>look<sp/>like<sp/>Z*<sp/>decays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi0_4&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Z0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi0_4&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ubar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;u&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi0_4&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;dbar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;d&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi0_4&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;cbar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;c&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi0_4&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;sbar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;s&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi0_4&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;bbar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi0_4&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;e+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;e-&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi0_4&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mu+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mu-&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi0_4&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;tau+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;tau-&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi0_4&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nubar_e&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nu_e&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi0_4&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nubar_mu&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nu_mu&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi0_4&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nubar_tau&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nu_tau&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.upper<sp/>*=<sp/>totalBR;</highlight></codeline>
<codeline lineno="1739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.central<sp/>*=<sp/>totalBR;</highlight></codeline>
<codeline lineno="1740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.lower<sp/>*=<sp/>totalBR;</highlight></codeline>
<codeline lineno="1741"><highlight class="normal"></highlight></codeline>
<codeline lineno="1742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xsecWithError.central<sp/>&lt;<sp/>xsecLimit)</highlight></codeline>
<codeline lineno="1743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/><ref refid="ColliderBit__LEP_8cpp_1abd1ca4d53792828f13dce08349673b03" kindref="member">limit_LLike</ref>(xsecWithError.central,<sp/>xsecLimit,<sp/>xsecWithError.upper<sp/>-<sp/>xsecWithError.central);</highlight></codeline>
<codeline lineno="1745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/><ref refid="ColliderBit__LEP_8cpp_1abd1ca4d53792828f13dce08349673b03" kindref="member">limit_LLike</ref>(xsecWithError.central,<sp/>xsecLimit,<sp/>xsecWithError.central<sp/>-<sp/>xsecWithError.lower);</highlight></codeline>
<codeline lineno="1749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1750"><highlight class="normal"></highlight></codeline>
<codeline lineno="1751"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1752"><highlight class="normal"></highlight></codeline>
<codeline lineno="1753"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>L3_Neutralino_Leptonic_Conservative_LLike(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>result)</highlight></codeline>
<codeline lineno="1754"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::L3_Neutralino_Leptonic_Conservative_LLike;</highlight></codeline>
<codeline lineno="1756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">std::pow;</highlight></codeline>
<codeline lineno="1757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">std::log;</highlight></codeline>
<codeline lineno="1758"><highlight class="normal"></highlight></codeline>
<codeline lineno="1759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Spectrum&amp;<sp/>spec<sp/>=<sp/>*Dep::MSSM_spectrum;</highlight></codeline>
<codeline lineno="1760"><highlight class="normal"></highlight></codeline>
<codeline lineno="1761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DecayTable&amp;<sp/>decays<sp/>=<sp/>*Dep::decay_rates;</highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mass_neut1<sp/>=<sp/>spec.get(Par::Pole_Mass,1000022,<sp/>0);</highlight></codeline>
<codeline lineno="1763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mass_neut2<sp/>=<sp/>spec.get(Par::Pole_Mass,1000023,<sp/>0);</highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mass_neut3<sp/>=<sp/>spec.get(Par::Pole_Mass,1000025,<sp/>0);</highlight></codeline>
<codeline lineno="1765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mass_neut4<sp/>=<sp/>spec.get(Par::Pole_Mass,1000035,<sp/>0);</highlight></codeline>
<codeline lineno="1766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mZ<sp/>=<sp/>spec.get(Par::Pole_Mass,23,<sp/>0);</highlight></codeline>
<codeline lineno="1767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>triplet&lt;double&gt;<sp/>xsecWithError;</highlight></codeline>
<codeline lineno="1768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xsecLimit,<sp/>totalBR;</highlight></codeline>
<codeline lineno="1769"><highlight class="normal"></highlight></codeline>
<codeline lineno="1770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>L3NeutralinoLeptonicLimitAt188pt6GeV<sp/>limitContainer;</highlight></codeline>
<codeline lineno="1771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>#ifdef<sp/>COLLIDERBIT_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>static<sp/>bool<sp/>dumped=false;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if(!dumped)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>limitContainer.dumpPlotData(0.,<sp/>200.,<sp/>0.,<sp/>100.,<sp/>mZ,<sp/>&quot;lepLimitPlanev2/L3NeutralinoLeptonicLimitAt188pt6GeV.dump&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>dumped=true;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1779"><highlight class="normal"></highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Due<sp/>to<sp/>the<sp/>nature<sp/>of<sp/>the<sp/>analysis<sp/>details<sp/>of<sp/>the<sp/>model<sp/>independent<sp/>limit<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>paper,<sp/>the<sp/>best<sp/>we<sp/>can<sp/>do<sp/>is<sp/>to<sp/>try<sp/>these<sp/>processes<sp/>individually:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1783"><highlight class="normal"></highlight></codeline>
<codeline lineno="1784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>neut2,<sp/>neut1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecLimit<sp/>=<sp/>limitContainer.limitAverage(mass_neut2,<sp/>mass_neut1,<sp/>mZ);</highlight></codeline>
<codeline lineno="1786"><highlight class="normal"></highlight></codeline>
<codeline lineno="1787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError<sp/>=<sp/>*Dep::LEP188_xsec_chi00_12;</highlight></codeline>
<codeline lineno="1788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Total<sp/>up<sp/>all<sp/>channels<sp/>which<sp/>look<sp/>like<sp/>leptonic<sp/>Z*<sp/>decays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Total<sp/>up<sp/>the<sp/>leptonic<sp/>Z<sp/>decays<sp/>first...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;Z0&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;e+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;e-&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;Z0&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;mu+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mu-&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;Z0&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;tau+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;tau-&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi0_2&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Z0&quot;</highlight><highlight class="normal">)<sp/>*<sp/>totalBR;</highlight></codeline>
<codeline lineno="1795"><highlight class="normal"></highlight></codeline>
<codeline lineno="1796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi0_2&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;e+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;e-&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi0_2&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mu+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mu-&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi0_2&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;tau+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;tau-&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.upper<sp/>*=<sp/>totalBR;</highlight></codeline>
<codeline lineno="1800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.central<sp/>*=<sp/>totalBR;</highlight></codeline>
<codeline lineno="1801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.lower<sp/>*=<sp/>totalBR;</highlight></codeline>
<codeline lineno="1802"><highlight class="normal"></highlight></codeline>
<codeline lineno="1803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xsecWithError.central<sp/>&lt;<sp/>xsecLimit)</highlight></codeline>
<codeline lineno="1804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/><ref refid="ColliderBit__LEP_8cpp_1abd1ca4d53792828f13dce08349673b03" kindref="member">limit_LLike</ref>(xsecWithError.central,<sp/>xsecLimit,<sp/>xsecWithError.upper<sp/>-<sp/>xsecWithError.central);</highlight></codeline>
<codeline lineno="1806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/><ref refid="ColliderBit__LEP_8cpp_1abd1ca4d53792828f13dce08349673b03" kindref="member">limit_LLike</ref>(xsecWithError.central,<sp/>xsecLimit,<sp/>xsecWithError.central<sp/>-<sp/>xsecWithError.lower);</highlight></codeline>
<codeline lineno="1810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1811"><highlight class="normal"></highlight></codeline>
<codeline lineno="1812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>neut3,<sp/>neut1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecLimit<sp/>=<sp/>limitContainer.limitAverage(mass_neut3,<sp/>mass_neut1,<sp/>mZ);</highlight></codeline>
<codeline lineno="1814"><highlight class="normal"></highlight></codeline>
<codeline lineno="1815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError<sp/>=<sp/>*Dep::LEP188_xsec_chi00_13;</highlight></codeline>
<codeline lineno="1816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Total<sp/>up<sp/>all<sp/>channels<sp/>which<sp/>look<sp/>like<sp/>leptonic<sp/>Z*<sp/>decays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Total<sp/>up<sp/>the<sp/>leptonic<sp/>Z<sp/>decays<sp/>first...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;Z0&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;e+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;e-&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;Z0&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;mu+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mu-&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;Z0&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;tau+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;tau-&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi0_3&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Z0&quot;</highlight><highlight class="normal">)<sp/>*<sp/>totalBR;</highlight></codeline>
<codeline lineno="1823"><highlight class="normal"></highlight></codeline>
<codeline lineno="1824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi0_3&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;e+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;e-&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi0_3&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mu+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mu-&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi0_3&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;tau+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;tau-&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.upper<sp/>*=<sp/>totalBR;</highlight></codeline>
<codeline lineno="1828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.central<sp/>*=<sp/>totalBR;</highlight></codeline>
<codeline lineno="1829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.lower<sp/>*=<sp/>totalBR;</highlight></codeline>
<codeline lineno="1830"><highlight class="normal"></highlight></codeline>
<codeline lineno="1831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xsecWithError.central<sp/>&lt;<sp/>xsecLimit)</highlight></codeline>
<codeline lineno="1832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/><ref refid="ColliderBit__LEP_8cpp_1abd1ca4d53792828f13dce08349673b03" kindref="member">limit_LLike</ref>(xsecWithError.central,<sp/>xsecLimit,<sp/>xsecWithError.upper<sp/>-<sp/>xsecWithError.central);</highlight></codeline>
<codeline lineno="1834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/><ref refid="ColliderBit__LEP_8cpp_1abd1ca4d53792828f13dce08349673b03" kindref="member">limit_LLike</ref>(xsecWithError.central,<sp/>xsecLimit,<sp/>xsecWithError.central<sp/>-<sp/>xsecWithError.lower);</highlight></codeline>
<codeline lineno="1838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1839"><highlight class="normal"></highlight></codeline>
<codeline lineno="1840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>neut4,<sp/>neut1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecLimit<sp/>=<sp/>limitContainer.limitAverage(mass_neut4,<sp/>mass_neut1,<sp/>mZ);</highlight></codeline>
<codeline lineno="1842"><highlight class="normal"></highlight></codeline>
<codeline lineno="1843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError<sp/>=<sp/>*Dep::LEP188_xsec_chi00_14;</highlight></codeline>
<codeline lineno="1844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Total<sp/>up<sp/>all<sp/>channels<sp/>which<sp/>look<sp/>like<sp/>leptonic<sp/>Z*<sp/>decays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Total<sp/>up<sp/>the<sp/>leptonic<sp/>Z<sp/>decays<sp/>first...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;Z0&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;e+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;e-&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;Z0&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;mu+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mu-&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;Z0&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;tau+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;tau-&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi0_4&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Z0&quot;</highlight><highlight class="normal">)<sp/>*<sp/>totalBR;</highlight></codeline>
<codeline lineno="1851"><highlight class="normal"></highlight></codeline>
<codeline lineno="1852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi0_4&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;e+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;e-&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi0_4&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mu+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mu-&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi0_4&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;tau+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;tau-&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.upper<sp/>*=<sp/>totalBR;</highlight></codeline>
<codeline lineno="1856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.central<sp/>*=<sp/>totalBR;</highlight></codeline>
<codeline lineno="1857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.lower<sp/>*=<sp/>totalBR;</highlight></codeline>
<codeline lineno="1858"><highlight class="normal"></highlight></codeline>
<codeline lineno="1859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xsecWithError.central<sp/>&lt;<sp/>xsecLimit)</highlight></codeline>
<codeline lineno="1860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/><ref refid="ColliderBit__LEP_8cpp_1abd1ca4d53792828f13dce08349673b03" kindref="member">limit_LLike</ref>(xsecWithError.central,<sp/>xsecLimit,<sp/>xsecWithError.upper<sp/>-<sp/>xsecWithError.central);</highlight></codeline>
<codeline lineno="1862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/><ref refid="ColliderBit__LEP_8cpp_1abd1ca4d53792828f13dce08349673b03" kindref="member">limit_LLike</ref>(xsecWithError.central,<sp/>xsecLimit,<sp/>xsecWithError.central<sp/>-<sp/>xsecWithError.lower);</highlight></codeline>
<codeline lineno="1866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1867"><highlight class="normal"></highlight></codeline>
<codeline lineno="1868"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1869"><highlight class="normal"></highlight></codeline>
<codeline lineno="1870"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>L3_Chargino_All_Channels_Conservative_LLike(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>result)</highlight></codeline>
<codeline lineno="1871"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::L3_Chargino_All_Channels_Conservative_LLike;</highlight></codeline>
<codeline lineno="1873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">std::pow;</highlight></codeline>
<codeline lineno="1874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">std::log;</highlight></codeline>
<codeline lineno="1875"><highlight class="normal"></highlight></codeline>
<codeline lineno="1876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Spectrum&amp;<sp/>spec<sp/>=<sp/>*Dep::MSSM_spectrum;</highlight></codeline>
<codeline lineno="1877"><highlight class="normal"></highlight></codeline>
<codeline lineno="1878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DecayTable&amp;<sp/>decays<sp/>=<sp/>*Dep::decay_rates;</highlight></codeline>
<codeline lineno="1879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mass_neut1<sp/>=<sp/>spec.get(Par::Pole_Mass,1000022,<sp/>0);</highlight></codeline>
<codeline lineno="1880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mass_char1<sp/>=<sp/>spec.get(Par::Pole_Mass,1000024,<sp/>0);</highlight></codeline>
<codeline lineno="1881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mass_char2<sp/>=<sp/>spec.get(Par::Pole_Mass,1000037,<sp/>0);</highlight></codeline>
<codeline lineno="1882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mZ<sp/>=<sp/>spec.get(Par::Pole_Mass,23,<sp/>0);</highlight></codeline>
<codeline lineno="1883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>triplet&lt;double&gt;<sp/>xsecWithError;</highlight></codeline>
<codeline lineno="1884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xsecLimit,<sp/>totalBR;</highlight></codeline>
<codeline lineno="1885"><highlight class="normal"></highlight></codeline>
<codeline lineno="1886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>L3CharginoAllChannelsLimitAt188pt6GeV<sp/>limitContainer;</highlight></codeline>
<codeline lineno="1887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>#ifdef<sp/>COLLIDERBIT_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>static<sp/>bool<sp/>dumped=false;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>if(!dumped)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>limitContainer.dumpPlotData(45.,<sp/>100.,<sp/>0.,<sp/>100.,<sp/>mZ,<sp/>&quot;lepLimitPlanev2/L3CharginoAllChannelsLimitAt188pt6GeV.dump&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>dumped=true;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1895"><highlight class="normal"></highlight></codeline>
<codeline lineno="1896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Due<sp/>to<sp/>the<sp/>nature<sp/>of<sp/>the<sp/>analysis<sp/>details<sp/>of<sp/>the<sp/>model<sp/>independent<sp/>limit<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>paper,<sp/>the<sp/>best<sp/>we<sp/>can<sp/>do<sp/>is<sp/>to<sp/>try<sp/>these<sp/>processes<sp/>individually:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1899"><highlight class="normal"></highlight></codeline>
<codeline lineno="1900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>char1,<sp/>neut1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecLimit<sp/>=<sp/>limitContainer.limitAverage(mass_char1,<sp/>mass_neut1,<sp/>mZ);</highlight></codeline>
<codeline lineno="1902"><highlight class="normal"></highlight></codeline>
<codeline lineno="1903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError<sp/>=<sp/>*Dep::LEP188_xsec_chipm_11;</highlight></codeline>
<codeline lineno="1904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Total<sp/>up<sp/>all<sp/>channels<sp/>which<sp/>look<sp/>like<sp/>W*<sp/>decays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi+_1&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;W+&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi+_1&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;u&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;dbar&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi+_1&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;c&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;sbar&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi+_1&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;e+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nu_e&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi+_1&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mu+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nu_mu&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi+_1&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;tau+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nu_tau&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.upper<sp/>*=<sp/>pow(totalBR,<sp/>2);</highlight></codeline>
<codeline lineno="1913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.central<sp/>*=<sp/>pow(totalBR,<sp/>2);</highlight></codeline>
<codeline lineno="1914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.lower<sp/>*=<sp/>pow(totalBR,<sp/>2);</highlight></codeline>
<codeline lineno="1915"><highlight class="normal"></highlight></codeline>
<codeline lineno="1916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xsecWithError.central<sp/>&lt;<sp/>xsecLimit)</highlight></codeline>
<codeline lineno="1917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/><ref refid="ColliderBit__LEP_8cpp_1abd1ca4d53792828f13dce08349673b03" kindref="member">limit_LLike</ref>(xsecWithError.central,<sp/>xsecLimit,<sp/>xsecWithError.upper<sp/>-<sp/>xsecWithError.central);</highlight></codeline>
<codeline lineno="1919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/><ref refid="ColliderBit__LEP_8cpp_1abd1ca4d53792828f13dce08349673b03" kindref="member">limit_LLike</ref>(xsecWithError.central,<sp/>xsecLimit,<sp/>xsecWithError.central<sp/>-<sp/>xsecWithError.lower);</highlight></codeline>
<codeline lineno="1923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1924"><highlight class="normal"></highlight></codeline>
<codeline lineno="1925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>char2,<sp/>neut1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecLimit<sp/>=<sp/>limitContainer.limitAverage(mass_char2,<sp/>mass_neut1,<sp/>mZ);</highlight></codeline>
<codeline lineno="1927"><highlight class="normal"></highlight></codeline>
<codeline lineno="1928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError<sp/>=<sp/>*Dep::LEP188_xsec_chipm_22;</highlight></codeline>
<codeline lineno="1929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Total<sp/>up<sp/>all<sp/>channels<sp/>which<sp/>look<sp/>like<sp/>W*<sp/>decays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi+_2&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;W+&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi+_2&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;u&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;dbar&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi+_2&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;c&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;sbar&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi+_2&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;e+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nu_e&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi+_2&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mu+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nu_mu&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi+_2&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;tau+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nu_tau&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.upper<sp/>*=<sp/>pow(totalBR,<sp/>2);</highlight></codeline>
<codeline lineno="1938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.central<sp/>*=<sp/>pow(totalBR,<sp/>2);</highlight></codeline>
<codeline lineno="1939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.lower<sp/>*=<sp/>pow(totalBR,<sp/>2);</highlight></codeline>
<codeline lineno="1940"><highlight class="normal"></highlight></codeline>
<codeline lineno="1941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xsecWithError.central<sp/>&lt;<sp/>xsecLimit)</highlight></codeline>
<codeline lineno="1942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/><ref refid="ColliderBit__LEP_8cpp_1abd1ca4d53792828f13dce08349673b03" kindref="member">limit_LLike</ref>(xsecWithError.central,<sp/>xsecLimit,<sp/>xsecWithError.upper<sp/>-<sp/>xsecWithError.central);</highlight></codeline>
<codeline lineno="1944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/><ref refid="ColliderBit__LEP_8cpp_1abd1ca4d53792828f13dce08349673b03" kindref="member">limit_LLike</ref>(xsecWithError.central,<sp/>xsecLimit,<sp/>xsecWithError.central<sp/>-<sp/>xsecWithError.lower);</highlight></codeline>
<codeline lineno="1948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1949"><highlight class="normal"></highlight></codeline>
<codeline lineno="1950"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1951"><highlight class="normal"></highlight></codeline>
<codeline lineno="1952"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>L3_Chargino_Leptonic_Conservative_LLike(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>result)</highlight></codeline>
<codeline lineno="1953"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::L3_Chargino_Leptonic_Conservative_LLike;</highlight></codeline>
<codeline lineno="1955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">std::pow;</highlight></codeline>
<codeline lineno="1956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">std::log;</highlight></codeline>
<codeline lineno="1957"><highlight class="normal"></highlight></codeline>
<codeline lineno="1958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Spectrum&amp;<sp/>spec<sp/>=<sp/>*Dep::MSSM_spectrum;</highlight></codeline>
<codeline lineno="1959"><highlight class="normal"></highlight></codeline>
<codeline lineno="1960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DecayTable&amp;<sp/>decays<sp/>=<sp/>*Dep::decay_rates;</highlight></codeline>
<codeline lineno="1961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mass_neut1<sp/>=<sp/>spec.get(Par::Pole_Mass,1000022,<sp/>0);</highlight></codeline>
<codeline lineno="1962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mass_char1<sp/>=<sp/>spec.get(Par::Pole_Mass,1000024,<sp/>0);</highlight></codeline>
<codeline lineno="1963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mass_char2<sp/>=<sp/>spec.get(Par::Pole_Mass,1000037,<sp/>0);</highlight></codeline>
<codeline lineno="1964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mZ<sp/>=<sp/>spec.get(Par::Pole_Mass,23,<sp/>0);</highlight></codeline>
<codeline lineno="1965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>triplet&lt;double&gt;<sp/>xsecWithError;</highlight></codeline>
<codeline lineno="1966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xsecLimit,<sp/>totalBR;</highlight></codeline>
<codeline lineno="1967"><highlight class="normal"></highlight></codeline>
<codeline lineno="1968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>L3CharginoLeptonicLimitAt188pt6GeV<sp/>limitContainer;</highlight></codeline>
<codeline lineno="1969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>#ifdef<sp/>COLLIDERBIT_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>static<sp/>bool<sp/>dumped=false;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>if(!dumped)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>limitContainer.dumpPlotData(45.,<sp/>100.,<sp/>0.,<sp/>100.,<sp/>mZ,<sp/>&quot;lepLimitPlanev2/L3CharginoLeptonicLimitAt188pt6GeV.dump&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>dumped=true;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1977"><highlight class="normal"></highlight></codeline>
<codeline lineno="1978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Due<sp/>to<sp/>the<sp/>nature<sp/>of<sp/>the<sp/>analysis<sp/>details<sp/>of<sp/>the<sp/>model<sp/>independent<sp/>limit<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>paper,<sp/>the<sp/>best<sp/>we<sp/>can<sp/>do<sp/>is<sp/>to<sp/>try<sp/>these<sp/>processes<sp/>individually:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1981"><highlight class="normal"></highlight></codeline>
<codeline lineno="1982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>char1,<sp/>neut1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecLimit<sp/>=<sp/>limitContainer.limitAverage(mass_char1,<sp/>mass_neut1,<sp/>mZ);</highlight></codeline>
<codeline lineno="1984"><highlight class="normal"></highlight></codeline>
<codeline lineno="1985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError<sp/>=<sp/>*Dep::LEP188_xsec_chipm_11;</highlight></codeline>
<codeline lineno="1986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Total<sp/>up<sp/>all<sp/>channels<sp/>which<sp/>look<sp/>like<sp/>leptonic<sp/>W*<sp/>decays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Total<sp/>up<sp/>the<sp/>leptonic<sp/>W<sp/>decays<sp/>first...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;W+&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;e+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nu_e&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;W+&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;mu+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nu_mu&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;W+&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;tau+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nu_tau&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi+_1&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;W+&quot;</highlight><highlight class="normal">)<sp/>*<sp/>totalBR;</highlight></codeline>
<codeline lineno="1993"><highlight class="normal"></highlight></codeline>
<codeline lineno="1994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi+_1&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;e+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nu_e&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi+_1&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mu+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nu_mu&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi+_1&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;tau+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nu_tau&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.upper<sp/>*=<sp/>pow(totalBR,<sp/>2);</highlight></codeline>
<codeline lineno="1998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.central<sp/>*=<sp/>pow(totalBR,<sp/>2);</highlight></codeline>
<codeline lineno="1999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.lower<sp/>*=<sp/>pow(totalBR,<sp/>2);</highlight></codeline>
<codeline lineno="2000"><highlight class="normal"></highlight></codeline>
<codeline lineno="2001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xsecWithError.central<sp/>&lt;<sp/>xsecLimit)</highlight></codeline>
<codeline lineno="2002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/><ref refid="ColliderBit__LEP_8cpp_1abd1ca4d53792828f13dce08349673b03" kindref="member">limit_LLike</ref>(xsecWithError.central,<sp/>xsecLimit,<sp/>xsecWithError.upper<sp/>-<sp/>xsecWithError.central);</highlight></codeline>
<codeline lineno="2004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/><ref refid="ColliderBit__LEP_8cpp_1abd1ca4d53792828f13dce08349673b03" kindref="member">limit_LLike</ref>(xsecWithError.central,<sp/>xsecLimit,<sp/>xsecWithError.central<sp/>-<sp/>xsecWithError.lower);</highlight></codeline>
<codeline lineno="2008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2009"><highlight class="normal"></highlight></codeline>
<codeline lineno="2010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>char2,<sp/>neut1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecLimit<sp/>=<sp/>limitContainer.limitAverage(mass_char2,<sp/>mass_neut1,<sp/>mZ);</highlight></codeline>
<codeline lineno="2012"><highlight class="normal"></highlight></codeline>
<codeline lineno="2013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError<sp/>=<sp/>*Dep::LEP188_xsec_chipm_22;</highlight></codeline>
<codeline lineno="2014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Total<sp/>up<sp/>all<sp/>channels<sp/>which<sp/>look<sp/>like<sp/>leptonic<sp/>W*<sp/>decays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Total<sp/>up<sp/>the<sp/>leptonic<sp/>W<sp/>decays<sp/>first...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;W+&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;e+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nu_e&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;W+&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;mu+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nu_mu&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;W+&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;tau+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nu_tau&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi+_2&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;W+&quot;</highlight><highlight class="normal">)<sp/>*<sp/>totalBR;</highlight></codeline>
<codeline lineno="2021"><highlight class="normal"></highlight></codeline>
<codeline lineno="2022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi+_2&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;e+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nu_e&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi+_2&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mu+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nu_mu&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi+_2&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;tau+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nu_tau&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.upper<sp/>*=<sp/>pow(totalBR,<sp/>2);</highlight></codeline>
<codeline lineno="2026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.central<sp/>*=<sp/>pow(totalBR,<sp/>2);</highlight></codeline>
<codeline lineno="2027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.lower<sp/>*=<sp/>pow(totalBR,<sp/>2);</highlight></codeline>
<codeline lineno="2028"><highlight class="normal"></highlight></codeline>
<codeline lineno="2029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xsecWithError.central<sp/>&lt;<sp/>xsecLimit)</highlight></codeline>
<codeline lineno="2030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/><ref refid="ColliderBit__LEP_8cpp_1abd1ca4d53792828f13dce08349673b03" kindref="member">limit_LLike</ref>(xsecWithError.central,<sp/>xsecLimit,<sp/>xsecWithError.upper<sp/>-<sp/>xsecWithError.central);</highlight></codeline>
<codeline lineno="2032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/><ref refid="ColliderBit__LEP_8cpp_1abd1ca4d53792828f13dce08349673b03" kindref="member">limit_LLike</ref>(xsecWithError.central,<sp/>xsecLimit,<sp/>xsecWithError.central<sp/>-<sp/>xsecWithError.lower);</highlight></codeline>
<codeline lineno="2036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2037"><highlight class="normal"></highlight></codeline>
<codeline lineno="2038"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2039"><highlight class="normal"></highlight></codeline>
<codeline lineno="2040"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OPAL_Chargino_Hadronic_Conservative_LLike(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>result)</highlight></codeline>
<codeline lineno="2041"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::OPAL_Chargino_Hadronic_Conservative_LLike;</highlight></codeline>
<codeline lineno="2043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">std::pow;</highlight></codeline>
<codeline lineno="2044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">std::log;</highlight></codeline>
<codeline lineno="2045"><highlight class="normal"></highlight></codeline>
<codeline lineno="2046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Spectrum&amp;<sp/>spec<sp/>=<sp/>*Dep::MSSM_spectrum;</highlight></codeline>
<codeline lineno="2047"><highlight class="normal"></highlight></codeline>
<codeline lineno="2048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DecayTable&amp;<sp/>decays<sp/>=<sp/>*Dep::decay_rates;</highlight></codeline>
<codeline lineno="2049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mass_neut1<sp/>=<sp/>spec.get(Par::Pole_Mass,1000022,<sp/>0);</highlight></codeline>
<codeline lineno="2050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mass_char1<sp/>=<sp/>spec.get(Par::Pole_Mass,1000024,<sp/>0);</highlight></codeline>
<codeline lineno="2051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mass_char2<sp/>=<sp/>spec.get(Par::Pole_Mass,1000037,<sp/>0);</highlight></codeline>
<codeline lineno="2052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mZ<sp/>=<sp/>spec.get(Par::Pole_Mass,23,<sp/>0);</highlight></codeline>
<codeline lineno="2053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>triplet&lt;double&gt;<sp/>xsecWithError;</highlight></codeline>
<codeline lineno="2054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xsecLimit,<sp/>totalBR;</highlight></codeline>
<codeline lineno="2055"><highlight class="normal"></highlight></codeline>
<codeline lineno="2056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>OPALCharginoHadronicLimitAt208GeV<sp/>limitContainer;</highlight></codeline>
<codeline lineno="2057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>#ifdef<sp/>COLLIDERBIT_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>static<sp/>bool<sp/>dumped=false;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>if(!dumped)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>limitContainer.dumpPlotData(75.,<sp/>105.,<sp/>0.,<sp/>105.,<sp/>mZ,<sp/>&quot;lepLimitPlanev2/OPALCharginoHadronicLimitAt208GeV.dump&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>dumped=true;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2065"><highlight class="normal"></highlight></codeline>
<codeline lineno="2066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Due<sp/>to<sp/>the<sp/>nature<sp/>of<sp/>the<sp/>analysis<sp/>details<sp/>of<sp/>the<sp/>model<sp/>independent<sp/>limit<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>paper,<sp/>the<sp/>best<sp/>we<sp/>can<sp/>do<sp/>is<sp/>to<sp/>try<sp/>these<sp/>processes<sp/>individually:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2069"><highlight class="normal"></highlight></codeline>
<codeline lineno="2070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>char1,<sp/>neut1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecLimit<sp/>=<sp/>limitContainer.limitAverage(mass_char1,<sp/>mass_neut1,<sp/>mZ);</highlight></codeline>
<codeline lineno="2072"><highlight class="normal"></highlight></codeline>
<codeline lineno="2073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError<sp/>=<sp/>*Dep::LEP208_xsec_chipm_11;</highlight></codeline>
<codeline lineno="2074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Total<sp/>up<sp/>all<sp/>channels<sp/>which<sp/>look<sp/>like<sp/>hadronic<sp/>W*<sp/>decays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Total<sp/>up<sp/>the<sp/>hadronic<sp/>W<sp/>decays<sp/>first...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;W+&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;hadron&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;hadron&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi+_1&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;W+&quot;</highlight><highlight class="normal">)<sp/>*<sp/>totalBR;</highlight></codeline>
<codeline lineno="2078"><highlight class="normal"></highlight></codeline>
<codeline lineno="2079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi+_1&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;u&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;dbar&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi+_1&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;c&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;sbar&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.upper<sp/>*=<sp/>pow(totalBR,<sp/>2);</highlight></codeline>
<codeline lineno="2082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.central<sp/>*=<sp/>pow(totalBR,<sp/>2);</highlight></codeline>
<codeline lineno="2083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.lower<sp/>*=<sp/>pow(totalBR,<sp/>2);</highlight></codeline>
<codeline lineno="2084"><highlight class="normal"></highlight></codeline>
<codeline lineno="2085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xsecWithError.central<sp/>&lt;<sp/>xsecLimit)</highlight></codeline>
<codeline lineno="2086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/><ref refid="ColliderBit__LEP_8cpp_1abd1ca4d53792828f13dce08349673b03" kindref="member">limit_LLike</ref>(xsecWithError.central,<sp/>xsecLimit,<sp/>xsecWithError.upper<sp/>-<sp/>xsecWithError.central);</highlight></codeline>
<codeline lineno="2088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/><ref refid="ColliderBit__LEP_8cpp_1abd1ca4d53792828f13dce08349673b03" kindref="member">limit_LLike</ref>(xsecWithError.central,<sp/>xsecLimit,<sp/>xsecWithError.central<sp/>-<sp/>xsecWithError.lower);</highlight></codeline>
<codeline lineno="2092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2093"><highlight class="normal"></highlight></codeline>
<codeline lineno="2094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>char2,<sp/>neut1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecLimit<sp/>=<sp/>limitContainer.limitAverage(mass_char2,<sp/>mass_neut1,<sp/>mZ);</highlight></codeline>
<codeline lineno="2096"><highlight class="normal"></highlight></codeline>
<codeline lineno="2097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError<sp/>=<sp/>*Dep::LEP208_xsec_chipm_22;</highlight></codeline>
<codeline lineno="2098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Total<sp/>up<sp/>all<sp/>channels<sp/>which<sp/>look<sp/>like<sp/>hadronic<sp/>W*<sp/>decays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Total<sp/>up<sp/>the<sp/>hadronic<sp/>W<sp/>decays<sp/>first...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;W+&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;hadron&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;hadron&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi+_2&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;W+&quot;</highlight><highlight class="normal">)<sp/>*<sp/>totalBR;</highlight></codeline>
<codeline lineno="2102"><highlight class="normal"></highlight></codeline>
<codeline lineno="2103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi+_2&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;u&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;dbar&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi+_2&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;c&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;sbar&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.upper<sp/>*=<sp/>pow(totalBR,<sp/>2);</highlight></codeline>
<codeline lineno="2106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.central<sp/>*=<sp/>pow(totalBR,<sp/>2);</highlight></codeline>
<codeline lineno="2107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.lower<sp/>*=<sp/>pow(totalBR,<sp/>2);</highlight></codeline>
<codeline lineno="2108"><highlight class="normal"></highlight></codeline>
<codeline lineno="2109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xsecWithError.central<sp/>&lt;<sp/>xsecLimit)</highlight></codeline>
<codeline lineno="2110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/><ref refid="ColliderBit__LEP_8cpp_1abd1ca4d53792828f13dce08349673b03" kindref="member">limit_LLike</ref>(xsecWithError.central,<sp/>xsecLimit,<sp/>xsecWithError.upper<sp/>-<sp/>xsecWithError.central);</highlight></codeline>
<codeline lineno="2112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/><ref refid="ColliderBit__LEP_8cpp_1abd1ca4d53792828f13dce08349673b03" kindref="member">limit_LLike</ref>(xsecWithError.central,<sp/>xsecLimit,<sp/>xsecWithError.central<sp/>-<sp/>xsecWithError.lower);</highlight></codeline>
<codeline lineno="2116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2117"><highlight class="normal"></highlight></codeline>
<codeline lineno="2118"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2119"><highlight class="normal"></highlight></codeline>
<codeline lineno="2120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OPAL_Chargino_SemiLeptonic_Conservative_LLike(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>result)</highlight></codeline>
<codeline lineno="2121"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::OPAL_Chargino_SemiLeptonic_Conservative_LLike;</highlight></codeline>
<codeline lineno="2123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">std::pow;</highlight></codeline>
<codeline lineno="2124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">std::log;</highlight></codeline>
<codeline lineno="2125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2127"><highlight class="normal"></highlight></codeline>
<codeline lineno="2128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Spectrum&amp;<sp/>spec<sp/>=<sp/>*Dep::MSSM_spectrum;</highlight></codeline>
<codeline lineno="2129"><highlight class="normal"></highlight></codeline>
<codeline lineno="2130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SubSpectrum&amp;<sp/>mssm<sp/>=<sp/>spec.get_HE();</highlight></codeline>
<codeline lineno="2131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DecayTable&amp;<sp/>decays<sp/>=<sp/>*Dep::decay_rates;</highlight></codeline>
<codeline lineno="2132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>str<sp/>snue<sp/>=<sp/>slhahelp::mass_es_from_gauge_es(</highlight><highlight class="stringliteral">&quot;~nu_e_L&quot;</highlight><highlight class="normal">,<sp/>mssm,<sp/>tol,<sp/>LOCAL_INFO,<sp/>pt_error);</highlight></codeline>
<codeline lineno="2133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>str<sp/>snumu<sp/>=<sp/>slhahelp::mass_es_from_gauge_es(</highlight><highlight class="stringliteral">&quot;~nu_mu_L&quot;</highlight><highlight class="normal">,<sp/>mssm,<sp/>tol,<sp/>LOCAL_INFO,<sp/>pt_error);</highlight></codeline>
<codeline lineno="2134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>str<sp/>snutau<sp/>=<sp/>slhahelp::mass_es_from_gauge_es(</highlight><highlight class="stringliteral">&quot;~nu_tau_L&quot;</highlight><highlight class="normal">,<sp/>mssm,<sp/>tol,<sp/>LOCAL_INFO,<sp/>pt_error);</highlight></codeline>
<codeline lineno="2135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mass_neut1<sp/>=<sp/>spec.get(Par::Pole_Mass,1000022,<sp/>0);</highlight></codeline>
<codeline lineno="2136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mass_char1<sp/>=<sp/>spec.get(Par::Pole_Mass,1000024,<sp/>0);</highlight></codeline>
<codeline lineno="2137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mass_char2<sp/>=<sp/>spec.get(Par::Pole_Mass,1000037,<sp/>0);</highlight></codeline>
<codeline lineno="2138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mZ<sp/>=<sp/>spec.get(Par::Pole_Mass,23,<sp/>0);</highlight></codeline>
<codeline lineno="2139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>triplet&lt;double&gt;<sp/>xsecWithError;</highlight></codeline>
<codeline lineno="2140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xsecLimit,<sp/>totalBR;</highlight></codeline>
<codeline lineno="2141"><highlight class="normal"></highlight></codeline>
<codeline lineno="2142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>OPALCharginoSemiLeptonicLimitAt208GeV<sp/>limitContainer;</highlight></codeline>
<codeline lineno="2143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>#ifdef<sp/>COLLIDERBIT_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>static<sp/>bool<sp/>dumped=false;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>if(!dumped)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>limitContainer.dumpPlotData(75.,<sp/>105.,<sp/>0.,<sp/>105.,<sp/>mZ,<sp/>&quot;lepLimitPlanev2/OPALCharginoSemiLeptonicLimitAt208GeV.dump&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>dumped=true;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2151"><highlight class="normal"></highlight></codeline>
<codeline lineno="2152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Due<sp/>to<sp/>the<sp/>nature<sp/>of<sp/>the<sp/>analysis<sp/>details<sp/>of<sp/>the<sp/>model<sp/>independent<sp/>limit<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>paper,<sp/>the<sp/>best<sp/>we<sp/>can<sp/>do<sp/>is<sp/>to<sp/>try<sp/>these<sp/>processes<sp/>individually:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2155"><highlight class="normal"></highlight></codeline>
<codeline lineno="2156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>char1,<sp/>neut1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecLimit<sp/>=<sp/>limitContainer.limitAverage(mass_char1,<sp/>mass_neut1,<sp/>mZ);</highlight></codeline>
<codeline lineno="2158"><highlight class="normal"></highlight></codeline>
<codeline lineno="2159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError<sp/>=<sp/>*Dep::LEP208_xsec_chipm_11;</highlight></codeline>
<codeline lineno="2160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Total<sp/>up<sp/>all<sp/>channels<sp/>which<sp/>look<sp/>like<sp/>leptonic<sp/>W*<sp/>decays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Total<sp/>up<sp/>the<sp/>leptonic<sp/>W<sp/>decays<sp/>first...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;W+&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;e+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nu_e&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;W+&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;mu+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nu_mu&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;W+&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;tau+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nu_tau&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi+_1&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;W+&quot;</highlight><highlight class="normal">)<sp/>*<sp/>totalBR;</highlight></codeline>
<codeline lineno="2167"><highlight class="normal"></highlight></codeline>
<codeline lineno="2168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi+_1&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;e+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nu_e&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi+_1&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mu+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nu_mu&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi+_1&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;tau+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nu_tau&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi+_1&quot;</highlight><highlight class="normal">).BF(snue,<sp/></highlight><highlight class="stringliteral">&quot;e+&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>decays.at(snue).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nu_e&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi+_1&quot;</highlight><highlight class="normal">).BF(snumu,<sp/></highlight><highlight class="stringliteral">&quot;mu+&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>decays.at(snumu).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nu_mu&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi+_1&quot;</highlight><highlight class="normal">).BF(snutau,<sp/></highlight><highlight class="stringliteral">&quot;tau+&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>decays.at(snutau).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nu_tau&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.upper<sp/>*=<sp/>totalBR;</highlight></codeline>
<codeline lineno="2178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.central<sp/>*=<sp/>totalBR;</highlight></codeline>
<codeline lineno="2179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.lower<sp/>*=<sp/>totalBR;</highlight></codeline>
<codeline lineno="2180"><highlight class="normal"></highlight></codeline>
<codeline lineno="2181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ALSO,<sp/>total<sp/>up<sp/>all<sp/>channels<sp/>which<sp/>look<sp/>like<sp/>hadronic<sp/>W*<sp/>decays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Total<sp/>up<sp/>the<sp/>hadronic<sp/>W<sp/>decays<sp/>first...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;W+&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;hadron&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;hadron&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi+_1&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;W+&quot;</highlight><highlight class="normal">)<sp/>*<sp/>totalBR;</highlight></codeline>
<codeline lineno="2185"><highlight class="normal"></highlight></codeline>
<codeline lineno="2186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi+_1&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;u&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;dbar&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi+_1&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;c&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;sbar&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.upper<sp/>*=<sp/>totalBR;</highlight></codeline>
<codeline lineno="2189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.central<sp/>*=<sp/>totalBR;</highlight></codeline>
<codeline lineno="2190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.lower<sp/>*=<sp/>totalBR;</highlight></codeline>
<codeline lineno="2191"><highlight class="normal"></highlight></codeline>
<codeline lineno="2192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xsecWithError.central<sp/>&lt;<sp/>xsecLimit)</highlight></codeline>
<codeline lineno="2193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/><ref refid="ColliderBit__LEP_8cpp_1abd1ca4d53792828f13dce08349673b03" kindref="member">limit_LLike</ref>(xsecWithError.central,<sp/>xsecLimit,<sp/>xsecWithError.upper<sp/>-<sp/>xsecWithError.central);</highlight></codeline>
<codeline lineno="2195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/><ref refid="ColliderBit__LEP_8cpp_1abd1ca4d53792828f13dce08349673b03" kindref="member">limit_LLike</ref>(xsecWithError.central,<sp/>xsecLimit,<sp/>xsecWithError.central<sp/>-<sp/>xsecWithError.lower);</highlight></codeline>
<codeline lineno="2199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2200"><highlight class="normal"></highlight></codeline>
<codeline lineno="2201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>char2,<sp/>neut1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecLimit<sp/>=<sp/>limitContainer.limitAverage(mass_char2,<sp/>mass_neut1,<sp/>mZ);</highlight></codeline>
<codeline lineno="2203"><highlight class="normal"></highlight></codeline>
<codeline lineno="2204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError<sp/>=<sp/>*Dep::LEP208_xsec_chipm_22;</highlight></codeline>
<codeline lineno="2205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Total<sp/>up<sp/>all<sp/>channels<sp/>which<sp/>look<sp/>like<sp/>leptonic<sp/>W*<sp/>decays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Total<sp/>up<sp/>the<sp/>leptonic<sp/>W<sp/>decays<sp/>first...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;W+&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;e+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nu_e&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;W+&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;mu+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nu_mu&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;W+&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;tau+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nu_tau&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi+_2&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;W+&quot;</highlight><highlight class="normal">)<sp/>*<sp/>totalBR;</highlight></codeline>
<codeline lineno="2212"><highlight class="normal"></highlight></codeline>
<codeline lineno="2213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi+_2&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;e+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nu_e&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi+_2&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mu+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nu_mu&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi+_2&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;tau+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nu_tau&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi+_2&quot;</highlight><highlight class="normal">).BF(snue,<sp/></highlight><highlight class="stringliteral">&quot;e+&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>decays.at(snue).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nu_e&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi+_2&quot;</highlight><highlight class="normal">).BF(snumu,<sp/></highlight><highlight class="stringliteral">&quot;mu+&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>decays.at(snumu).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nu_mu&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi+_2&quot;</highlight><highlight class="normal">).BF(snutau,<sp/></highlight><highlight class="stringliteral">&quot;tau+&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>decays.at(snutau).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nu_tau&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.upper<sp/>*=<sp/>totalBR;</highlight></codeline>
<codeline lineno="2223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.central<sp/>*=<sp/>totalBR;</highlight></codeline>
<codeline lineno="2224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.lower<sp/>*=<sp/>totalBR;</highlight></codeline>
<codeline lineno="2225"><highlight class="normal"></highlight></codeline>
<codeline lineno="2226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ALSO,<sp/>total<sp/>up<sp/>all<sp/>channels<sp/>which<sp/>look<sp/>like<sp/>hadronic<sp/>W*<sp/>decays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Total<sp/>up<sp/>the<sp/>hadronic<sp/>W<sp/>decays<sp/>first...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;W+&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;hadron&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;hadron&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi+_2&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;W+&quot;</highlight><highlight class="normal">)<sp/>*<sp/>totalBR;</highlight></codeline>
<codeline lineno="2230"><highlight class="normal"></highlight></codeline>
<codeline lineno="2231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi+_2&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;u&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;dbar&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi+_2&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;c&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;sbar&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.upper<sp/>*=<sp/>totalBR;</highlight></codeline>
<codeline lineno="2234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.central<sp/>*=<sp/>totalBR;</highlight></codeline>
<codeline lineno="2235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.lower<sp/>*=<sp/>totalBR;</highlight></codeline>
<codeline lineno="2236"><highlight class="normal"></highlight></codeline>
<codeline lineno="2237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xsecWithError.central<sp/>&lt;<sp/>xsecLimit)</highlight></codeline>
<codeline lineno="2238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/><ref refid="ColliderBit__LEP_8cpp_1abd1ca4d53792828f13dce08349673b03" kindref="member">limit_LLike</ref>(xsecWithError.central,<sp/>xsecLimit,<sp/>xsecWithError.upper<sp/>-<sp/>xsecWithError.central);</highlight></codeline>
<codeline lineno="2240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/><ref refid="ColliderBit__LEP_8cpp_1abd1ca4d53792828f13dce08349673b03" kindref="member">limit_LLike</ref>(xsecWithError.central,<sp/>xsecLimit,<sp/>xsecWithError.central<sp/>-<sp/>xsecWithError.lower);</highlight></codeline>
<codeline lineno="2244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2245"><highlight class="normal"></highlight></codeline>
<codeline lineno="2246"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2247"><highlight class="normal"></highlight></codeline>
<codeline lineno="2248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OPAL_Chargino_Leptonic_Conservative_LLike(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>result)</highlight></codeline>
<codeline lineno="2249"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::OPAL_Chargino_Leptonic_Conservative_LLike;</highlight></codeline>
<codeline lineno="2251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2253"><highlight class="normal"></highlight></codeline>
<codeline lineno="2254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">std::pow;</highlight></codeline>
<codeline lineno="2255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">std::log;</highlight></codeline>
<codeline lineno="2256"><highlight class="normal"></highlight></codeline>
<codeline lineno="2257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Spectrum&amp;<sp/>spec<sp/>=<sp/>*Dep::MSSM_spectrum;</highlight></codeline>
<codeline lineno="2258"><highlight class="normal"></highlight></codeline>
<codeline lineno="2259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SubSpectrum&amp;<sp/>mssm<sp/>=<sp/>spec.get_HE();</highlight></codeline>
<codeline lineno="2260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DecayTable&amp;<sp/>decays<sp/>=<sp/>*Dep::decay_rates;</highlight></codeline>
<codeline lineno="2261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>str<sp/>snue<sp/>=<sp/>slhahelp::mass_es_from_gauge_es(</highlight><highlight class="stringliteral">&quot;~nu_e_L&quot;</highlight><highlight class="normal">,<sp/>mssm,<sp/>tol,<sp/>LOCAL_INFO,<sp/>pt_error);</highlight></codeline>
<codeline lineno="2262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>str<sp/>snumu<sp/>=<sp/>slhahelp::mass_es_from_gauge_es(</highlight><highlight class="stringliteral">&quot;~nu_mu_L&quot;</highlight><highlight class="normal">,<sp/>mssm,<sp/>tol,<sp/>LOCAL_INFO,<sp/>pt_error);</highlight></codeline>
<codeline lineno="2263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>str<sp/>snutau<sp/>=<sp/>slhahelp::mass_es_from_gauge_es(</highlight><highlight class="stringliteral">&quot;~nu_tau_L&quot;</highlight><highlight class="normal">,<sp/>mssm,<sp/>tol,<sp/>LOCAL_INFO,<sp/>pt_error);</highlight></codeline>
<codeline lineno="2264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mass_neut1<sp/>=<sp/>spec.get(Par::Pole_Mass,1000022,<sp/>0);</highlight></codeline>
<codeline lineno="2265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mass_char1<sp/>=<sp/>spec.get(Par::Pole_Mass,1000024,<sp/>0);</highlight></codeline>
<codeline lineno="2266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mass_char2<sp/>=<sp/>spec.get(Par::Pole_Mass,1000037,<sp/>0);</highlight></codeline>
<codeline lineno="2267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mZ<sp/>=<sp/>spec.get(Par::Pole_Mass,23,<sp/>0);</highlight></codeline>
<codeline lineno="2268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>triplet&lt;double&gt;<sp/>xsecWithError;</highlight></codeline>
<codeline lineno="2269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xsecLimit,<sp/>totalBR;</highlight></codeline>
<codeline lineno="2270"><highlight class="normal"></highlight></codeline>
<codeline lineno="2271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>OPALCharginoLeptonicLimitAt208GeV<sp/>limitContainer;</highlight></codeline>
<codeline lineno="2272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>#ifdef<sp/>COLLIDERBIT_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>static<sp/>bool<sp/>dumped=false;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>if(!dumped)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>limitContainer.dumpPlotData(75.,<sp/>105.,<sp/>0.,<sp/>105.,<sp/>mZ,<sp/>&quot;lepLimitPlanev2/OPALCharginoLeptonicLimitAt208GeV.dump&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>dumped=true;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2280"><highlight class="normal"></highlight></codeline>
<codeline lineno="2281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Due<sp/>to<sp/>the<sp/>nature<sp/>of<sp/>the<sp/>analysis<sp/>details<sp/>of<sp/>the<sp/>model<sp/>independent<sp/>limit<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>paper,<sp/>the<sp/>best<sp/>we<sp/>can<sp/>do<sp/>is<sp/>to<sp/>try<sp/>these<sp/>processes<sp/>individually:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2284"><highlight class="normal"></highlight></codeline>
<codeline lineno="2285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>char1,<sp/>neut1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecLimit<sp/>=<sp/>limitContainer.limitAverage(mass_char1,<sp/>mass_neut1,<sp/>mZ);</highlight></codeline>
<codeline lineno="2287"><highlight class="normal"></highlight></codeline>
<codeline lineno="2288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError<sp/>=<sp/>*Dep::LEP208_xsec_chipm_11;</highlight></codeline>
<codeline lineno="2289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Total<sp/>up<sp/>all<sp/>channels<sp/>which<sp/>look<sp/>like<sp/>leptonic<sp/>W*<sp/>decays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Total<sp/>up<sp/>the<sp/>leptonic<sp/>W<sp/>decays<sp/>first...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;W+&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;e+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nu_e&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;W+&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;mu+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nu_mu&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;W+&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;tau+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nu_tau&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi+_1&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;W+&quot;</highlight><highlight class="normal">)<sp/>*<sp/>totalBR;</highlight></codeline>
<codeline lineno="2296"><highlight class="normal"></highlight></codeline>
<codeline lineno="2297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi+_1&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;e+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nu_e&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi+_1&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mu+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nu_mu&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi+_1&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;tau+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nu_tau&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi+_1&quot;</highlight><highlight class="normal">).BF(snue,<sp/></highlight><highlight class="stringliteral">&quot;e+&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>decays.at(snue).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nu_e&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi+_1&quot;</highlight><highlight class="normal">).BF(snumu,<sp/></highlight><highlight class="stringliteral">&quot;mu+&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>decays.at(snumu).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nu_mu&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi+_1&quot;</highlight><highlight class="normal">).BF(snutau,<sp/></highlight><highlight class="stringliteral">&quot;tau+&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>decays.at(snutau).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nu_tau&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.upper<sp/>*=<sp/>pow(totalBR,<sp/>2);</highlight></codeline>
<codeline lineno="2307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.central<sp/>*=<sp/>pow(totalBR,<sp/>2);</highlight></codeline>
<codeline lineno="2308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.lower<sp/>*=<sp/>pow(totalBR,<sp/>2);</highlight></codeline>
<codeline lineno="2309"><highlight class="normal"></highlight></codeline>
<codeline lineno="2310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xsecWithError.central<sp/>&lt;<sp/>xsecLimit)</highlight></codeline>
<codeline lineno="2311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/><ref refid="ColliderBit__LEP_8cpp_1abd1ca4d53792828f13dce08349673b03" kindref="member">limit_LLike</ref>(xsecWithError.central,<sp/>xsecLimit,<sp/>xsecWithError.upper<sp/>-<sp/>xsecWithError.central);</highlight></codeline>
<codeline lineno="2313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/><ref refid="ColliderBit__LEP_8cpp_1abd1ca4d53792828f13dce08349673b03" kindref="member">limit_LLike</ref>(xsecWithError.central,<sp/>xsecLimit,<sp/>xsecWithError.central<sp/>-<sp/>xsecWithError.lower);</highlight></codeline>
<codeline lineno="2317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2318"><highlight class="normal"></highlight></codeline>
<codeline lineno="2319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>char2,<sp/>neut1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecLimit<sp/>=<sp/>limitContainer.limitAverage(mass_char2,<sp/>mass_neut1,<sp/>mZ);</highlight></codeline>
<codeline lineno="2321"><highlight class="normal"></highlight></codeline>
<codeline lineno="2322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError<sp/>=<sp/>*Dep::LEP208_xsec_chipm_22;</highlight></codeline>
<codeline lineno="2323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Total<sp/>up<sp/>all<sp/>channels<sp/>which<sp/>look<sp/>like<sp/>leptonic<sp/>W*<sp/>decays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Total<sp/>up<sp/>the<sp/>leptonic<sp/>W<sp/>decays<sp/>first...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;W+&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;e+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nu_e&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;W+&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;mu+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nu_mu&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;W+&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;tau+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nu_tau&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi+_2&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;W+&quot;</highlight><highlight class="normal">)<sp/>*<sp/>totalBR;</highlight></codeline>
<codeline lineno="2330"><highlight class="normal"></highlight></codeline>
<codeline lineno="2331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi+_2&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;e+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nu_e&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi+_2&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mu+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nu_mu&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi+_2&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;tau+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nu_tau&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi+_2&quot;</highlight><highlight class="normal">).BF(snue,<sp/></highlight><highlight class="stringliteral">&quot;e+&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>decays.at(snue).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nu_e&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi+_2&quot;</highlight><highlight class="normal">).BF(snumu,<sp/></highlight><highlight class="stringliteral">&quot;mu+&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>decays.at(snumu).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nu_mu&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi+_2&quot;</highlight><highlight class="normal">).BF(snutau,<sp/></highlight><highlight class="stringliteral">&quot;tau+&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>decays.at(snutau).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nu_tau&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.upper<sp/>*=<sp/>pow(totalBR,<sp/>2);</highlight></codeline>
<codeline lineno="2341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.central<sp/>*=<sp/>pow(totalBR,<sp/>2);</highlight></codeline>
<codeline lineno="2342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.lower<sp/>*=<sp/>pow(totalBR,<sp/>2);</highlight></codeline>
<codeline lineno="2343"><highlight class="normal"></highlight></codeline>
<codeline lineno="2344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xsecWithError.central<sp/>&lt;<sp/>xsecLimit)</highlight></codeline>
<codeline lineno="2345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/><ref refid="ColliderBit__LEP_8cpp_1abd1ca4d53792828f13dce08349673b03" kindref="member">limit_LLike</ref>(xsecWithError.central,<sp/>xsecLimit,<sp/>xsecWithError.upper<sp/>-<sp/>xsecWithError.central);</highlight></codeline>
<codeline lineno="2347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/><ref refid="ColliderBit__LEP_8cpp_1abd1ca4d53792828f13dce08349673b03" kindref="member">limit_LLike</ref>(xsecWithError.central,<sp/>xsecLimit,<sp/>xsecWithError.central<sp/>-<sp/>xsecWithError.lower);</highlight></codeline>
<codeline lineno="2351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2352"><highlight class="normal"></highlight></codeline>
<codeline lineno="2353"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2354"><highlight class="normal"></highlight></codeline>
<codeline lineno="2355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>OPAL<sp/>limit<sp/>on<sp/>degenerate<sp/>chargino--neutralino<sp/>scenario<sp/>at<sp/>208<sp/>GeV</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sensitive<sp/>to<sp/>mass<sp/>differences<sp/>between<sp/>320<sp/>MeV<sp/>and<sp/>5<sp/>GeV</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Based<sp/>on<sp/>hep-ex/0210043</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OPAL_Degenerate_Chargino_Conservative_LLike(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>result)</highlight></codeline>
<codeline lineno="2359"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::OPAL_Degenerate_Chargino_Conservative_LLike;</highlight></codeline>
<codeline lineno="2361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Spectrum&amp;<sp/>spec<sp/>=<sp/>*Dep::MSSM_spectrum;</highlight></codeline>
<codeline lineno="2363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mass_neut1<sp/>=<sp/>spec.get(Par::Pole_Mass,1000022,<sp/>0);</highlight></codeline>
<codeline lineno="2364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mass_char1<sp/>=<sp/>spec.get(Par::Pole_Mass,1000024,<sp/>0);</highlight></codeline>
<codeline lineno="2365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mZ<sp/>=<sp/>spec.get(Par::Pole_Mass,23,<sp/>0);</highlight></codeline>
<codeline lineno="2366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>triplet&lt;double&gt;<sp/>xsecWithError;</highlight></codeline>
<codeline lineno="2367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xsecLimit;</highlight></codeline>
<codeline lineno="2368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>OPALDegenerateCharginoLimitAt208GeV<sp/>limitContainer;</highlight></codeline>
<codeline lineno="2370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>#ifdef<sp/>COLLIDERBIT_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>static<sp/>bool<sp/>dumped=false;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>if(!dumped)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>limitContainer.dumpPlotData(45.0,<sp/>95.,<sp/>0.320,<sp/>5.,<sp/>mZ,<sp/>&quot;lepLimitPlanev2/OPALDegenerateCharginoLimitAt208GeV.dump&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>dumped=true;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>char1,<sp/>neut1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecLimit<sp/>=<sp/>limitContainer.limitAverage(mass_char1,<sp/>mass_char1-abs(mass_neut1),<sp/>mZ);</highlight></codeline>
<codeline lineno="2384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError<sp/>=<sp/>*Dep::LEP208_xsec_chipm_11;</highlight></codeline>
<codeline lineno="2385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xsecWithError.central<sp/>&lt;<sp/>xsecLimit)</highlight></codeline>
<codeline lineno="2387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/><ref refid="ColliderBit__LEP_8cpp_1abd1ca4d53792828f13dce08349673b03" kindref="member">limit_LLike</ref>(xsecWithError.central,<sp/>xsecLimit,<sp/>xsecWithError.upper<sp/>-<sp/>xsecWithError.central);</highlight></codeline>
<codeline lineno="2389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/><ref refid="ColliderBit__LEP_8cpp_1abd1ca4d53792828f13dce08349673b03" kindref="member">limit_LLike</ref>(xsecWithError.central,<sp/>xsecLimit,<sp/>xsecWithError.central<sp/>-<sp/>xsecWithError.lower);</highlight></codeline>
<codeline lineno="2393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2395"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2396"><highlight class="normal"></highlight></codeline>
<codeline lineno="2397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OPAL_Chargino_All_Channels_Conservative_LLike(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>result)</highlight></codeline>
<codeline lineno="2399"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::OPAL_Chargino_All_Channels_Conservative_LLike;</highlight></codeline>
<codeline lineno="2401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tol<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1e-2,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pt_error<sp/>=<sp/>runOptions-&gt;getValueOrDef&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gauge_mixing_tolerance_invalidates_point_only&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2403"><highlight class="normal"></highlight></codeline>
<codeline lineno="2404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Spectrum&amp;<sp/>spec<sp/>=<sp/>*Dep::MSSM_spectrum;</highlight></codeline>
<codeline lineno="2405"><highlight class="normal"></highlight></codeline>
<codeline lineno="2406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SubSpectrum&amp;<sp/>mssm<sp/>=<sp/>spec.get_HE();</highlight></codeline>
<codeline lineno="2407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DecayTable&amp;<sp/>decays<sp/>=<sp/>*Dep::decay_rates;</highlight></codeline>
<codeline lineno="2408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>str<sp/>snue<sp/>=<sp/>slhahelp::mass_es_from_gauge_es(</highlight><highlight class="stringliteral">&quot;~nu_e_L&quot;</highlight><highlight class="normal">,<sp/>mssm,<sp/>tol,<sp/>LOCAL_INFO,<sp/>pt_error);</highlight></codeline>
<codeline lineno="2409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>str<sp/>snumu<sp/>=<sp/>slhahelp::mass_es_from_gauge_es(</highlight><highlight class="stringliteral">&quot;~nu_mu_L&quot;</highlight><highlight class="normal">,<sp/>mssm,<sp/>tol,<sp/>LOCAL_INFO,<sp/>pt_error);</highlight></codeline>
<codeline lineno="2410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>str<sp/>snutau<sp/>=<sp/>slhahelp::mass_es_from_gauge_es(</highlight><highlight class="stringliteral">&quot;~nu_tau_L&quot;</highlight><highlight class="normal">,<sp/>mssm,<sp/>tol,<sp/>LOCAL_INFO,<sp/>pt_error);</highlight></codeline>
<codeline lineno="2411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mass_neut1<sp/>=<sp/>spec.get(Par::Pole_Mass,1000022,<sp/>0);</highlight></codeline>
<codeline lineno="2412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mass_char1<sp/>=<sp/>spec.get(Par::Pole_Mass,1000024,<sp/>0);</highlight></codeline>
<codeline lineno="2413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mass_char2<sp/>=<sp/>spec.get(Par::Pole_Mass,1000037,<sp/>0);</highlight></codeline>
<codeline lineno="2414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mZ<sp/>=<sp/>spec.get(Par::Pole_Mass,23,<sp/>0);</highlight></codeline>
<codeline lineno="2415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>triplet&lt;double&gt;<sp/>xsecWithError;</highlight></codeline>
<codeline lineno="2416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xsecLimit,<sp/>totalBR;</highlight></codeline>
<codeline lineno="2417"><highlight class="normal"></highlight></codeline>
<codeline lineno="2418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>OPALCharginoAllChannelsLimitAt208GeV<sp/>limitContainer;</highlight></codeline>
<codeline lineno="2419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>#ifdef<sp/>COLLIDERBIT_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>static<sp/>bool<sp/>dumped=false;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>if(!dumped)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>limitContainer.dumpPlotData(75.,<sp/>105.,<sp/>0.,<sp/>105.,<sp/>mZ,<sp/>&quot;lepLimitPlanev2/OPALCharginoAllChannelsLimitAt208GeV.dump&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>dumped=true;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2427"><highlight class="normal"></highlight></codeline>
<codeline lineno="2428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Due<sp/>to<sp/>the<sp/>nature<sp/>of<sp/>the<sp/>analysis<sp/>details<sp/>of<sp/>the<sp/>model<sp/>independent<sp/>limit<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>paper,<sp/>the<sp/>best<sp/>we<sp/>can<sp/>do<sp/>is<sp/>to<sp/>try<sp/>these<sp/>processes<sp/>individually:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2431"><highlight class="normal"></highlight></codeline>
<codeline lineno="2432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>char1,<sp/>neut1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecLimit<sp/>=<sp/>limitContainer.limitAverage(mass_char1,<sp/>mass_neut1,<sp/>mZ);</highlight></codeline>
<codeline lineno="2434"><highlight class="normal"></highlight></codeline>
<codeline lineno="2435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError<sp/>=<sp/>*Dep::LEP208_xsec_chipm_11;</highlight></codeline>
<codeline lineno="2436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Total<sp/>up<sp/>all<sp/>channels<sp/>which<sp/>look<sp/>like<sp/>W*<sp/>decays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi+_1&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;W+&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi+_1&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;u&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;dbar&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi+_1&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;c&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;sbar&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi+_1&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;e+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nu_e&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi+_1&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mu+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nu_mu&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi+_1&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;tau+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nu_tau&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi+_1&quot;</highlight><highlight class="normal">).BF(snue,<sp/></highlight><highlight class="stringliteral">&quot;e+&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>decays.at(snue).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nu_e&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi+_1&quot;</highlight><highlight class="normal">).BF(snumu,<sp/></highlight><highlight class="stringliteral">&quot;mu+&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>decays.at(snumu).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nu_mu&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi+_1&quot;</highlight><highlight class="normal">).BF(snutau,<sp/></highlight><highlight class="stringliteral">&quot;tau+&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>decays.at(snutau).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nu_tau&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.upper<sp/>*=<sp/>pow(totalBR,<sp/>2);</highlight></codeline>
<codeline lineno="2451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.central<sp/>*=<sp/>pow(totalBR,<sp/>2);</highlight></codeline>
<codeline lineno="2452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.lower<sp/>*=<sp/>pow(totalBR,<sp/>2);</highlight></codeline>
<codeline lineno="2453"><highlight class="normal"></highlight></codeline>
<codeline lineno="2454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xsecWithError.central<sp/>&lt;<sp/>xsecLimit)</highlight></codeline>
<codeline lineno="2455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/><ref refid="ColliderBit__LEP_8cpp_1abd1ca4d53792828f13dce08349673b03" kindref="member">limit_LLike</ref>(xsecWithError.central,<sp/>xsecLimit,<sp/>xsecWithError.upper<sp/>-<sp/>xsecWithError.central);</highlight></codeline>
<codeline lineno="2457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/><ref refid="ColliderBit__LEP_8cpp_1abd1ca4d53792828f13dce08349673b03" kindref="member">limit_LLike</ref>(xsecWithError.central,<sp/>xsecLimit,<sp/>xsecWithError.central<sp/>-<sp/>xsecWithError.lower);</highlight></codeline>
<codeline lineno="2461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2462"><highlight class="normal"></highlight></codeline>
<codeline lineno="2463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>char2,<sp/>neut1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecLimit<sp/>=<sp/>limitContainer.limitAverage(mass_char2,<sp/>mass_neut1,<sp/>mZ);</highlight></codeline>
<codeline lineno="2465"><highlight class="normal"></highlight></codeline>
<codeline lineno="2466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError<sp/>=<sp/>*Dep::LEP208_xsec_chipm_22;</highlight></codeline>
<codeline lineno="2467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Total<sp/>up<sp/>all<sp/>channels<sp/>which<sp/>look<sp/>like<sp/>W*<sp/>decays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi+_2&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;W+&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi+_2&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;u&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;dbar&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi+_2&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;c&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;sbar&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi+_2&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;e+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nu_e&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi+_2&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mu+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nu_mu&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi+_2&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;tau+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nu_tau&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi+_2&quot;</highlight><highlight class="normal">).BF(snue,<sp/></highlight><highlight class="stringliteral">&quot;e+&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>decays.at(snue).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nu_e&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi+_2&quot;</highlight><highlight class="normal">).BF(snumu,<sp/></highlight><highlight class="stringliteral">&quot;mu+&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>decays.at(snumu).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nu_mu&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi+_2&quot;</highlight><highlight class="normal">).BF(snutau,<sp/></highlight><highlight class="stringliteral">&quot;tau+&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>decays.at(snutau).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nu_tau&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.upper<sp/>*=<sp/>pow(totalBR,<sp/>2);</highlight></codeline>
<codeline lineno="2482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.central<sp/>*=<sp/>pow(totalBR,<sp/>2);</highlight></codeline>
<codeline lineno="2483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.lower<sp/>*=<sp/>pow(totalBR,<sp/>2);</highlight></codeline>
<codeline lineno="2484"><highlight class="normal"></highlight></codeline>
<codeline lineno="2485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xsecWithError.central<sp/>&lt;<sp/>xsecLimit)</highlight></codeline>
<codeline lineno="2486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/><ref refid="ColliderBit__LEP_8cpp_1abd1ca4d53792828f13dce08349673b03" kindref="member">limit_LLike</ref>(xsecWithError.central,<sp/>xsecLimit,<sp/>xsecWithError.upper<sp/>-<sp/>xsecWithError.central);</highlight></codeline>
<codeline lineno="2488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/><ref refid="ColliderBit__LEP_8cpp_1abd1ca4d53792828f13dce08349673b03" kindref="member">limit_LLike</ref>(xsecWithError.central,<sp/>xsecLimit,<sp/>xsecWithError.central<sp/>-<sp/>xsecWithError.lower);</highlight></codeline>
<codeline lineno="2492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2493"><highlight class="normal"></highlight></codeline>
<codeline lineno="2494"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2495"><highlight class="normal"></highlight></codeline>
<codeline lineno="2496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OPAL_Neutralino_Hadronic_Conservative_LLike(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>result)</highlight></codeline>
<codeline lineno="2497"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::OPAL_Neutralino_Hadronic_Conservative_LLike;</highlight></codeline>
<codeline lineno="2499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">std::pow;</highlight></codeline>
<codeline lineno="2500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">std::log;</highlight></codeline>
<codeline lineno="2501"><highlight class="normal"></highlight></codeline>
<codeline lineno="2502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Spectrum&amp;<sp/>spec<sp/>=<sp/>*Dep::MSSM_spectrum;</highlight></codeline>
<codeline lineno="2503"><highlight class="normal"></highlight></codeline>
<codeline lineno="2504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DecayTable&amp;<sp/>decays<sp/>=<sp/>*Dep::decay_rates;</highlight></codeline>
<codeline lineno="2505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mass_neut1<sp/>=<sp/>spec.get(Par::Pole_Mass,1000022,<sp/>0);</highlight></codeline>
<codeline lineno="2506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mass_neut2<sp/>=<sp/>spec.get(Par::Pole_Mass,1000023,<sp/>0);</highlight></codeline>
<codeline lineno="2507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mass_neut3<sp/>=<sp/>spec.get(Par::Pole_Mass,1000025,<sp/>0);</highlight></codeline>
<codeline lineno="2508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mass_neut4<sp/>=<sp/>spec.get(Par::Pole_Mass,1000035,<sp/>0);</highlight></codeline>
<codeline lineno="2509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mZ<sp/>=<sp/>spec.get(Par::Pole_Mass,23,<sp/>0);</highlight></codeline>
<codeline lineno="2510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>triplet&lt;double&gt;<sp/>xsecWithError;</highlight></codeline>
<codeline lineno="2511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xsecLimit,<sp/>totalBR;</highlight></codeline>
<codeline lineno="2512"><highlight class="normal"></highlight></codeline>
<codeline lineno="2513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>OPALNeutralinoHadronicLimitAt208GeV<sp/>limitContainer;</highlight></codeline>
<codeline lineno="2514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>#ifdef<sp/>COLLIDERBIT_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>static<sp/>bool<sp/>dumped=false;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>if(!dumped)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>limitContainer.dumpPlotData(0.,<sp/>200.,<sp/>0.,<sp/>100.,<sp/>mZ,<sp/>&quot;lepLimitPlanev2/OPALNeutralinoHadronicLimitAt208GeV.dump&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>dumped=true;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2522"><highlight class="normal"></highlight></codeline>
<codeline lineno="2523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Due<sp/>to<sp/>the<sp/>nature<sp/>of<sp/>the<sp/>analysis<sp/>details<sp/>of<sp/>the<sp/>model<sp/>independent<sp/>limit<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>paper,<sp/>the<sp/>best<sp/>we<sp/>can<sp/>do<sp/>is<sp/>to<sp/>try<sp/>these<sp/>processes<sp/>individually:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2526"><highlight class="normal"></highlight></codeline>
<codeline lineno="2527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>neut2,<sp/>neut1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecLimit<sp/>=<sp/>limitContainer.limitAverage(mass_neut2,<sp/>mass_neut1,<sp/>mZ);</highlight></codeline>
<codeline lineno="2529"><highlight class="normal"></highlight></codeline>
<codeline lineno="2530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError<sp/>=<sp/>*Dep::LEP208_xsec_chi00_12;</highlight></codeline>
<codeline lineno="2531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Total<sp/>up<sp/>all<sp/>channels<sp/>which<sp/>look<sp/>like<sp/>Z*<sp/>decays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;Z0&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;hadron&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;hadron&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi0_2&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Z0&quot;</highlight><highlight class="normal">)<sp/>*<sp/>totalBR;</highlight></codeline>
<codeline lineno="2534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi0_2&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ubar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;u&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi0_2&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;dbar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;d&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi0_2&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;cbar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;c&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi0_2&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;sbar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;s&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi0_2&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;bbar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.upper<sp/>*=<sp/>totalBR;</highlight></codeline>
<codeline lineno="2540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.central<sp/>*=<sp/>totalBR;</highlight></codeline>
<codeline lineno="2541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.lower<sp/>*=<sp/>totalBR;</highlight></codeline>
<codeline lineno="2542"><highlight class="normal"></highlight></codeline>
<codeline lineno="2543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xsecWithError.central<sp/>&lt;<sp/>xsecLimit)</highlight></codeline>
<codeline lineno="2544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/><ref refid="ColliderBit__LEP_8cpp_1abd1ca4d53792828f13dce08349673b03" kindref="member">limit_LLike</ref>(xsecWithError.central,<sp/>xsecLimit,<sp/>xsecWithError.upper<sp/>-<sp/>xsecWithError.central);</highlight></codeline>
<codeline lineno="2546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/><ref refid="ColliderBit__LEP_8cpp_1abd1ca4d53792828f13dce08349673b03" kindref="member">limit_LLike</ref>(xsecWithError.central,<sp/>xsecLimit,<sp/>xsecWithError.central<sp/>-<sp/>xsecWithError.lower);</highlight></codeline>
<codeline lineno="2550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2551"><highlight class="normal"></highlight></codeline>
<codeline lineno="2552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>neut3,<sp/>neut1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecLimit<sp/>=<sp/>limitContainer.limitAverage(mass_neut3,<sp/>mass_neut1,<sp/>mZ);</highlight></codeline>
<codeline lineno="2554"><highlight class="normal"></highlight></codeline>
<codeline lineno="2555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError<sp/>=<sp/>*Dep::LEP208_xsec_chi00_13;</highlight></codeline>
<codeline lineno="2556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Total<sp/>up<sp/>all<sp/>channels<sp/>which<sp/>look<sp/>like<sp/>Z*<sp/>decays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;Z0&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;hadron&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;hadron&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi0_3&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Z0&quot;</highlight><highlight class="normal">)<sp/>*<sp/>totalBR;</highlight></codeline>
<codeline lineno="2559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi0_3&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ubar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;u&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi0_3&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;dbar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;d&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi0_3&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;cbar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;c&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi0_3&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;sbar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;s&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi0_3&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;bbar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.upper<sp/>*=<sp/>totalBR;</highlight></codeline>
<codeline lineno="2565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.central<sp/>*=<sp/>totalBR;</highlight></codeline>
<codeline lineno="2566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.lower<sp/>*=<sp/>totalBR;</highlight></codeline>
<codeline lineno="2567"><highlight class="normal"></highlight></codeline>
<codeline lineno="2568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xsecWithError.central<sp/>&lt;<sp/>xsecLimit)</highlight></codeline>
<codeline lineno="2569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/><ref refid="ColliderBit__LEP_8cpp_1abd1ca4d53792828f13dce08349673b03" kindref="member">limit_LLike</ref>(xsecWithError.central,<sp/>xsecLimit,<sp/>xsecWithError.upper<sp/>-<sp/>xsecWithError.central);</highlight></codeline>
<codeline lineno="2571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/><ref refid="ColliderBit__LEP_8cpp_1abd1ca4d53792828f13dce08349673b03" kindref="member">limit_LLike</ref>(xsecWithError.central,<sp/>xsecLimit,<sp/>xsecWithError.central<sp/>-<sp/>xsecWithError.lower);</highlight></codeline>
<codeline lineno="2575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2576"><highlight class="normal"></highlight></codeline>
<codeline lineno="2577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>neut4,<sp/>neut1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecLimit<sp/>=<sp/>limitContainer.limitAverage(mass_neut4,<sp/>mass_neut1,<sp/>mZ);</highlight></codeline>
<codeline lineno="2579"><highlight class="normal"></highlight></codeline>
<codeline lineno="2580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError<sp/>=<sp/>*Dep::LEP208_xsec_chi00_14;</highlight></codeline>
<codeline lineno="2581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Total<sp/>up<sp/>all<sp/>channels<sp/>which<sp/>look<sp/>like<sp/>Z*<sp/>decays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;Z0&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;hadron&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;hadron&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi0_4&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Z0&quot;</highlight><highlight class="normal">)<sp/>*<sp/>totalBR;</highlight></codeline>
<codeline lineno="2584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi0_4&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ubar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;u&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi0_4&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;dbar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;d&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi0_4&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;cbar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;c&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi0_4&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;sbar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;s&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalBR<sp/>+=<sp/>decays.at(</highlight><highlight class="stringliteral">&quot;~chi0_4&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;bbar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.upper<sp/>*=<sp/>totalBR;</highlight></codeline>
<codeline lineno="2590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.central<sp/>*=<sp/>totalBR;</highlight></codeline>
<codeline lineno="2591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsecWithError.lower<sp/>*=<sp/>totalBR;</highlight></codeline>
<codeline lineno="2592"><highlight class="normal"></highlight></codeline>
<codeline lineno="2593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xsecWithError.central<sp/>&lt;<sp/>xsecLimit)</highlight></codeline>
<codeline lineno="2594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/><ref refid="ColliderBit__LEP_8cpp_1abd1ca4d53792828f13dce08349673b03" kindref="member">limit_LLike</ref>(xsecWithError.central,<sp/>xsecLimit,<sp/>xsecWithError.upper<sp/>-<sp/>xsecWithError.central);</highlight></codeline>
<codeline lineno="2596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/><ref refid="ColliderBit__LEP_8cpp_1abd1ca4d53792828f13dce08349673b03" kindref="member">limit_LLike</ref>(xsecWithError.central,<sp/>xsecLimit,<sp/>xsecWithError.central<sp/>-<sp/>xsecWithError.lower);</highlight></codeline>
<codeline lineno="2600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2601"><highlight class="normal"></highlight></codeline>
<codeline lineno="2602"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2603"><highlight class="normal"></highlight></codeline>
<codeline lineno="2605"><highlight class="normal"></highlight></codeline>
<codeline lineno="2606"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>L3_Gravitino_LLike(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>result)<sp/>{</highlight></codeline>
<codeline lineno="2619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Unpack<sp/>neutralino<sp/>&amp;<sp/>gravitino<sp/>mass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Pipes::L3_Gravitino_LLike;</highlight></codeline>
<codeline lineno="2621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Spectrum&amp;<sp/>spectrum<sp/>=<sp/>*Dep::MSSM_spectrum;</highlight></codeline>
<codeline lineno="2622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m_chi<sp/>=<sp/>spectrum.get(Par::Pole_Mass,<sp/>1000022,<sp/>0);</highlight></codeline>
<codeline lineno="2623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m_gravitino<sp/>=<sp/>spectrum.get(Par::Pole_Mass,<sp/>1000039,<sp/>0);</highlight></codeline>
<codeline lineno="2624"><highlight class="normal"></highlight></codeline>
<codeline lineno="2625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>relevant<sp/>branching<sp/>ratio</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DecayTable&amp;<sp/>decay_rates<sp/>=<sp/>*Dep::decay_rates;</highlight></codeline>
<codeline lineno="2627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>BF<sp/>=<sp/>decay_rates.at(</highlight><highlight class="stringliteral">&quot;~chi0_1&quot;</highlight><highlight class="normal">).BF(</highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;~G&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2628"><highlight class="normal"></highlight></codeline>
<codeline lineno="2629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Production<sp/>cross<sp/>section<sp/>of<sp/>two<sp/>lightest<sp/>neutralinos<sp/>at<sp/>207<sp/>GeV</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>production_xsec<sp/>=<sp/>*Dep::LEP207_xsec_chi00_11;</highlight></codeline>
<codeline lineno="2631"><highlight class="normal"></highlight></codeline>
<codeline lineno="2632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>product<sp/>of<sp/>cross<sp/>section<sp/>and<sp/>branching<sp/>ratio<sp/>squared</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>triplet&lt;double&gt;<sp/>xsec;</highlight></codeline>
<codeline lineno="2634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsec.upper<sp/>=<sp/>production_xsec.upper<sp/>*<sp/>pow(BF,<sp/>2);</highlight></codeline>
<codeline lineno="2635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsec.central<sp/>=<sp/>production_xsec.central<sp/>*<sp/>pow(BF,<sp/>2);</highlight></codeline>
<codeline lineno="2636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xsec.lower<sp/>=<sp/>production_xsec.lower<sp/>*<sp/>pow(BF,<sp/>2);</highlight></codeline>
<codeline lineno="2637"><highlight class="normal"></highlight></codeline>
<codeline lineno="2638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Construct<sp/>object<sp/>for<sp/>fetching<sp/>limit<sp/>(do<sp/>this<sp/>once<sp/>only,<sp/>hence<sp/>static)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>fig6c<sp/>=<sp/>GAMBIT_DIR<sp/></highlight><highlight class="stringliteral">&quot;/ColliderBit/data/scraped_fig6c.dat&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>L3Gravitino<sp/>=<sp/>ImageLimit(fig6c,<sp/>0.,<sp/>103.,<sp/>0.,<sp/>103.);</highlight></codeline>
<codeline lineno="2641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>limit<sp/>=<sp/>L3Gravitino.get_limit(m_chi,<sp/>m_gravitino);</highlight></codeline>
<codeline lineno="2642"><highlight class="normal"></highlight></codeline>
<codeline lineno="2643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Resulting<sp/>log-likelihood,<sp/>taking<sp/>into<sp/>account<sp/>theoretical<sp/>uncertainty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="ColliderBit__LEP_8cpp_1abd1ca4d53792828f13dce08349673b03" kindref="member">limit_LLike</ref>(xsec.central,<sp/>limit,<sp/>xsec.upper<sp/>-<sp/>xsec.central);</highlight></codeline>
<codeline lineno="2645"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2646"><highlight class="normal"></highlight></codeline>
<codeline lineno="2647"><highlight class="normal"><sp/><sp/>}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>ColliderBit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2648"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Gambit</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/src/ColliderBit_LEP.cpp"/>
  </compounddef>
</doxygen>
