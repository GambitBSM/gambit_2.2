<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="classGambit_1_1ColliderBit_1_1MC__convergence__checker" kind="class" language="C++" prot="public">
    <compoundname>Gambit::ColliderBit::MC_convergence_checker</compoundname>
    <includes refid="MC__convergence_8hpp" local="no">MC_convergence.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classGambit_1_1ColliderBit_1_1MC__convergence__checker_1a4093449f6add51f15b668e34a6f185c4" prot="private" static="no" mutable="no">
        <type>const <ref refid="structGambit_1_1ColliderBit_1_1convergence__settings" kindref="compound">convergence_settings</ref> *</type>
        <definition>const convergence_settings* Gambit::ColliderBit::MC_convergence_checker::_settings</definition>
        <argsstring></argsstring>
        <name>_settings</name>
        <qualifiedname>Gambit::ColliderBit::MC_convergence_checker::_settings</qualifiedname>
        <briefdescription>
<para>A pointer to the convergence settings to use. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/include/gambit/ColliderBit/MC_convergence.hpp" line="50" column="36" bodyfile="C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/include/gambit/ColliderBit/MC_convergence.hpp" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGambit_1_1ColliderBit_1_1MC__convergence__checker_1aed8ad7171fd9f97bcda34309d151bf6d" prot="private" static="no" mutable="no">
        <type>std::vector&lt; int &gt; *</type>
        <definition>std::vector&lt;int&gt;* Gambit::ColliderBit::MC_convergence_checker::n_signals</definition>
        <argsstring></argsstring>
        <name>n_signals</name>
        <qualifiedname>Gambit::ColliderBit::MC_convergence_checker::n_signals</qualifiedname>
        <briefdescription>
<para>Pointer to an array holding the signal counts on each thread. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/include/gambit/ColliderBit/MC_convergence.hpp" line="53" column="21" bodyfile="C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/include/gambit/ColliderBit/MC_convergence.hpp" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGambit_1_1ColliderBit_1_1MC__convergence__checker_1af1bcb21f70c9fd6b3d66bf09de506802" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Gambit::ColliderBit::MC_convergence_checker::n_threads</definition>
        <argsstring></argsstring>
        <name>n_threads</name>
        <qualifiedname>Gambit::ColliderBit::MC_convergence_checker::n_threads</qualifiedname>
        <briefdescription>
<para>Total number of threads that the checker is configured to deal with. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/include/gambit/ColliderBit/MC_convergence.hpp" line="56" column="13" bodyfile="C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/include/gambit/ColliderBit/MC_convergence.hpp" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGambit_1_1ColliderBit_1_1MC__convergence__checker_1a5a20f17aaa3c08c18a49670637728362" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Gambit::ColliderBit::MC_convergence_checker::converged</definition>
        <argsstring></argsstring>
        <name>converged</name>
        <qualifiedname>Gambit::ColliderBit::MC_convergence_checker::converged</qualifiedname>
        <briefdescription>
<para>Flag indicating if everything tracked by this instance is converged. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/include/gambit/ColliderBit/MC_convergence.hpp" line="59" column="14" bodyfile="C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/include/gambit/ColliderBit/MC_convergence.hpp" bodystart="59" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classGambit_1_1ColliderBit_1_1MC__convergence__checker_1a8e66ef0e7820f62e48ffe7166617e18c" prot="private" static="yes" mutable="no">
        <type>std::map&lt; const <ref refid="classGambit_1_1ColliderBit_1_1MC__convergence__checker" kindref="compound">MC_convergence_checker</ref> *const, bool &gt;</type>
        <definition>std::map&lt; const MC_convergence_checker *const, bool &gt; Gambit::ColliderBit::MC_convergence_checker::convergence_map</definition>
        <argsstring></argsstring>
        <name>convergence_map</name>
        <qualifiedname>Gambit::ColliderBit::MC_convergence_checker::convergence_map</qualifiedname>
        <briefdescription>
<para>A map containing pointers to all instances of this class. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/include/gambit/ColliderBit/MC_convergence.hpp" line="62" column="25" bodyfile="C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/include/gambit/ColliderBit/MC_convergence.hpp" bodystart="62" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classGambit_1_1ColliderBit_1_1MC__convergence__checker_1a75f6f3c1770b28cbc2db59ab9cb11f64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Gambit::ColliderBit::MC_convergence_checker::MC_convergence_checker</definition>
        <argsstring>()</argsstring>
        <name>MC_convergence_checker</name>
        <qualifiedname>Gambit::ColliderBit::MC_convergence_checker::MC_convergence_checker</qualifiedname>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/include/gambit/ColliderBit/MC_convergence.hpp" line="67" column="9" bodyfile="C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/src/MC_convergence.cpp" bodystart="39" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1ColliderBit_1_1MC__convergence__checker_1ae7dee5a7171188ee380a5fb580941dc9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Gambit::ColliderBit::MC_convergence_checker::~MC_convergence_checker</definition>
        <argsstring>()</argsstring>
        <name>~MC_convergence_checker</name>
        <qualifiedname>Gambit::ColliderBit::MC_convergence_checker::~MC_convergence_checker</qualifiedname>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
<para>Deconstructor. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/include/gambit/ColliderBit/MC_convergence.hpp" line="70" column="9" bodyfile="C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/src/MC_convergence.cpp" bodystart="46" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1ColliderBit_1_1MC__convergence__checker_1af1627825cc43b8645a84820ee0fda145" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::ColliderBit::MC_convergence_checker::init</definition>
        <argsstring>(const convergence_settings &amp;)</argsstring>
        <name>init</name>
        <qualifiedname>Gambit::ColliderBit::MC_convergence_checker::init</qualifiedname>
        <param>
          <type>const <ref refid="structGambit_1_1ColliderBit_1_1convergence__settings" kindref="compound">convergence_settings</ref> &amp;</type>
          <defname>settings</defname>
        </param>
        <briefdescription>
<para>Initialise (or re-initialise) the object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/include/gambit/ColliderBit/MC_convergence.hpp" line="73" column="14" bodyfile="C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/src/MC_convergence.cpp" bodystart="52" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1ColliderBit_1_1MC__convergence__checker_1a16910fb826bc1670239f83f589b7423e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::ColliderBit::MC_convergence_checker::set_settings</definition>
        <argsstring>(const convergence_settings &amp;)</argsstring>
        <name>set_settings</name>
        <qualifiedname>Gambit::ColliderBit::MC_convergence_checker::set_settings</qualifiedname>
        <param>
          <type>const <ref refid="structGambit_1_1ColliderBit_1_1convergence__settings" kindref="compound">convergence_settings</ref> &amp;</type>
          <defname>settings</defname>
        </param>
        <briefdescription>
<para>Provide a pointer to the convergence settings. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/include/gambit/ColliderBit/MC_convergence.hpp" line="76" column="14" bodyfile="C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/src/MC_convergence.cpp" bodystart="59" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1ColliderBit_1_1MC__convergence__checker_1ab0296c712c6b33d1479ef419897b1706" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::ColliderBit::MC_convergence_checker::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <qualifiedname>Gambit::ColliderBit::MC_convergence_checker::clear</qualifiedname>
        <briefdescription>
<para>Clear all convergence data (for all threads) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/include/gambit/ColliderBit/MC_convergence.hpp" line="79" column="14" bodyfile="C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/src/MC_convergence.cpp" bodystart="66" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1ColliderBit_1_1MC__convergence__checker_1acf03d9e109000753dcdcd223378624ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gambit::ColliderBit::MC_convergence_checker::update</definition>
        <argsstring>(const AnalysisContainer &amp;)</argsstring>
        <name>update</name>
        <qualifiedname>Gambit::ColliderBit::MC_convergence_checker::update</qualifiedname>
        <param>
          <type>const <ref refid="classGambit_1_1ColliderBit_1_1AnalysisContainer" kindref="compound">AnalysisContainer</ref> &amp;</type>
          <defname>ac</defname>
        </param>
        <briefdescription>
<para>Update the convergence data. This is the only routine meant to be called in parallel. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/include/gambit/ColliderBit/MC_convergence.hpp" line="82" column="14" bodyfile="C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/src/MC_convergence.cpp" bodystart="79" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="classGambit_1_1ColliderBit_1_1MC__convergence__checker_1a0d93bbdd3677854192e6bf6b1acb28e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Gambit::ColliderBit::MC_convergence_checker::achieved</definition>
        <argsstring>(const AnalysisContainer &amp;ac)</argsstring>
        <name>achieved</name>
        <qualifiedname>Gambit::ColliderBit::MC_convergence_checker::achieved</qualifiedname>
        <param>
          <type>const <ref refid="classGambit_1_1ColliderBit_1_1AnalysisContainer" kindref="compound">AnalysisContainer</ref> &amp;</type>
          <declname>ac</declname>
        </param>
        <briefdescription>
<para>Check if convergence has been achieved across threads, and across all instances of this class. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/include/gambit/ColliderBit/MC_convergence.hpp" line="85" column="14" bodyfile="C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/src/MC_convergence.cpp" bodystart="102" bodyend="222"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Helper class for testing for convergence of analyses. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/include/gambit/ColliderBit/MC_convergence.hpp" line="45" column="5" bodyfile="C:/Hugo/Sites/gambit_2.2_sphinx/ColliderBit/include/gambit/ColliderBit/MC_convergence.hpp" bodystart="46" bodyend="86"/>
    <listofallmembers>
      <member refid="classGambit_1_1ColliderBit_1_1MC__convergence__checker_1a4093449f6add51f15b668e34a6f185c4" prot="private" virt="non-virtual"><scope>Gambit::ColliderBit::MC_convergence_checker</scope><name>_settings</name></member>
      <member refid="classGambit_1_1ColliderBit_1_1MC__convergence__checker_1a0d93bbdd3677854192e6bf6b1acb28e3" prot="public" virt="non-virtual"><scope>Gambit::ColliderBit::MC_convergence_checker</scope><name>achieved</name></member>
      <member refid="classGambit_1_1ColliderBit_1_1MC__convergence__checker_1ab0296c712c6b33d1479ef419897b1706" prot="public" virt="non-virtual"><scope>Gambit::ColliderBit::MC_convergence_checker</scope><name>clear</name></member>
      <member refid="classGambit_1_1ColliderBit_1_1MC__convergence__checker_1a5a20f17aaa3c08c18a49670637728362" prot="private" virt="non-virtual"><scope>Gambit::ColliderBit::MC_convergence_checker</scope><name>converged</name></member>
      <member refid="classGambit_1_1ColliderBit_1_1MC__convergence__checker_1a8e66ef0e7820f62e48ffe7166617e18c" prot="private" virt="non-virtual"><scope>Gambit::ColliderBit::MC_convergence_checker</scope><name>convergence_map</name></member>
      <member refid="classGambit_1_1ColliderBit_1_1MC__convergence__checker_1af1627825cc43b8645a84820ee0fda145" prot="public" virt="non-virtual"><scope>Gambit::ColliderBit::MC_convergence_checker</scope><name>init</name></member>
      <member refid="classGambit_1_1ColliderBit_1_1MC__convergence__checker_1a75f6f3c1770b28cbc2db59ab9cb11f64" prot="public" virt="non-virtual"><scope>Gambit::ColliderBit::MC_convergence_checker</scope><name>MC_convergence_checker</name></member>
      <member refid="classGambit_1_1ColliderBit_1_1MC__convergence__checker_1aed8ad7171fd9f97bcda34309d151bf6d" prot="private" virt="non-virtual"><scope>Gambit::ColliderBit::MC_convergence_checker</scope><name>n_signals</name></member>
      <member refid="classGambit_1_1ColliderBit_1_1MC__convergence__checker_1af1bcb21f70c9fd6b3d66bf09de506802" prot="private" virt="non-virtual"><scope>Gambit::ColliderBit::MC_convergence_checker</scope><name>n_threads</name></member>
      <member refid="classGambit_1_1ColliderBit_1_1MC__convergence__checker_1a16910fb826bc1670239f83f589b7423e" prot="public" virt="non-virtual"><scope>Gambit::ColliderBit::MC_convergence_checker</scope><name>set_settings</name></member>
      <member refid="classGambit_1_1ColliderBit_1_1MC__convergence__checker_1acf03d9e109000753dcdcd223378624ba" prot="public" virt="non-virtual"><scope>Gambit::ColliderBit::MC_convergence_checker</scope><name>update</name></member>
      <member refid="classGambit_1_1ColliderBit_1_1MC__convergence__checker_1ae7dee5a7171188ee380a5fb580941dc9" prot="public" virt="non-virtual"><scope>Gambit::ColliderBit::MC_convergence_checker</scope><name>~MC_convergence_checker</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
